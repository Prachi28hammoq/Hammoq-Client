[{"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\index.js":"1","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\reportWebVitals.js":"2","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\App.js":"3","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\context\\AuthContext.js":"4","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\hooks\\auth-hook.js":"5","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\signup\\SignupPage.js":"6","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\mainpage\\MainPage.js":"7","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\login\\LoginPage.js":"8","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\services\\Axios.jsx":"9","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\DashboardPage.js":"10","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\mainpage\\components\\mainpageappbar\\MainAppBar.js":"11","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\analyticscards\\AnalyticsCards.js":"12","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\filterbar\\FilterBar.js":"13","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\datatable\\DataTable.js":"14","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\mainpage\\components\\mainpageappbar\\AccountInformation.js":"15","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\referralcode\\ReferralCodeComponent.js":"16","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\mainpage\\components\\mainpageappbar\\mainappbartab\\MainAppBarTab.js":"17","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\hooks\\usewindowsize-hook.js":"18","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\analyticscards\\totalreferralscard\\TotalReferralsCard.js":"19","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\analyticscards\\totallistingscard\\TotalListingsCard.js":"20","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\referralcode\\components\\ReferralCodeCard.js":"21","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\referralcode\\components\\CreateReferralCodeModal.js":"22","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\analyticscards\\totalearningscard\\TotalEarningsCard.js":"23","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\utilities\\utilities.js":"24"},{"size":500,"mtime":1615295627042,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1615295627176,"results":"27","hashOfConfig":"26"},{"size":1314,"mtime":1615295626879,"results":"28","hashOfConfig":"26"},{"size":201,"mtime":1615292102093,"results":"29","hashOfConfig":"26"},{"size":2517,"mtime":1615293672270,"results":"30","hashOfConfig":"26"},{"size":3170,"mtime":1615294111774,"results":"31","hashOfConfig":"26"},{"size":456,"mtime":1615292102410,"results":"32","hashOfConfig":"26"},{"size":3052,"mtime":1615294074251,"results":"33","hashOfConfig":"26"},{"size":800,"mtime":1615296325463,"results":"34","hashOfConfig":"26"},{"size":5854,"mtime":1615293939958,"results":"35","hashOfConfig":"26"},{"size":1227,"mtime":1615292102462,"results":"36","hashOfConfig":"26"},{"size":850,"mtime":1615292102175,"results":"37","hashOfConfig":"26"},{"size":4508,"mtime":1615292102309,"results":"38","hashOfConfig":"26"},{"size":1403,"mtime":1615292102281,"results":"39","hashOfConfig":"26"},{"size":2329,"mtime":1615294010649,"results":"40","hashOfConfig":"26"},{"size":1569,"mtime":1615293811821,"results":"41","hashOfConfig":"26"},{"size":457,"mtime":1615292102487,"results":"42","hashOfConfig":"26"},{"size":647,"mtime":1615292102127,"results":"43","hashOfConfig":"26"},{"size":513,"mtime":1615292102254,"results":"44","hashOfConfig":"26"},{"size":514,"mtime":1615292102228,"results":"45","hashOfConfig":"26"},{"size":530,"mtime":1615292102360,"results":"46","hashOfConfig":"26"},{"size":2904,"mtime":1615293872831,"results":"47","hashOfConfig":"26"},{"size":615,"mtime":1615292102203,"results":"48","hashOfConfig":"26"},{"size":298,"mtime":1615292102527,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19c5oga",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\index.js",[],"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\reportWebVitals.js",[],"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\App.js",["112","113","114"],"import React, { useState, useCallback, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport SignupPage from './pages/signup/SignupPage.js';\nimport LoginPage from './pages/login/LoginPage.js';\nimport MainPage from './pages/mainpage/MainPage.js';\nimport 'semantic-ui-css/semantic.min.css';\nimport { AuthContext } from '../src/context/AuthContext.js';\nimport { useAuth } from '../src/hooks/auth-hook.js';\n\n\nfunction App() {\n\n  const { token, login, logout, userFullName } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\"><MainPage /></Route>\n        <Redirect to=\"/dashboard\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/signup\" exact><SignupPage /></Route>\n        <Route path=\"/login\" exact><LoginPage /></Route>\n        <Redirect to=\"/login\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider\n        value={{\n          isLoggedIn: !!token,\n          token: token,\n          userFullName: userFullName,\n          login: login,\n          logout: logout\n        }}>\n        <BrowserRouter>\n          {routes}\n        </BrowserRouter>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\context\\AuthContext.js",[],"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\hooks\\auth-hook.js",["115","116"],"import { useState, useCallback, useEffect } from 'react';\r\nimport Axios from '../services/Axios.jsx';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userFullName, setUserFullName] = useState(false);\r\n\r\n    const login = useCallback((userFullName, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserFullName(userFullName);\r\n        const tokenExpirationDate =\r\n            expirationDate || new Date(new Date().getTime() + 30 * 60 * 1000);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem(\r\n            'userData',\r\n            JSON.stringify({\r\n                userFullName: userFullName,\r\n                token: token,\r\n                expiration: tokenExpirationDate.toISOString()\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserFullName(null);\r\n        localStorage.removeItem('userData');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpirationDate]);\r\n\r\n    useEffect(async () => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if (\r\n            storedData &&\r\n            storedData.token &&\r\n            new Date(storedData.expiration) > new Date()\r\n        ) {\r\n            if (await isUserSessionActive())\r\n                login(storedData.userFullName, storedData.token, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    const isUserSessionActive = async () => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n        if (storedData && storedData.token) {\r\n\r\n            let res = await Axios.get('/authentication/userSessionStatus', {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + storedData.token\r\n                }\r\n            });\r\n\r\n            if (res.data.session == 'ACTIVE')\r\n                return true;\r\n            else\r\n                return false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    return { token, login, logout, userFullName };\r\n};","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\signup\\SignupPage.js",["117","118","119","120","121"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Message } from 'semantic-ui-react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './SignupPage.css';\r\nimport Axios from '../../services/Axios.jsx';\r\n\r\nconst SignupPage = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [fullName, setFullName] = useState('');\r\n    const [emailId, setEmailId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const navigateToLoginPage = () => {\r\n        history.push('/login');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setFullName('');\r\n        setEmailId('');\r\n        setPassword('');\r\n    }\r\n\r\n    const signupUser = async () => {\r\n\r\n        let res = {\r\n            data: {\r\n                httpStatus: 'Error',\r\n                errors: ['Something\\'s not right. Unable to contact server']\r\n            }\r\n        }\r\n\r\n        try {\r\n            res = await Axios.post('/signup', {\r\n                fullName,\r\n                emailId,\r\n                password\r\n            });\r\n        } catch (error) { }\r\n\r\n\r\n        if (res.data.httpStatus == 'Success') {\r\n            setErrors([]);\r\n            setSuccessMessage(res.data.message);\r\n            clearForm();\r\n        }\r\n\r\n        if (res.data.httpStatus == 'Error') {\r\n            setSuccessMessage('');\r\n            setErrors(res.data.errors);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup-page-container\">\r\n            <div className='signup-page-box'>\r\n                <Form>\r\n                    <Form.Field>\r\n                        <label>Full Name</label>\r\n                        <input value={fullName} placeholder='Full Name' onChange={(e) => setFullName(e.target.value)} />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Email Id</label>\r\n                        <input value={emailId} placeholder='Email Id' onChange={(e) => setEmailId(e.target.value)} />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Password</label>\r\n                        <input type=\"password\" value={password} placeholder='Password' onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Field>\r\n                    <div style={{ display: 'flex', justifyContent: 'flex-end', margin: '10px 0px' }}>\r\n                        <Button color=\"blue\" onClick={signupUser}>Signup</Button>\r\n                    </div>\r\n                    <div style={{ marginTop: '5px' }}>\r\n                        <label>Existing Affiliate? </label><a href=\"javascript:void(0)\" onClick={navigateToLoginPage}>Login</a>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n            <div className=\"signup-page-success-message\">{successMessage.length > 0 ? <Message color=\"green\">{successMessage}</Message> : null}</div>\r\n            <div className=\"signup-page-error-messages\">{errors.length > 0 ? <Message warning list={errors} /> : null}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupPage;","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\mainpage\\MainPage.js",["122"],"import React, { useState } from 'react';\r\nimport './MainPage.css';\r\nimport MainAppBar from '../mainpage/components/mainpageappbar/MainAppBar.js';\r\nimport DashboardPage from '../dashboard/DashboardPage.js';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst MainPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <MainAppBar />\r\n            <Route path=\"/dashboard\" exact><DashboardPage /></Route>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\login\\LoginPage.js",["123","124","125","126","127"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Form, Message } from 'semantic-ui-react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport Axios from '../../services/Axios.jsx';\r\nimport { AuthContext } from '../../context/AuthContext.js';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [emailId, setEmailId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const navigateToSignupPage = () => {\r\n        history.push('/signup');\r\n    }\r\n    \r\n    const clearForm = () => {\r\n        setEmailId('');\r\n        setPassword('');\r\n    }\r\n\r\n    const loginInfluencer = async () => {\r\n\r\n        let res = {\r\n            data: {\r\n                httpStatus: 'Error',\r\n                errors: ['Something\\'s not right. Unable to contact server']\r\n            }\r\n        }\r\n\r\n        try {\r\n            res = await Axios.post('/authentication/login', {\r\n                emailId,\r\n                password\r\n            });\r\n        } catch (error) {}\r\n\r\n        if (res.data.httpStatus == 'Success') {\r\n            setErrors([]);\r\n            setSuccessMessage(res.data.message);\r\n            clearForm();\r\n            setTimeout(() => {auth.login(res.data.userFullName, res.data.token)}, 3000);\r\n        }\r\n\r\n        if (res.data.httpStatus == 'Error') {\r\n            setSuccessMessage('');\r\n            setErrors(res.data.errors);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-page-container\">\r\n            <div className='login-page-box'>\r\n                <Form>\r\n                    <Form.Field>\r\n                        <label>Email Id</label>\r\n                        <input value={emailId} onChange={(e) => setEmailId(e.target.value)} placeholder='Email Id' />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Password</label>\r\n                        <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder='Password' />\r\n                    </Form.Field>\r\n                    <div style={{display: 'flex', justifyContent: 'flex-end', margin: '10px 0px'}}>\r\n                        <Button color=\"blue\" onClick={loginInfluencer}>Login</Button>\r\n                    </div>\r\n                    <div style={{ marginTop: '5px' }}>\r\n                        <label>New Affiliate? </label><a href=\"javascript:void(0)\" onClick={navigateToSignupPage}>Signup</a>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n            <div className=\"login-page-success-message\">{successMessage.length > 0 ? <Message color=\"green\">{successMessage}</Message> : null}</div>\r\n            <div className=\"login-page-error-messages\">{errors.length > 0 ? <Message warning list={errors} /> : null}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\services\\Axios.jsx",["128"],"import Axios from \"axios\";\n\nvar baseURL = \"\";\nvar assetsURL = \"\";\n\nif(process.env.REACT_APP_STAGE === 'devlocal')\n{\n\tbaseURL = \"http://localhost:8000/api\";\n\tassetsURL = \"http://localhost:8000/assets/\";\n}\n\nelse if(process.env.REACT_APP_STAGE === 'devhost')\n{\n\tbaseURL = \"https://devapi.avoidpoints.com/api\";\n\tassetsURL = \"https://devapi.avoidpoints.com/assets/\";\n}\n\nelse if(process.env.REACT_APP_STAGE === 'staging')\n{\n\tbaseURL = \"https://stageapi.avoidpoints.com/api\";\n\tassetsURL = \"https://stageapi.avoidpoints.com/assets/\";\n}\n\nelse if(process.env.REACT_APP_STAGE === 'production')\n{\n\tbaseURL = \"https://api.hammoq.com/api\";\n\tassetsURL = \"https://api.hammoq.com/assets/\";\n}\n\nAxios.defaults.baseURL = \"http://localhost:8000/api\" + \"/influencer\";\n\nexport default Axios;\nexport { baseURL, assetsURL };\n","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\DashboardPage.js",[],"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\mainpage\\components\\mainpageappbar\\MainAppBar.js",["129","130","131","132","133"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport './MainAppBar.css';\r\nimport MainAppBarTab from '../mainpageappbar/mainappbartab/MainAppBarTab.js';\r\nimport AccountInformation from './AccountInformation.js';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst MainAppBar = () => {\r\n\r\n    let history = useHistory();\r\n    \r\n    const [selectedTab, setSelectedTab] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setSelectedTab(\"Dashboard\");\r\n        history.push(\"/dashboard\");\r\n    }, [])\r\n\r\n    const navigateToModule = (moduleName) => {\r\n        switch (moduleName) {\r\n            case \"Dashboard\": setSelectedTab(moduleName);\r\n                history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-app-bar\">\r\n            <div className=\"app-header\">HAMMOQ <span style={{ fontSize: '0.7em' }}>AFFILIATE PROGRAM</span></div>\r\n            <div>\r\n                <MainAppBarTab onClick={() => navigateToModule(\"Dashboard\")} image=\"\" text=\"Dashboard\" active={selectedTab == \"Dashboard\" ? true : false} />\r\n                <AccountInformation />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainAppBar;","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\analyticscards\\AnalyticsCards.js",[],"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\filterbar\\FilterBar.js",["134","135","136","137","138","139","140","141"],"import React, { useState, useEffect } from 'react';\r\nimport './FilterBar.css';\r\nimport { Dropdown, Button } from 'semantic-ui-react'\r\n\r\nconst FilterBar = (props) => {\r\n\r\n    const [monthDropdownOptions, setMonthDropdownOptions] = useState([\r\n        { text: 'January', value: 'January' },\r\n        { text: 'February', value: 'February' },\r\n        { text: 'March', value: 'March' },\r\n        { text: 'April', value: 'April' },\r\n        { text: 'May', value: 'May' },\r\n        { text: 'June', value: 'June' },\r\n        { text: 'July', value: 'July' },\r\n        { text: 'August', value: 'August' },\r\n        { text: 'September', value: 'September' },\r\n        { text: 'October', value: 'October' },\r\n        { text: 'November', value: 'November' },\r\n        { text: 'December', value: 'December' }]);\r\n\r\n    const [yearDropdownOptions, setYearDropdownOptions] = useState([\r\n        { text: '2019', value: '2019' },\r\n        { text: '2020', value: '2020' },\r\n        { text: '2021', value: '2021' },\r\n        { text: '2022', value: '2022' },\r\n    ]);\r\n\r\n    const [selectedYear, setSelectedYear] = useState('');\r\n    const [selectedMonth, setSelectedMonth] = useState('');\r\n    const [previousOrCurrentMonth, setPreviousOrCurrentMonth] = useState('CURRENT_MONTH')\r\n\r\n    let monthNameNumberMap = new Map();\r\n\r\n    monthNameNumberMap.set(1, 'January');\r\n    monthNameNumberMap.set(2, 'February');\r\n    monthNameNumberMap.set(3, 'March');\r\n    monthNameNumberMap.set(4, 'April');\r\n    monthNameNumberMap.set(5, 'May');\r\n    monthNameNumberMap.set(6, 'June');\r\n    monthNameNumberMap.set(7, 'July');\r\n    monthNameNumberMap.set(8, 'August');\r\n    monthNameNumberMap.set(9, 'September');\r\n    monthNameNumberMap.set(10, 'October');\r\n    monthNameNumberMap.set(11, 'November');\r\n    monthNameNumberMap.set(12, 'December');\r\n\r\n    useEffect(() => {\r\n\r\n        let month, year;\r\n\r\n        if(previousOrCurrentMonth == 'CURRENT_MONTH') {\r\n\r\n            month = new Date().getMonth();\r\n            year = new Date().getFullYear();\r\n\r\n            setSelectedMonth(monthNameNumberMap.get(month + 1));\r\n            setSelectedYear('' + year + '');\r\n        }\r\n\r\n        if(previousOrCurrentMonth == 'PREVIOUS_MONTH') {\r\n\r\n            month = new Date().getMonth() - 1;\r\n            year = new Date().getFullYear();\r\n\r\n            setSelectedMonth(monthNameNumberMap.get(month + 1));\r\n            setSelectedYear('' + year + '');\r\n        }\r\n\r\n    }, [previousOrCurrentMonth])\r\n\r\n    useEffect(() => {\r\n\r\n        props.setFilterYearAndMonth(selectedYear, selectedMonth);\r\n\r\n    }, [selectedYear, selectedMonth])\r\n\r\n    const handleYearSelection =  (e, { value }) => {\r\n        setPreviousOrCurrentMonth('');\r\n        setSelectedYear(value);\r\n    }\r\n\r\n    const handleMonthSelection =  (e, { value }) => {\r\n        setPreviousOrCurrentMonth('');\r\n        setSelectedMonth(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-bar\">\r\n            <div className=\"filter-select-year-dropdown\">\r\n                <Dropdown\r\n                    placeholder='Select Year'\r\n                    fluid\r\n                    search\r\n                    selection\r\n                    clearable\r\n                    value={selectedYear}\r\n                    options={yearDropdownOptions}\r\n                    onChange={handleYearSelection}\r\n                />\r\n            </div>\r\n            <div className=\"filter-select-month-dropdown\">\r\n                <Dropdown\r\n                    placeholder='Select Month'\r\n                    fluid\r\n                    search\r\n                    selection\r\n                    clearable\r\n                    value={selectedMonth}\r\n                    options={monthDropdownOptions}\r\n                    onChange={handleMonthSelection}\r\n                />\r\n            </div>\r\n            <div className=\"current-previous-month-buttons\">\r\n                <Button.Group>\r\n                    <Button size=\"tiny\" onClick={() => setPreviousOrCurrentMonth('PREVIOUS_MONTH')} active={previousOrCurrentMonth == 'PREVIOUS_MONTH'}>Previous Month</Button>\r\n                    <Button size=\"tiny\" onClick={() => setPreviousOrCurrentMonth('CURRENT_MONTH')} active={previousOrCurrentMonth == 'CURRENT_MONTH'}>Current Month</Button>\r\n                </Button.Group>\r\n            </div>\r\n            <div className=\"filter-button\">\r\n                <Button color=\"green\" onClick={props.handleFilterTrigger}>Search</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilterBar;","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\datatable\\DataTable.js",[],"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\mainpage\\components\\mainpageappbar\\AccountInformation.js",["142"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Segment, Portal, Icon } from 'semantic-ui-react';\r\nimport './AccountInformation.css';\r\nimport titleCase from '../../../../utilities/utilities.js';\r\nimport Axios from '../../../../services/Axios.jsx';\r\nimport { AuthContext } from '../../../../context/AuthContext.js';\r\nimport useWindowSize from '../../../../hooks/usewindowsize-hook.js';\r\n\r\nconst AccountInformation = () => {\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [dropdownXPosition, setDropdownXPosition] = useState(0);\r\n    const [chevronName, setChevronName] = useState('chevron down')\r\n\r\n    const auth = useContext(AuthContext);\r\n    const windowSize = useWindowSize();\r\n\r\n    useEffect(() => {\r\n        \r\n        setTimeout(() => populateUserName(), 400);\r\n        setTimeout(() => alignDropdownWithTrigger(), 600);\r\n\r\n    }, [windowSize]);\r\n\r\n    const populateUserName = () => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n        if (storedData)\r\n            setUserName(storedData.userFullName);\r\n    }\r\n\r\n    const logoutUser = async () => {\r\n\r\n        let res;\r\n\r\n        try {\r\n            res = await Axios.get('/authentication/logout', {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + auth.token\r\n                }\r\n            });\r\n        } catch (error) { }\r\n\r\n        if (res?.data?.httpStatus == 'Success') {\r\n            auth.logout();\r\n        }\r\n    }\r\n\r\n    const alignDropdownWithTrigger = () => {\r\n            setDropdownXPosition(document.querySelector('.account-information-trigger').getBoundingClientRect().left + 'px');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Portal closeOnTriggerClick openOnTriggerClick onOpen={() => setChevronName('chevron up')} onClose={() => setChevronName('chevron down')}\r\n                trigger={<div className=\"account-information-trigger\">{titleCase(userName)} &nbsp; <Icon name={chevronName} /></div>}>\r\n                <Segment id=\"account-information-dropdown\" style={{ left: dropdownXPosition, position: 'fixed', top: '40px', zIndex: 1000 }}>\r\n                    <Button color=\"grey\" onClick={logoutUser}> Logout </Button>\r\n                </Segment>\r\n            </Portal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AccountInformation;","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\referralcode\\ReferralCodeComponent.js",["143","144"],"import React, { useState, useEffect } from 'react';\r\nimport CreateReferralCodeModal from './components/CreateReferralCodeModal.js';\r\nimport Axios from '../../../services/Axios.jsx';\r\nimport ReferralCodeCard from './components/ReferralCodeCard.js';\r\n\r\nconst ReferralCodeComponent = (props) => {\r\n\r\n    const [referralCode, setReferralCode] = useState('');\r\n    const [openCreateModal, setOpenCreateModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(async () => await openCreateModalIfReferralCodeDoesNotExist(), 500);\r\n\r\n    }, [])\r\n\r\n    const openCreateModalIfReferralCodeDoesNotExist = async () => {\r\n\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n        let res;\r\n\r\n        if (storedData) {\r\n            try {\r\n                res = await Axios.get('/referralcode', {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + storedData.token\r\n                    }\r\n                });\r\n            } catch (error) { }\r\n        }\r\n\r\n        if (res?.data?.httpStatus == 'NO_REFERRALCODE_ASSOCIATED_WITH_USER') {\r\n            setOpenCreateModal(true);\r\n        }\r\n\r\n        if (res?.data?.httpStatus == 'Success') {\r\n            setReferralCode(res?.data?.referralCode);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CreateReferralCodeModal open={openCreateModal} setModalVisibility={setOpenCreateModal} setReferralCode={setReferralCode} />\r\n            <ReferralCodeCard referralCode={referralCode} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ReferralCodeComponent;","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\mainpage\\components\\mainpageappbar\\mainappbartab\\MainAppBarTab.js",["145","146"],"import React from 'react';\r\nimport './MainAppBarTab.css';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nconst MainAppBarTab = (props) => {\r\n\r\n    return(\r\n        <div onClick={props.onClick} className={props.active == true? \"main-app-bar-tab active\" : \"main-app-bar-tab\"} >\r\n            {props.image !=\"\"? <Icon aria-hidden=\"true\" color=\"white\" size=\"large\" name={props.image} /> : \"\" }{props.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainAppBarTab","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\hooks\\usewindowsize-hook.js",["147"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        function handleResize() {\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\analyticscards\\totalreferralscard\\TotalReferralsCard.js",[],"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\analyticscards\\totallistingscard\\TotalListingsCard.js",[],"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\referralcode\\components\\ReferralCodeCard.js",["148"],"import React, { useState } from 'react';\r\nimport './ReferralCodeCard.css';\r\n\r\nconst ReferralCodeCard = (props) => {\r\n    \r\n    return(\r\n        <div className=\"referral-code-card\">\r\n            <div className=\"referral-code-card-label\"> Your Referral Code </div>\r\n            {props.referralCode.length > 0 ? \r\n            <div className=\"referral-code-card-value\">{props.referralCode}</div>\r\n            : <div className=\"referral-code-card-empty-value\">Empty</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReferralCodeCard;","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\referralcode\\components\\CreateReferralCodeModal.js",["149","150","151","152","153"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, Form, Message } from 'semantic-ui-react';\r\nimport Axios from '../../../../services/Axios.jsx';\r\n\r\nconst CreateReferralCodeModal = (props) => {\r\n\r\n    const [referralCode, setReferralCode] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [warningMessage, setWarningMessage] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const createReferralCode = async () => {\r\n\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n        let res;\r\n\r\n        if (storedData) {\r\n            try {\r\n                res = await Axios.post('/referralcode', {\r\n                    referralCode: referralCode\r\n                },{\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + storedData.token\r\n                    }\r\n                });\r\n            } catch (error) { }\r\n        }\r\n\r\n        if (res?.data?.httpStatus == 'Success') {\r\n            setSuccessMessage(res.data.message);\r\n            setWarningMessage('');\r\n            setErrors([]);\r\n            setTimeout(() => props.setModalVisibility(false), 3000);\r\n            props.setReferralCode(referralCode);\r\n        }\r\n\r\n        if (res?.data?.httpStatus == 'REFERRAL_CODE_ALREADY_ASSOCIATED_WITH_ANOTHER_USER'\r\n            || res?.data?.httpStatus == 'REFERRAL_CODE_ALREADY_ASSOCIATED_WITH_THIS_USER') {\r\n            setSuccessMessage('');\r\n            setWarningMessage(res.data.message);\r\n            setErrors([]);\r\n        }\r\n\r\n        if (res?.data?.httpStatus == 'Error') {\r\n            setSuccessMessage('');\r\n            setWarningMessage('');\r\n            setErrors(res.data.errors);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            dimmer=\"default\"\r\n            size=\"tiny\"\r\n            open={props.open}>\r\n            <Modal.Header>Create Referral Code</Modal.Header>\r\n            <Modal.Content>\r\n                <Form>\r\n                    <Form.Field>\r\n                        <label style={{ color: '#A663CC' }}>Your Unique Referral Code</label>\r\n                        <input onChange={(event) => setReferralCode(event.target.value)} placeholder='Enter referral code' />\r\n                    </Form.Field>\r\n                </Form>\r\n                { successMessage.trim().length > 0 ? <Message color=\"green\">{successMessage}</Message> : null }\r\n                { warningMessage.trim().length > 0 ? <Message color=\"orange\">{warningMessage}</Message> : null }\r\n                { errors.length > 0 ? <Message color=\"red\" list={errors}/> : null }\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color=\"grey\" onClick={createReferralCode}>\r\n                    Create\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateReferralCodeModal;","C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\pages\\dashboard\\analyticscards\\totalearningscard\\TotalEarningsCard.js",[],"C:\\Users\\nagvr\\OneDrive\\Documents\\Affiliates\\Hammoq-Influencer-Production_UIPush\\src\\utilities\\utilities.js",[],{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"158","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":38},{"ruleId":"154","severity":1,"message":"159","line":1,"column":40,"nodeType":"156","messageId":"157","endLine":1,"endColumn":49},{"ruleId":"160","severity":1,"message":"161","line":43,"column":15,"nodeType":"162","endLine":53,"endColumn":6},{"ruleId":"163","severity":1,"message":"164","line":66,"column":34,"nodeType":"165","messageId":"166","endLine":66,"endColumn":36},{"ruleId":"154","severity":1,"message":"159","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":45,"column":33,"nodeType":"165","messageId":"166","endLine":45,"endColumn":35},{"ruleId":"163","severity":1,"message":"164","line":51,"column":33,"nodeType":"165","messageId":"166","endLine":51,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":78,"column":60,"nodeType":"169","endLine":78,"endColumn":119},{"ruleId":"170","severity":1,"message":"171","line":78,"column":68,"nodeType":"172","messageId":"173","endLine":78,"endColumn":88},{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"159","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":44,"column":33,"nodeType":"165","messageId":"166","endLine":44,"endColumn":35},{"ruleId":"163","severity":1,"message":"164","line":51,"column":33,"nodeType":"165","messageId":"166","endLine":51,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":74,"column":55,"nodeType":"169","endLine":74,"endColumn":115},{"ruleId":"170","severity":1,"message":"171","line":74,"column":63,"nodeType":"172","messageId":"173","endLine":74,"endColumn":83},{"ruleId":"174","severity":1,"message":"175","line":30,"column":54,"nodeType":"165","messageId":"176","endLine":30,"endColumn":55},{"ruleId":"154","severity":1,"message":"177","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":37},{"ruleId":"154","severity":1,"message":"178","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"160","severity":1,"message":"179","line":17,"column":8,"nodeType":"180","endLine":17,"endColumn":10,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":20,"column":9,"nodeType":"184","messageId":"185","endLine":23,"endColumn":10},{"ruleId":"163","severity":1,"message":"164","line":30,"column":124,"nodeType":"165","messageId":"166","endLine":30,"endColumn":126},{"ruleId":"154","severity":1,"message":"186","line":7,"column":34,"nodeType":"156","messageId":"157","endLine":7,"endColumn":57},{"ruleId":"154","severity":1,"message":"187","line":21,"column":33,"nodeType":"156","messageId":"157","endLine":21,"endColumn":55},{"ruleId":"163","severity":1,"message":"164","line":51,"column":35,"nodeType":"165","messageId":"166","endLine":51,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":60,"column":35,"nodeType":"165","messageId":"166","endLine":60,"endColumn":37},{"ruleId":"160","severity":1,"message":"188","line":69,"column":8,"nodeType":"180","endLine":69,"endColumn":32,"suggestions":"189"},{"ruleId":"160","severity":1,"message":"190","line":75,"column":8,"nodeType":"180","endLine":75,"endColumn":37,"suggestions":"191"},{"ruleId":"163","severity":1,"message":"164","line":115,"column":132,"nodeType":"165","messageId":"166","endLine":115,"endColumn":134},{"ruleId":"163","severity":1,"message":"164","line":116,"column":131,"nodeType":"165","messageId":"166","endLine":116,"endColumn":133},{"ruleId":"163","severity":1,"message":"164","line":44,"column":35,"nodeType":"165","messageId":"166","endLine":44,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":33,"column":35,"nodeType":"165","messageId":"166","endLine":33,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":37,"column":35,"nodeType":"165","messageId":"166","endLine":37,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":8,"column":62,"nodeType":"165","messageId":"166","endLine":8,"endColumn":64},{"ruleId":"163","severity":1,"message":"192","line":9,"column":26,"nodeType":"165","messageId":"166","endLine":9,"endColumn":28},{"ruleId":"154","severity":1,"message":"193","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"159","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":30,"column":35,"nodeType":"165","messageId":"166","endLine":30,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":38,"column":35,"nodeType":"165","messageId":"166","endLine":38,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":39,"column":38,"nodeType":"165","messageId":"166","endLine":39,"endColumn":40},{"ruleId":"163","severity":1,"message":"164","line":45,"column":35,"nodeType":"165","messageId":"166","endLine":45,"endColumn":37},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useContext' is defined but never used.","'Icon' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["194"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setMonthDropdownOptions' is assigned a value but never used.","'setYearDropdownOptions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'monthNameNumberMap'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["196"],"Expected '!==' and instead saw '!='.","'React' is defined but never used.",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [history]",{"range":"203","text":"204"},"Update the dependencies array to be: [monthNameNumberMap, previousOrCurrentMonth]",{"range":"205","text":"206"},"Update the dependencies array to be: [selectedYear, selectedMonth, props]",{"range":"207","text":"208"},[557,559],"[history]",[2435,2459],"[monthNameNumberMap, previousOrCurrentMonth]",[2565,2594],"[selectedYear, selectedMonth, props]"]