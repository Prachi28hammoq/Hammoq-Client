[{"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\index.jsx":"1","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\serviceWorker.jsx":"2","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\App.jsx":"3","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\ListingSettings\\ListingSettings.js":"4","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Messages\\message.jsx":"5","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\OnBoarding\\OnBoarding.jsx":"6","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Basic\\BasicForm.jsx":"7","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\EditForm\\EditForm.jsx":"8","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Components\\header\\header.jsx":"9","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\index.jsx":"10","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\utils\\parser.js":"11","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\services\\Axios.jsx":"12","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Basic\\ButtonGroup.jsx":"13","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\utils\\loader.jsx":"14","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Components\\paymentAlert\\PaymentAlert.jsx":"15","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\EditForm\\components\\RightSection\\RightSection.jsx":"16","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\EditForm\\components\\LeftSection\\LeftSection.jsx":"17","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\signup\\signup.jsx":"18","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\forgotpassword\\forgotpassword.jsx":"19","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\searchcart\\searchcart.jsx":"20","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\settings\\settings.jsx":"21","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Transactions\\Transactions.jsx":"22","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\TemplateForm.jsx":"23","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\login\\Login.jsx":"24","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Passwords\\Editdomain.jsx":"25","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Passwords\\Passwords.jsx":"26","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Payment\\PaymentComponent.jsx":"27","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Templates\\Templates.jsx":"28","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Charts\\charts.jsx":"29","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\AcceptUrl\\AcceptUrl.jsx":"30","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\config\\title.jsx":"31","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\resetpassword\\resetpassword.jsx":"32","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\EditForm\\components\\ebayModal.jsx":"33","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\utils\\Search.jsx":"34","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\searchcart\\Comment.jsx":"35","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Payment\\AddPayment.jsx":"36","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\Components\\LeftSection.jsx":"37","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Components\\pagination\\Pagination.jsx":"38","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\Components\\RightSection.jsx":"39","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\Components\\Input.jsx":"40","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\Components\\ButtonGroup.jsx":"41"},{"size":503,"mtime":1611172225360,"results":"42","hashOfConfig":"43"},{"size":5086,"mtime":1611172225375,"results":"44","hashOfConfig":"43"},{"size":3370,"mtime":1611172225336,"results":"45","hashOfConfig":"43"},{"size":61264,"mtime":1611172225753,"results":"46","hashOfConfig":"43"},{"size":4318,"mtime":1611172225771,"results":"47","hashOfConfig":"43"},{"size":27832,"mtime":1611172225789,"results":"48","hashOfConfig":"43"},{"size":43525,"mtime":1611172225517,"results":"49","hashOfConfig":"43"},{"size":42433,"mtime":1611172225554,"results":"50","hashOfConfig":"43"},{"size":5075,"mtime":1611172225393,"results":"51","hashOfConfig":"43"},{"size":1077,"mtime":1611172225485,"results":"52","hashOfConfig":"43"},{"size":3073,"mtime":1611172226134,"results":"53","hashOfConfig":"43"},{"size":798,"mtime":1611172826047,"results":"54","hashOfConfig":"43"},{"size":390,"mtime":1611172225524,"results":"55","hashOfConfig":"43"},{"size":275,"mtime":1611172226127,"results":"56","hashOfConfig":"43"},{"size":3294,"mtime":1611172225476,"results":"57","hashOfConfig":"43"},{"size":53012,"mtime":1611172225704,"results":"58","hashOfConfig":"43"},{"size":15148,"mtime":1611172225677,"results":"59","hashOfConfig":"43"},{"size":6141,"mtime":1611172226093,"results":"60","hashOfConfig":"43"},{"size":8860,"mtime":1611172225998,"results":"61","hashOfConfig":"43"},{"size":30817,"mtime":1611172226057,"results":"62","hashOfConfig":"43"},{"size":8995,"mtime":1611172226075,"results":"63","hashOfConfig":"43"},{"size":2306,"mtime":1611172225962,"results":"64","hashOfConfig":"43"},{"size":37617,"mtime":1611172225878,"results":"65","hashOfConfig":"43"},{"size":6169,"mtime":1611172226016,"results":"66","hashOfConfig":"43"},{"size":3220,"mtime":1611172225808,"results":"67","hashOfConfig":"43"},{"size":8532,"mtime":1611172225819,"results":"68","hashOfConfig":"43"},{"size":920,"mtime":1611172225842,"results":"69","hashOfConfig":"43"},{"size":4630,"mtime":1611172225944,"results":"70","hashOfConfig":"43"},{"size":16645,"mtime":1611172225534,"results":"71","hashOfConfig":"43"},{"size":746,"mtime":1611172225496,"results":"72","hashOfConfig":"43"},{"size":1594,"mtime":1611172225980,"results":"73","hashOfConfig":"43"},{"size":3681,"mtime":1611172226032,"results":"74","hashOfConfig":"43"},{"size":6489,"mtime":1611172225656,"results":"75","hashOfConfig":"43"},{"size":574,"mtime":1611172226121,"results":"76","hashOfConfig":"43"},{"size":2740,"mtime":1611172226050,"results":"77","hashOfConfig":"43"},{"size":11175,"mtime":1611172225835,"results":"78","hashOfConfig":"43"},{"size":27821,"mtime":1611172225904,"results":"79","hashOfConfig":"43"},{"size":1131,"mtime":1611172225466,"results":"80","hashOfConfig":"43"},{"size":27815,"mtime":1611172225911,"results":"81","hashOfConfig":"43"},{"size":445,"mtime":1611172225895,"results":"82","hashOfConfig":"43"},{"size":368,"mtime":1611172225888,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"131gi5s",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\index.jsx",[],["177","178"],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\serviceWorker.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\App.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\ListingSettings\\ListingSettings.js",["179","180","181","182","183"],"import React, { useState, useEffect, useRef, createRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Axios from \"../../services/Axios\";\nimport \"./ListingSettings.css\";\n\nconst Rules = (props) => {\n  const [childItemType, setChildItemType] = useState(props.item.itemType);\n  const [childItemPrice, setChildItemPrice] = useState(props.item.itemPrice);\n  const [childItemShipService, setChildItemShipService] = useState(props.item.itemShipServ);\n\n  useEffect(() => {\n    setChildItemType(props.item.itemType);\n    setChildItemPrice(props.item.itemPrice);\n    setChildItemShipService(props.item.itemShipServ);\n  }, []);\n\n  const handleChange = (e) => \n  {\n    props.onChange(e)\n  }\n\n  return(\n        <>\n        <div className='r2_q4_sub_align'>\n        <div className='items__align_col'>\n          <div className='text_allign'>Item Type</div>\n          <div className='rules_align'>\n            <div>If</div>\n            <label>\n              <input\n                name='itemType'\n                type='text'\n                value={childItemType}\n                className='r2_q4_inner_align_input'\n                onInput={handleChange}\n                onChange={(e) => setChildItemType(e.target.value)}\n              ></input>\n            </label>\n          </div>\n        </div>\n        <div className='items__align_col'>\n          <div className='text_allign'>Price</div>\n          <div className='rules_align'>\n            <div>Then</div>\n            <label>\n              <input\n                name='itemPrice'\n                type='number'\n                min={0}\n                value={childItemPrice}\n                className='r2_q4_inner_align_input'\n                onInput={handleChange}\n                onChange={(e) => setChildItemPrice(e.target.value)}\n              ></input>\n            </label>\n          </div>\n        </div>\n        <div className='items__align_col'>\n          <div className='text_allign'>Shipping service</div>\n          <label className='rules_align'>\n            <input\n              name='itemShipServ'\n              type='text'\n              value={childItemShipService}\n              className='r2_q4_inner_align_input'\n              onInput={handleChange}\n              onChange={(e) => setChildItemShipService(e.target.value)}\n            ></input>\n          </label>\n        </div>\n      </div>\n      </>\n    );\n}\n\nconst ListingSettings = () => {\n  // Listing settings\n  const [services, setServices] = useState([\"Listing\"]);\n  const [priceOptions, setPriceOptions] = useState(\"\");\n  const [otherPriceOptions, setOtherPriceOptions] = useState(\"\");\n  const [incrCompPrice, setIncrCompPrice] = useState(\"\");\n  const [companyBlurb, setCompanyBlurb] = useState(\"\");\n  const [bestOffer, setBestOffer] = useState(true);\n  const [isOfferAccept, setIsOfferAccept] = useState(false);\n  const [offerAccept, setOfferAccept] = useState(\"\");\n  const [isOfferDecline, setIsOfferDecline] = useState(false);\n  const [offerDecline, setOfferDecline] = useState(\"\");\n  const [ebaySmartPricing, setEbaySmartPricing] = useState(false);\n  const [mercariSmartPricing, setMercariSmartPricing] = useState(false);\n  const [country, setCountry] = useState(\"\");\n  const [zipCode, setZipCode] = useState(0);\n  const [location, setLocation] = useState(\"\");\n  const [mercariTags, setMercariTags] = useState([]);\n\n  // Shipping and Return settings\n  const [freeShipping, setFreeShipping] = useState(false);\n  const [flatShippingRulesStatus, setFlatShippingRulesStatus] = useState(false);\n  const [flatShippingRules, setFlatShippingRules] = useState([]);\n  const [testIdea, setTestIdea] = useState([]);\n  const [calculatedShipping, setCalculatedShipping] = useState(false);\n  const [isReturnAccept, setIsReturnAccept] = useState(false);\n  const [returnedWithin, setReturnedWithin] = useState(\"\");\n  const [refundAs, setRefundAs] = useState(\"\");\n  const [returnShipBy, setReturnShipBy] = useState(\"\");\n\n  // International Shipping settings\n  const [incrByDomestic, setIncrByDomestic] = useState(\"\");\n  const [shipService, setShipService] = useState(\"\");\n  const [intlReturnAccepted, setIntlReturnAccepted] = useState(false);\n  const [intlReturnedWithin, setIntlReturnedWithin] = useState(\"\");\n  const [intlRefundAs, setIntlRefundAs] = useState(\"\");\n  const [intlReturnShipBy, setIntlReturnShipBy] = useState(\"\");\n  const [useEbayGlobal, setUseEbayGlobal] = useState(false);\n  const [handlingTime, setHandlingTime] = useState(\"\");\n  const [cost, setCost] = useState(\"\");\n  const [worldwideShip, setWorldwideShip] = useState(false);\n  const [shipCountries, setShipCountries] = useState([]);\n  const [allowPaypal, setAllowPaypal] = useState(false);\n  const [paypalEmail, setPaypalEmail] = useState(\"\");\n  const [taxes, setTaxes] = useState(\"\");\n  const [paymentInstr, setPaymentInstr] = useState(\"\");\n  const [buyerReqs, setBuyerReqs] = useState(\"\");\n\n  //Basic Settings -> Signup Info\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName]= useState(\"\");\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [phoneNum, setPhoneNum] = useState(\"\");\n  const [storeLink, setStoreLink] = useState(\"\");\n  const [findUs, setFindUs] = useState(\"\");\n  const [referralCode, setReferralCode] = useState(\"\");\n\n  //Client ID\n  //const [clientID, setClientID] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get('/clientdetails')\n    .then((res) => {\n        let savedData = res.data;\n\n        setFirstName(savedData.firstName);\n        setLastName(savedData.lastName);\n        setEmailAddress(savedData.email);\n        setPhoneNum(savedData.phoneno);\n        setReferralCode(savedData.referralCode);\n    })\n    .catch((err) => console.log(\"error fetching client: \", err));\n    Axios.get(\"/clientdetails/listingSettings\")\n      .then((res) => {\n        let savedData = res.data;\n\n        setStoreLink(savedData.storeName);\n        setFindUs(savedData.foundOutAboutUs);\n\n        //console.log(\"Client's saved data: \", res.data.configSettings[0]);\n        savedData = res.data.settings[0].listing[0];\n        //console.log(\"listing data: \", savedData);\n        var compPriceSign = \"\" \n        if(savedData.incrCompPrice[0].by !== undefined && savedData.incrCompPrice[0].by === 'percent')\n        {\n          compPriceSign = \"%\"\n        }\n        else if(savedData.incrCompPrice[0].by !== undefined && savedData.incrCompPrice[0].by === 'dollar')\n        {\n          compPriceSign = \"$\"\n        }\n        setServices(savedData.services);\n        setPriceOptions(savedData.priceOptions);\n        setOtherPriceOptions(savedData.otherPriceOptions);\n        if(savedData.incrCompPrice[0])\n        {\n          setIncrCompPrice(savedData.incrCompPrice[0].value + compPriceSign);\n        }\n        setCompanyBlurb(savedData.companyBlurb);\n        if(savedData.bestOffer[0])\n        {\n          setBestOffer(savedData.bestOffer[0].enabled);\n          setOfferAccept(savedData.bestOffer[0].acceptOfferOf);\n          setIsOfferAccept(savedData.bestOffer[0].isOfferAccepted);\n          setOfferDecline(savedData.bestOffer[0].declineOfferOf);\n          setIsOfferDecline(savedData.bestOffer[0].isOfferDeclined);\n        }\n        setEbaySmartPricing(savedData.ebay_smart);\n        setMercariSmartPricing(savedData.mercari_smart);\n        setCountry(savedData.country);\n        setZipCode(savedData.zipCode);\n        setLocation(savedData.location);\n        setMercariTags(savedData.mercariTags);\n        setBuyerReqs(savedData.buyerReqs);\n\n        savedData = res.data.settings[0].shipping[0];\n        //console.log(\"shipping data: \", savedData);\n        setCalculatedShipping(savedData.calculatedShipping);\n        setFreeShipping(savedData.freeShipping);\n        if(savedData.flatShippingRules[0])\n        {\n          setFlatShippingRulesStatus(savedData.flatShippingRules[0].flatShippingRulesStatus);\n        }\n        setFlatShippingRules(savedData.flatShippingRules)\n        if(savedData.returns[0])\n        {\n          setIsReturnAccept(savedData.returns[0].accepted);\n          setReturnedWithin(savedData.returns[0].returnWithin);\n          setRefundAs(savedData.returns[0].refundGivenAs);\n          setReturnShipBy(savedData.returns[0].ReturnShipPaidBy);\n        }\n\n        savedData = res.data.settings[0].intlShipping[0];\n        console.log(\"intlShipping data: \", savedData);\n        setIncrByDomestic(savedData.incrFromDomestic);\n        setShipService(savedData.shippingService);\n        setIntlReturnAccepted(savedData.returns[0].accepted);\n        setIntlReturnedWithin(savedData.returns[0].returnWithin);\n        setIntlRefundAs(savedData.returns[0].refundGivenAs);\n        setIntlReturnShipBy(savedData.returns[0].ReturnShipPaidBy);\n        setUseEbayGlobal(savedData.globalShipping[0].ebayGlobalShipEnabled);\n        setHandlingTime(savedData.globalShipping[0].handlingTime);\n        setCost(savedData.globalShipping[0].cost);\n        setWorldwideShip(savedData.globalShipping[0].isWorldwide);\n        setShipCountries(savedData.globalShipping[0].shipCountries);\n\n        savedData = res.data.settings[0].payment[0];\n        //console.log(\"payment data: \", savedData);\n        setAllowPaypal(savedData.allowPaypal);\n        setPaypalEmail(savedData.paypalEmail);\n        setTaxes(savedData.taxes);\n        setPaymentInstr(savedData.paymentInstr);\n\n      })\n      .catch((err) => console.log(\"error fetching client: \", err));\n  }, []);\n\n  const addRule = () => setFlatShippingRules(flatShippingRules => [...flatShippingRules, {itemType: flatShippingRules.itemType, itemPrice: flatShippingRules.itemPrice, itemShipService: flatShippingRules.itemShipService}])\n\n  const handleRulesChange = (e, index) =>\n  {\n    let ruleSetCopy = [...flatShippingRules];\n    let item = ruleSetCopy[index];\n    let updatedItem = {...item, [e.target.name]:e.target.value};\n    ruleSetCopy[index] = updatedItem;\n    setFlatShippingRules(ruleSetCopy);\n  }\n\n  const handleSubmit = () => {\n    let priceOpt = priceOptions;\n    if (otherPriceOptions.toLowerCase() === \"i'll price\") \n    {\n      priceOpt = null;\n    }\n\n    let sign = \"dollar\";\n    let compPriceVal = incrCompPrice;\n    if(incrCompPrice !== undefined || \"\")\n    {\n      if (incrCompPrice[0] === \"$\") \n      {\n        sign = \"dollar\";\n        compPriceVal = incrCompPrice.slice(1);\n      } \n      else if (incrCompPrice[incrCompPrice.length - 1] === \"$\") \n      {\n        sign = \"dollar\";\n        compPriceVal = incrCompPrice.slice(0, -1);\n      }\n      else if (incrCompPrice[0] === \"%\") \n      {\n        sign = \"percent\";\n        compPriceVal = incrCompPrice.slice(1);\n      } \n      else if (incrCompPrice[incrCompPrice.length - 1] === \"%\") \n      {\n        sign = \"percent\";\n        compPriceVal = incrCompPrice.slice(0, -1);\n      }\n    }\n\n    let mercari_tags = mercariTags.map((e) => e.trim());\n\n    var ListSettingsObj = {\n      services: services,\n      priceOptions: priceOpt,\n      otherPriceOptions: otherPriceOptions,\n      incrCompPrice: {\n        by: sign,\n        value: compPriceVal,\n      },\n      buyerReqs: buyerReqs,\n      companyBlurb: companyBlurb,\n      bestOffer: {\n        enabled: bestOffer,\n        acceptOfferOf: offerAccept,\n        isOfferAccepted: isOfferAccept,\n        declineOfferOf: offerDecline,\n        isOfferDeclined: isOfferDecline,\n      },\n      ebay_smart: ebaySmartPricing,\n      mercari_smart: mercariSmartPricing,\n      country: country,\n      zipCode: zipCode,\n      location: location,\n      mercariTags: mercari_tags,\n    };\n\n    var shippingSettingsObj = {\n      calculatedShipping: calculatedShipping,\n      freeShipping: freeShipping,\n      flatShippingRulesStatus: flatShippingRulesStatus,\n      flatShippingRules: flatShippingRules,\n      returns: {\n        accepted: isReturnAccept,\n        returnWithin: returnedWithin,\n        refundGivenAs: refundAs,\n        ReturnShipPaidBy: returnShipBy,\n      },\n    };\n\n    console.log(flatShippingRules)\n\n    var intlShippingObj = {\n      incrFromDomestic: incrByDomestic,\n      shippingService: shipService,\n      returns: {\n        accepted: intlReturnAccepted,\n        returnWithin: intlReturnedWithin,\n        refundGivenAs: intlRefundAs,\n        ReturnShipPaidBy: intlReturnShipBy,\n      },\n      globalShipping: {\n        ebayGlobalShipEnabled: useEbayGlobal,\n        handlingTime: handlingTime,\n        cost: cost,\n        isWorldwide: worldwideShip,\n        shipCountries: shipCountries,\n      },\n    };\n\n    var paymentProfObj = {\n      allowPaypal: allowPaypal,\n      paypalEmail: paypalEmail,\n      taxes: taxes,\n      paymentInstr: paymentInstr,\n    };\n\n    var configObj = {\n      listing: ListSettingsObj,\n      shipping: shippingSettingsObj,\n      intlShipping: intlShippingObj,\n      payment: paymentProfObj,\n    };\n\n    var basicObj = {\n      firstName: firstName,\n      lastName: lastName,\n      email: emailAddress,\n      phoneno: phoneNum,\n      storeName: storeLink,\n      foundOutAboutUs: findUs,\n    };\n\n    var finalObj = {\n      basicSettings: basicObj,\n      configSettings: configObj,\n    };\n\n    //var _id = clientID;\n\n    //console.log(\"Client ID: \" + clientID);\n    //console.log(\"Posted Object: \" + finalObj);\n\n    Axios.post(\"/clientDetails/listingSettings\", finalObj)\n      .then((res) => {\n        console.log(res.data);\n        if(res.data === 'Old Settings Updated' || res.data === 'New Settings Created')\n        {\n          alert('Settings Saved Succesfully!');\n        }\n      })\n      .catch((err) => console.log(\"Error: \", err));\n  };\n\n  return (\n    <div className='main'>\n      <div className='body'>\n      <div className='bold'>Basic Info</div>\n            <div className='group__one'>\n              <TextField\n                style={{ margin: \"10px\" }}\n                id='firstNameInput'\n                label='First Name'\n                type='search'\n                variant='outlined'\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n              <TextField\n                style={{ margin: \"10px\" }}\n                id='lastNameInput'\n                label='Last name'\n                type='search'\n                variant='outlined'\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n              />\n              <TextField\n                disabled\n                style={{ margin: \"10px\" }}\n                id='emailAddressInput'\n                label='Email Address'\n                type='search'\n                variant='outlined'\n                value={emailAddress}\n                onChange={(e) => setEmailAddress(e.target.value)}\n              />\n              <TextField\n                style={{ margin: \"10px\" }}\n                id='phoneNumInput'\n                label='Phone Number'\n                type='search'\n                variant='outlined'\n                value={phoneNum}\n                onChange={(e) => setPhoneNum(e.target.value)}\n              />\n            </div>\n            <div className='group__two'>\n              <TextField\n                className='group__two_one'\n                style={{ margin: \"10px\" }}\n                id='storeLinkInput'\n                label='Store Name / Store Link'\n                type='search'\n                variant='outlined'\n                value={storeLink}\n                onChange={(e) => setStoreLink(e.target.value)}\n              />\n              <TextField\n                className='group__two_two'\n                style={{ margin: \"10px\" }}\n                id='findUsInput'\n                label='How did you find about us?'\n                type='search'\n                variant='outlined'\n                value={findUs}\n                onChange={(e) => setFindUs(e.target.value)}\n              />\n              <TextField\n                disabled\n                className='group__two_two'\n                style={{ margin: \"10px\" }}\n                id='referralCode'\n                label='Referral Code'\n                type='search'\n                variant='outlined'\n                value={referralCode}\n                onChange={(e) => setReferralCode(e.target.value)}\n              />\n            </div>\n        <div className='col_one_scroll'>\n          <div className='bold'>Listing Settings</div>\n          <div className='body__one__q1'>\n            <label>What service do you want? (Can always change)</label>\n            <label>\n              <input\n                type='checkbox'\n                name='service'\n                value='Listing'\n                checked={services.find((i) => i === \"Listing\")}\n                onChange={(e) => {\n                  let list = services;\n                  if (e.target.checked) {\n                    list.push(e.target.value);\n                    setServices(list);\n                    //console.log(\"services: \", list);\n                  } else {\n                    let newList = list.filter((i) => i !== e.target.value);\n                    setServices(newList);\n                    //console.log(\"services: \", newList);\n                  }\n                }}\n              ></input>{\" \"}\n              Listing\n            </label>\n            <label>\n              <input\n                type='checkbox'\n                name='service'\n                value='Crosslisting'\n                checked={services.find((i) => i === \"Crosslisting\")}\n                onChange={(e) => {\n                  let list = services;\n                  if (e.target.checked) {\n                    list.push(e.target.value);\n                    setServices(list);\n                    //console.log(\"services: \", list);\n                  } else {\n                    let newList = list.filter((i) => i !== e.target.value);\n                    setServices(newList);\n                    //console.log(\"services: \", newList);\n                  }\n                }}\n              ></input>{\" \"}\n              Crosslisting\n            </label>\n            <label>\n              <input\n                type='checkbox'\n                name='service'\n                value='Delisting'\n                checked={services.find((i) => i === \"Delisting\")}\n                onChange={(e) => {\n                  let list = services;\n                  if (e.target.checked) {\n                    list.push(e.target.value);\n                    setServices(list);\n                    //console.log(\"services: \", list);\n                  } else {\n                    let newList = list.filter((i) => i !== e.target.value);\n                    setServices(newList);\n                    //console.log(\"services: \", newList);\n                  }\n                }}\n              ></input>{\" \"}\n              Delisting\n            </label>\n            <label>\n              <input\n                type='checkbox'\n                name='service'\n                value='Accounting'\n                checked={services.find((i) => i === \"Accounting\")}\n                onChange={(e) => {\n                  let list = services;\n                  if (e.target.checked) {\n                    list.push(e.target.value);\n                    setServices(list);\n                    //console.log(\"services: \", list);\n                  } else {\n                    let newList = list.filter((i) => i !== e.target.value);\n                    setServices(newList);\n                    //console.log(\"services: \", newList);\n                  }\n                }}\n              ></input>{\" \"}\n              Accounting\n            </label>\n          </div>\n\n          {/* -------------------- */}\n          <div className='body__one__q1'>\n            <label>\n              For price, How would you like us to price? If you want to do the\n              pricing yourself, Put it in the other section, I'll price.\n            </label>\n            <label>\n              <input\n                type='radio'\n                name='pricing'\n                value='High'\n                checked={priceOptions === \"High\"}\n                onChange={(e) => {\n                  setPriceOptions(e.target.value);\n                  //console.log(\"Price Options: \", e.target.value);\n                }}\n              ></input>{\" \"}\n              High sold comp (longer hold)\n            </label>\n            <label>\n              <input\n                type='radio'\n                name='pricing'\n                value='Mid'\n                checked={priceOptions === \"Mid\"}\n                onChange={(e) => {\n                  setPriceOptions(e.target.value);\n                  //console.log(\"Price Options: \", e.target.value);\n                }}\n              ></input>{\" \"}\n              Medium sold comp (mid hold)\n            </label>\n            <label>\n              <input\n                type='radio'\n                name='pricing'\n                value='Cheap'\n                checked={priceOptions === \"Cheap\"}\n                onChange={(e) => {\n                  setPriceOptions(e.target.value);\n                  //console.log(\"Price Options: \", e.target.value);\n                }}\n              ></input>{\" \"}\n              Cheapest sold comp (Fast sale)\n            </label>\n            <label>\n              <input\n                type='text'\n                value={otherPriceOptions}\n                placeholder='Other'\n                onChange={(e) => {\n                  setOtherPriceOptions(e.target.value);\n                  //console.log(\"other price option: \", e.target.value);\n                }}\n                className='other_price_options'\n              ></input>\n            </label>\n          </div>\n          {/* -------------------- */}\n          <div className='body__one__q2'>\n            <label>\n              Increase comp price by $ or % (Please include $ or % if applicable\n              )\n            </label>\n            <label>\n              <input\n                type='text'\n                value={incrCompPrice}\n                placeholder='(i.e. $10 or 10%)'\n                className='body__one__q2_input'\n                onChange={(e) => {\n                  setIncrCompPrice(e.target.value);\n                  //console.log(\"Incr Comp By: \", e.target.value);\n                }}\n              ></input>\n            </label>\n          </div>\n          {/* -------------------- */}\n          <div className='blob'>\n            <label>Bottom of Discription (Company Blob)</label>\n            <label>\n              <input\n                type='text'\n                value={companyBlurb}\n                className='body__one__q4_input'\n                placeholder=''\n                onChange={(e) => {\n                  setCompanyBlurb(e.target.value);\n                  //console.log(\"Comp Blob: \", e.target.value);\n                }}\n              ></input>\n            </label>\n          </div>\n          {/* -------------------- */}\n          <div className='body__one__q5'>\n            <div className='sub_head'>Best Offer</div>\n\n            <button\n              type='button'\n              onClick={(e) => {\n                setBestOffer(!bestOffer);\n                //console.log(!bestOffer);\n                if (!bestOffer === false) {\n                  setOfferAccept(\"\");\n                  setOfferDecline(\"\");\n                  setIsOfferAccept(false);\n                  setIsOfferDecline(false);\n                }\n              }}\n              className='button__q5'\n            >\n              {bestOffer\n                ? \"Yes, best offer enabled\"\n                : \"No, best offer disabled\"}\n            </button>\n            <div className='automatic_arrange'>\n              <label className='automatic_label_arrange'>\n                <input\n                  type='checkbox'\n                  checked={isOfferAccept}\n                  onChange={(e) => {setIsOfferAccept(e.target.checked); \n                                    if (!e.target.checked) setOfferAccept(\" \");\n                                  }}\n                ></input>{\" \"}\n                Automatically accept offers of atleast\n              </label>\n              <label>\n                <input\n                  type='number'\n                  min='0'\n                  value={offerAccept}\n                  className='automatic__input'\n                  placeholder='percent(%)'\n                  onChange={(e) => {\n                    if (isOfferAccept && bestOffer) {\n                        if(Math.sign(e.target.value) === 1) {\n                            setOfferAccept(e.target.value);\n                        } else setOfferAccept(\" \");\n                      //console.log(\"offer accept: \", e.target.value);\n                    }\n                  }}\n                ></input>{\" \"}\n              </label>\n            </div>\n            <div className='automatic_arrange'>\n              <label className='automatic_label_arrange'>\n                <input\n                  type='checkbox'\n                  checked={isOfferDecline}\n                  onChange={(e) => {\n                    setIsOfferDecline(e.target.checked);\n                    if (!e.target.checked) setOfferDecline(\"\");\n                  }}\n                ></input>{\" \"}\n                Automatically decline offers lower than\n              </label>\n              <label>\n                <input\n                  type='number'\n                  min={0}\n                  value={offerDecline}\n                  className='automatic__input'\n                  placeholder='percent(%)'\n                  onChange={(e) => {\n                    if (isOfferDecline && bestOffer) {\n                        if(Math.sign(e.target.value) === 1){\n                            setOfferDecline(e.target.value);\n                        } else setOfferDecline(\"\")\n\n                      //console.log(\"offer declined: \", e.target.value);\n                    }\n                  }}\n                ></input>{\" \"}\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* ***************************************************************************************************** */}\n      <div className='body'>\n        <div className='body__two__q1_arrange'>\n          <div className='ebay__smart'>\n            <label>Ebay smart pricing</label>\n            <div>\n              <label>\n                <input\n                  type='radio'\n                  name='ebay-pricing'\n                  value='Yes'\n                  checked={ebaySmartPricing}\n                  onChange={(e) => {\n                    setEbaySmartPricing(true);\n                    //console.log(\"Ebay smart: \", true);\n                  }}\n                ></input>{\" \"}\n                Yes\n              </label>\n              {\"     \"}\n              <label>\n                <input\n                  type='radio'\n                  name='ebay-pricing'\n                  value='No'\n                  checked={!ebaySmartPricing}\n                  onChange={(e) => {\n                    setEbaySmartPricing(false);\n                    //console.log(\"Ebay smart: \", false);\n                  }}\n                ></input>{\" \"}\n                No\n              </label>\n            </div>\n          </div>\n\n          <div className='mercari__smart'>\n            <label>Mercari smart pricing</label>\n            <div>\n              <label>\n                <input\n                  type='radio'\n                  name='mercari-pricing'\n                  value='Yes'\n                  checked={mercariSmartPricing}\n                  onChange={(e) => {\n                    setMercariSmartPricing(true);\n                    //console.log(\"Mercari smart: \", true);\n                  }}\n                ></input>{\" \"}\n                Yes\n              </label>\n              {\"     \"}\n\n              <label>\n                <input\n                  type='radio'\n                  name='mercari-pricing'\n                  value='No'\n                  checked={!mercariSmartPricing}\n                  onChange={(e) => {\n                    setMercariSmartPricing(false);\n                    //console.log(\"Mercari smart: \", false);\n                  }}\n                ></input>{\" \"}\n                No\n              </label>\n            </div>\n          </div>\n        </div>\n        {/* ******************************** */}\n        <div className='r2__q2'>\n          <div className='vertical__align'>\n            <label>Country</label>\n            <label>\n              <input\n                type='text'\n                value={country}\n                className='automatic__input'\n                onChange={(e) => {\n                  setCountry(e.target.value);\n                  //console.log(\"country: \", e.target.value);\n                }}\n              ></input>{\" \"}\n            </label>\n          </div>\n\n          <div className='vertical__align'>\n            <label>Zip/Postal code</label>\n            <label>\n              <input\n                type='number'\n                min={0}\n                value={zipCode}\n                className='automatic__input'\n                onChange={(e) => {\n                    if(Math.sign(e.target.value) === 1){\n                        setZipCode(e.target.value);\n                    } else setZipCode(\"\")\n                  //console.log(\"ZipCode: \", e.target.value);\n                }}\n              ></input>{\" \"}\n            </label>\n          </div>\n\n          <div className='vertical__align'>\n            <label>Location</label>\n            <label>\n              <input\n                type='text'\n                value={location}\n                className='automatic__input'\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                  //console.log(\"Location: \", e.target.value);\n                }}\n              ></input>{\" \"}\n            </label>\n          </div>\n        </div>\n        {/* ******************************** */}\n\n        <div className='r2_q3_align'>\n          <label>Items specs for mercari tags:</label>\n          <label>\n            <input\n              type='text'\n              value={mercariTags}\n              className='r2_q3_input'\n              placeholder='seperate by comma'\n              onChange={(e) => {\n                setMercariTags(e.target.value.split(\",\"));\n                //console.log(e.target.value.split(\",\"));\n              }}\n            ></input>{\" \"}\n          </label>\n        </div>\n\n        {/* ******************************** */}\n\n        <div className='shipping__alignment'>\n          <div className='bold'> Shipping & Return Settings</div>\n          <div className=' domestic__alignment'>\n            <div className='bold2'> Domestic shipping rules:</div>\n            <div className='r2_q4_align'>\n              <label>\n                <input\n                  type='checkbox'\n                  value='Free'\n                  checked={freeShipping}\n                  onChange={(e) => {setFreeShipping(e.target.checked)}}\n                ></input>\n                Free Shipping\n              </label>\n              <div>\n                <label>\n                  <input\n                    type='checkbox'\n                    value='Flat'\n                    checked={flatShippingRulesStatus}\n                    onChange={(e) => {setFlatShippingRulesStatus(e.target.checked)}}\n                  ></input>\n                  Flat Shipping\n                </label>\n\n                <div className='r2_q4_inner_align'>\n                  <div className='rules__arrange'> Rules </div>\n                   {flatShippingRules &&\n                    flatShippingRules.map((item, index) => \n                      <Rules onChange={e => handleRulesChange(e, index)} item={flatShippingRules[index]}/>\n                      )}\n                <label className='save_btn_align'>\n                <input\n                  type='button'\n                  value='Add Rule'\n                  onClick={(e) => addRule()}\n                  className='save_button'\n                ></input>\n                </label>\n                </div>\n              </div>\n              <label>\n                <input\n                  type='checkbox'\n                  value='Calculated'\n                  checked={calculatedShipping}\n                  onChange={(e) => {setCalculatedShipping(e.target.checked)}}\n                ></input>\n                Calculated Shipping\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  value='option1'\n                  checked={isReturnAccept}\n                  onChange={(e) => {\n                    setIsReturnAccept(e.target.checked);\n                    //console.log(\"Return accepted?: \", e.target.checked);\n                    if(!e.target.checked){\n                        setReturnedWithin(\"\");\n                        setRefundAs(\"\");\n                        setReturnShipBy(\"\");\n                    }\n                  }}\n                ></input>\n                Returns Accepted\n              </label>\n\n              <div className='r2_q5_inner_align'>\n                <div className='r2_q4_sub_align'>\n                  <div>\n                    <div className='text_allign'>\n                      Items must be returned with in\n                    </div>\n                    <div className='all_allign_center'>\n                      <label>\n                        <input\n                          type='number'\n                          min='0'\n                          value={returnedWithin}\n                          className='r2_q4_inner_align_input'\n                          placeholder='In days'\n                          onChange={(e) => {\n                            if(isReturnAccept) {\n                                if(Math.sign(e.target.value) === 1){\n                                    setReturnedWithin(e.target.value);\n                                } else setReturnedWithin(\"\")\n                                //console.log(\"Returned within: \", e.target.value, \" days\");\n                            }\n                          }}\n                        ></input>{\" \"}\n                      </label>\n                    </div>\n                  </div>\n                  <div>\n                    <div className='text_allign'>Refund must be given as</div>\n                    <div className='all_allign_center'>\n                      {\" \"}\n                      <label>\n                        <input\n                          type='text'\n                          value={refundAs}\n                          className='r2_q4_inner_align_input'\n                          onChange={(e) => {\n                              if(isReturnAccept) {\n                                  setRefundAs(e.target.value);\n                                  //console.log(\"Refund given as: \", e.target.value);\n                              }\n                          }}\n                        ></input>{\" \"}\n                      </label>\n                    </div>\n                  </div>\n                  <div>\n                    <div className='text_allign'>\n                      Return shipping will be paid by\n                    </div>\n                    <div className='all_allign_center'>\n                      {\" \"}\n                      <label>\n                        <input\n                          type='text'\n                          value={returnShipBy}\n                          className='r2_q4_inner_align_input'\n                          onChange={(e) => {\n                            if(isReturnAccept) {\n                                setReturnShipBy(e.target.value);\n                                //console.log(\"Return paid by: \", e.target.value);\n                            }\n                          }}\n                        ></input>{\" \"}\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* ***************************************************************************************************** */}\n      <div className='body'>\n        <div>\n          <div className='bold2'>\n            International shipping (most clients increase 300% from domestic\n            shipping\n          </div>\n          <div className=' international_allignmant'>\n            <div className='international_shipping_alignment'>\n              <div>Increase by domestic shipping </div>\n              <label>\n                <input\n                  type='number'\n                  min='0'\n                  placeholder='in (%)'\n                  value={incrByDomestic}\n                  className='input_tag'\n                  onChange={(e) => {\n                      if(Math.sign(e.target.value) === 1){\n                          setIncrByDomestic(e.target.value);\n                      } else setIncrByDomestic(\"\")\n                    //console.log(\"Incr by Domestic: \", e.target.value);\n                  }}\n                ></input>\n              </label>\n            </div>\n            <div className='international_shipping_alignment'>\n              <div>Shipping Service</div>\n              <label>\n                <input\n                  type='text'\n                  value={shipService}\n                  className='input_tag'\n                  onChange={(e) => {\n                    setShipService(e.target.value);\n                    //console.log(\"shipping Service: \", e.target.value);\n                  }}\n                ></input>\n              </label>\n            </div>\n          </div>\n        </div>\n        {/* ------------------------------------------ */}\n        <div className=' international_allignmant'>\n          <label>\n            <input\n              type='checkbox'\n              checked={intlReturnAccepted}\n              onChange={(e) => {\n                setIntlReturnAccepted(e.target.checked);\n                //console.log(\"Intl Return accepted?: \", e.target.checked);\n                if(!e.target.checked){\n                    setIntlReturnedWithin(\"\");\n                    setIntlRefundAs(\"\");\n                    setIntlReturnShipBy(\"\");\n                }\n              }}\n            ></input>{\" \"}\n            International returns accepted\n          </label>\n\n          <div className='r3_q2_align'>\n            <div>\n              <label>\n                Items must be returned with in{\" \"}\n                <input\n                  type='number'\n                  min='0'\n                  value={intlReturnedWithin}\n                  className='input_tag'\n                  placeholder='in days'\n                  onChange={(e) => {\n                    if(intlReturnAccepted) {\n                        if(Math.sign(e.target.value) === 1){\n                            setIntlReturnedWithin(e.target.value);\n                        } else setIntlReturnedWithin(\"\")\n                        //console.log(\"Intl Return within: \", e.target.value, \" days\");\n                    }\n                  }}\n                ></input>\n              </label>\n            </div>\n            <div>\n              <label>\n                Refund must be given as\n                <input\n                  type='text'\n                  value={intlRefundAs}\n                  className='input_tag'\n                  onChange={(e) => {\n                     if(intlReturnAccepted) {\n                         setIntlRefundAs(e.target.value);\n                         //console.log(\"Intl Refund As: \", e.target.value);\n                     }\n                  }}\n                ></input>\n              </label>\n            </div>\n            <div>\n              <label>\n                Return shipping will be paid by{\" \"}\n                <input\n                  type='text'\n                  value={intlReturnShipBy}\n                  className='input_tag'\n                  onChange={(e) => {\n                      if(intlReturnAccepted) {\n                          setIntlReturnShipBy(e.target.value);\n                          //console.log(\"Intl Return ship by: \", e.target.value);\n                      }\n                  }}\n                ></input>\n              </label>\n            </div>\n          </div>\n        </div>\n        {/* ------------------------------------------ */}\n\n        <div className=' international_allignmant'>\n          <label>\n            <input\n              type='checkbox'\n              checked={useEbayGlobal}\n              onChange={(e) => {\n                setUseEbayGlobal(e.target.checked);\n                //console.log(\"Use Ebay Global?: \", e.target.checked);\n                if(!e.target.checked) {\n                    setHandlingTime(\"\");\n                    setCost(\"\");\n                }\n              }}\n            ></input>\n            Use ebay global shipping program\n          </label>\n          <div className='time__cost'>\n            <div>\n              {\" \"}\n              <label>\n                Handling time\n                <input\n                  type='number'\n                  min=\"0\"\n                  placeholder=\"in days\"\n                  value={handlingTime}\n                  className='input_tag'\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if(Math.sign(e.target.value) === 1){\n                            setHandlingTime(e.target.value);\n                        } else setHandlingTime(\"\")\n                        //console.log(\"Handling Time: \", e.target.value);\n                    }\n                  }}\n                ></input>\n              </label>\n            </div>\n            <div>\n              {\" \"}\n              <label>\n                cost\n                <input\n                  type='number'\n                  min='0'\n                  placeholder='in $'\n                  className='input_tag'\n                  value={cost}\n                  onChange={(e) => {\n                     if(useEbayGlobal) {\n                         if(Math.sign(e.target.value) === 1){\n                             setCost(e.target.value);\n                         } else setCost(\"\")\n                         //console.log(\"Ebay shipping cost: \", e.target.value);\n                     }\n                  }}\n                ></input>\n              </label>\n            </div>\n          </div>\n          <div>\n            <div className='country_arrange'>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Worldwide'\n                  checked={worldwideShip && useEbayGlobal}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        setWorldwideShip(e.target.checked);\n                        //console.log(\"Worldwide shipping? : \", e.target.checked);\n                    }\n                  }}\n                ></input>\n                Worldwide\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Brazil'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Brazil\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                Brazil\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='United Kingdom'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"United Kingdom\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                United Kingdom\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Mexico'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Mexico\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                Mexico\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Mexico'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Mexico\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                Other\n              </label>\n            </div>\n            <div className='country_arrange'>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='China'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"China\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                China\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Germany'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Germany\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                Germany\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='N & S America'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"N & S America\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                N & S America\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Japan'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Japan\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                Japan\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Russia'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Russia\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>{\" \"}\n                Russia\n              </label>\n            </div>\n            <div className='country_arrange'>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='France'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"France\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                France\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Asia'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Asia\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                Asia\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Canada'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Canada\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                Canada\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Europe'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Europe\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                Europe\n              </label>\n              <label>\n                <input\n                  type='checkbox'\n                  className='country_input'\n                  value='Australia'\n                  checked={useEbayGlobal && shipCountries.find((i) => i === \"Australia\")}\n                  onChange={(e) => {\n                    if(useEbayGlobal) {\n                        if (e.target.checked) {\n                          let list = shipCountries;\n                          list.push(e.target.value);\n                          setShipCountries(list);\n                          //console.log(\"ShipCountries: \", list);\n                        } else {\n                          let list = shipCountries;\n                          let newList = list.filter((i) => i !== e.target.value);\n                          setShipCountries(newList);\n                          //console.log(\"ShipCountries: \", newList);\n                        }\n                    }\n                  }}\n                ></input>\n                Australia\n              </label>\n            </div>\n          </div>\n        </div>\n        {/* ------------------------------------------ */}\n        <div className='payment'>\n          <div className='sub_head'>Payment Profile</div>\n          <div className='r3_q4_body_align'>\n            <div className='r3_q4_left_align1'>\n              <div>Paypal Email</div>\n              <label>\n                <input\n                  type='email'\n                  value={paypalEmail}\n                  onChange={(e) => {\n                    setPaypalEmail(e.target.value);\n                    //console.log(\"Paypal email: \", e.target.value);\n                  }}\n                  className='input__payprof1'\n                ></input>\n              </label>\n              <div>\n                <label>Account Payments:</label>\n                <label>\n                  {\" \"}\n                  <input\n                    type='checkbox'\n                    checked={allowPaypal}\n                    onChange={(e) => {\n                      setAllowPaypal(e.target.checked);\n                      //console.log(\"Allow paypal?: \", e.target.checked);\n                    }}\n                  ></input>\n                </label>\n                <div className='make_flex'>\n                  Paypal{\" \"}\n                  <div className='small_font'>\n                    (More Options , not always supported by ebay)\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='r3_q4_left_align2'>\n              <label>\n                Taxes:\n                <input\n                  type='text'\n                  style={{ width: \"150px\" }}\n                  value={taxes}\n                  onChange={(e) => {\n                    setTaxes(e.target.value);\n                    //console.log(\"Taxes: \", e.target.value);\n                  }}\n                  className='input__payprof2'\n                ></input>\n              </label>\n              <label>\n                Payment instructions\n                <input\n                  type='text'\n                  style={{ width: \"150px\" }}\n                  value={paymentInstr}\n                  onChange={(e) => {\n                    setPaymentInstr(e.target.value);\n                    //console.log(\"Payment Instructions: \", e.target.value);\n                  }}\n                  className='input__payprof3'\n                ></input>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className='buyer_border'>\n          <div>Buyer Requirements:</div>\n          <div className=' buyer_req_align'>\n            <div>\n              <label>\n                <input\n                  type='radio'\n                  name='buyer-reqs'\n                  value='allow'\n                  checked={buyerReqs === \"allow\"}\n                  onChange={(e) => {\n                    setBuyerReqs(e.target.value);\n                    //console.log(\"buyer reqs: \", e.target.value);\n                  }}\n                ></input>\n                Allow all buyers to purchase items\n              </label>\n            </div>\n            <div>\n              {\" \"}\n              <label>\n                <input\n                  type='radio'\n                  name='buyer-reqs'\n                  value='block'\n                  checked={buyerReqs === \"block\"}\n                  onChange={(e) => {\n                    setBuyerReqs(e.target.value);\n                    //console.log(\"buyer reqs: \", e.target.value);\n                  }}\n                ></input>\n                Block buyers\n              </label>\n              <br />\n            </div>\n          </div>\n        </div>\n        <label className='save_btn_align'>\n          <input\n            type='button'\n            value='Save'\n            onClick={(e) => handleSubmit()}\n            className='save_button'\n          ></input>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default ListingSettings;\n","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Messages\\message.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\OnBoarding\\OnBoarding.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Basic\\BasicForm.jsx",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Axios from \"../../services/Axios\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport \"./BasicForm.css\";\nimport { Link } from \"react-router-dom\";\nimport LoadingSpinner from \"../utils/loader\";\nimport { assetsURL, socketCon } from \"../../services/Axios\";\nimport io from \"socket.io-client\";\nimport SocketIOFileUpload from \"socketio-file-upload\";\nimport PaymentAlert from \"../../Components/paymentAlert/PaymentAlert\";\nimport imageCompression from \"browser-image-compression\";\n\n// const socket = io(socketCon);\n\nconst $ = window.$;\n\nclass BasicForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      savedCards: [],\n      username: \"\",\n      password: \"\",\n      users: [],\n      website: \"\",\n      otherssignal: false,\n      loading: false,\n      offeredRate: {},\n      input1: localStorage.getItem(\"condition\") || \"\",\n      input2: \"\",\n      input3: 0,\n      input4: 0,\n      input5: \"\",\n      input6: \"\",\n      input7: \"\",\n      input8: \"\",\n      input9: \"\",\n      input10: \"\",\n      input11: 0,\n      input12: 0,\n      costOfGoods: 0,\n      category: \"\",\n      isSubmitting: false,\n      ebay: localStorage.getItem(\"ebay\") === \"true\", //for selection presence\n      mercari: localStorage.getItem(\"mercari\") === \"true\",\n      poshmark: localStorage.getItem(\"poshmark\") === \"true\",\n      delist: localStorage.getItem(\"delist\") === \"true\",\n      OtherState: localStorage.getItem(\"otherState\" === \"true\"),\n      images: [\n        { key: \"default_image\", label: \"Default\", img: \"\" },\n        { key: \"brand_image\", label: \"Brand\", img: \"\" },\n        { key: \"model_image\", label: \"Model\", img: \"\" },\n        { key: \"side1_image\", label: \"Side\", img: \"\" },\n        { key: \"side2_image\", label: \"Side\", img: \"\" },\n        { key: \"front_image\", label: \"Front\", img: \"\" },\n        { key: \"back_image\", label: \"Back\", img: \"\" },\n        { key: \"condition1_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition2_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition3_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition4_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition5_image\", label: \"Image Tag\", img: \"\" },\n      ],\n      Ebay: false, //for Login presence\n      Poshmark: false,\n      Mercari: false,\n      othersbool: false,\n      others: [],\n      othersstate: [],\n      bal: 0,\n      rates: {},\n      fullimg: \"\",\n      img: [],\n      cid: \"\",\n      open: false,\n      client_id: \"\",\n      templates: [],\n      templateId: \"\",\n      productId: \"\",\n    };\n    this.handleChange.bind(this);\n  }\n\n  componentDidMount = () => {\n    const { cid, images } = this.state;\n    Axios.get(\"/password/getstatus\").then(({ data }) => {\n      //console.log(data);\n      this.setState({ Ebay: data.Ebay });\n      this.setState({ Poshmark: data.Poshmark });\n      this.setState({ Mercari: data.Mercari });\n    });\n\n    Axios.get(\"/template\")\n      .then((data) => {\n        //console.log(data, \"template data\");\n        this.setState({ templates: data.data.templates });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    Axios.get(\"/password/getstatus/others\").then(({ data }) => {\n      //console.log(data, \"other data\");\n      if (data.length > 0) {\n        this.setState({ othersbool: true });\n        data.map((d, i) => {\n          const others = [...this.state.others];\n          others.push(d);\n\n          this.setState({ others });\n\n          const otherss = [...this.state.othersstate];\n\n          otherss.push(localStorage.getItem(d) || false);\n          console.log(otherss, \"otherssssssssssssssssssssssss\");\n\n          this.setState({ othersstate: otherss });\n          // if (!localStorage.getItem(d)) {\n          //   localStorage.setItem(d, false);\n          // }\n\n          //console.log(this.state.othersstate)\n        });\n      }\n    });\n\n    Axios.get(\"/payment/rates\")\n      .then((res) => {\n        //rates = res.data[res.data.length - 1];\n        this.setState({ rates: res.data[res.data.length - 1] });\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n\n    Axios.get(\"/clientdetails\")\n      .then(({ data }) => {\n        console.log({ data }, \"client user value check\");\n        console.log(data, \"client detail\");\n        if (parseInt(data.balance) < 5 && data.savedCards.length > 0) {\n          this.setState({ open: true });\n        }else if(parseInt(data.balance) < 5 && data.savedCards.length == 0) {\n          window.alert(\n            \"Low Payment and No card added, Please add a card and then add payment..\"\n          );\n          window.open(\"/addpayment\", \"_self\");\n        }\n        this.setState({\n          bal: data.balance,\n          client_id: data._id,\n          savedCards: data.savedCards,\n          cid: data._id,\n          offeredRate: data.offeredRate || {},\n        });\n        this.setState({ cid: data._id }, () =>\n          localStorage.setItem(\"cid\", this.state.cid)\n        );\n\n        // socket.emit(\"cidinit\", { cid: this.state.cid });\n        // console.log(this.state.cid);\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n\n    // var uploader = new SocketIOFileUpload(socket);\n    // uploader.listenOnInput(document.getElementById(\"bulk\"));\n    // uploader.addEventListener(\"start\", function (event) {\n    //   event.file.meta.cid = localStorage.getItem(\"cid\");\n    // });\n    // socket.on(\"server2clientimg\", (i) => {\n    //   //console.log(i);\n    //   i.img.map((imgi) => {\n    //     if (imgi.cid == localStorage.getItem(\"cid\"))\n    //       images[imgi.index].img = imgi.name;\n    //   });\n\n    //   this.setState({\n    //     images,\n    //   });\n    // });\n  };\n\n  // imgStatusHandler = () => {\n  //   const { cid } = this.state;\n  //   console.log(\"called imgStatusHandler\");\n  //   socket.emit(\"getuploadstatus\", { cid: cid });\n  //   socket.on(\"imgupload\", (i) => {\n  //     console.log(\"imgcnt:\" + i.imgcnt);\n  //     var imglen = this.state.images.filter((i) => {\n  //       if (i.img != \"\") {\n  //         return true;\n  //       }\n  //     });\n  //     console.log(imglen.length);\n  //     if (i.cid == cid && imglen.length == i.imgcnt) {\n  //       return false;\n  //     } else {\n  //       return true;\n  //     }\n  //   });\n  // };\n\n  fetchimg = (src) => {\n    const { cid } = this.state;\n    this.setState({ fullimg: src }, () => {\n      $(\"#addTemplateModal1\").modal(\"show\");\n    });\n    // socket.emit(\"getimg\", { cid: cid });\n    // socket.on(\"reimg\", (re) => {\n    //   //this.setState({ img: \"\" });\n    //   console.log(re.id);\n    //   console.log(\"this\");\n    //   console.log(re);\n    //   this.setState({ img: re.img }, () => {\n    //     this.state.img.forEach((i) => {\n    //       if (i.key == this.state.fullimg) {\n    //         // this.setState({ fullimg: src }, () => {\n    //         //   $(\"#addTemplateModal1\").modal(\"show\");\n    //         // });\n    //       }\n    //     });\n    //   });\n    //   console.log(this.state.img);\n    // });\n  };\n\n  change = (e) => {\n    if (e.target.name === \"input1\") {\n      localStorage.setItem(\"condition\", e.target.value);\n    }\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  setCategory = (str) => {\n    if (this.state.category === str) {\n      this.setState({ category: \"\" });\n    } else {\n      this.setState({ category: str });\n    }\n  };\n\n  onSubmit = () => {\n    //e.preventDefault();\n    const { images, cid } = this.state;\n    const data = new FormData();\n\n    images.forEach((image) => {\n      if (!!image.img) data.append(image.key, image.img);\n    });\n\n    if (images[0].img == \"\") {\n      return alert(\"Atleast first image is required\");\n    }\n\n    if (this.state.input1 == \"Select Condition *\" || this.state.input1 == \"\") {\n      return alert(\"Condition is required\");\n    }\n\n    var y = [];\n    this.state.others.map((o, i) => {\n      let obj = {\n        name: o,\n        status: this.state.othersstate[i],\n        url: \"\",\n      };\n      y.push(obj);\n    });\n    //console.log(y);\n\n    var mplace = true;\n\n    if (\n      this.state.Ebay == true ||\n      this.state.Poshmark == true ||\n      this.state.Mercari == true ||\n      this.state.others.length != 0\n    ) {\n      mplace = true;\n    } else {\n      mplace = false;\n      return $(\"#addTemplateModal\").modal(\"show\");\n      //return alert(\"Please have marketplace logins atleast\")\n    }\n\n    var flag = 0;\n    this.state.othersstate.forEach((os) => {\n      if (os == \"true\") {\n        flag = 1;\n      }\n    });\n    if (\n      (this.state.Ebay == true && this.state.ebay == true) ||\n      (this.state.Poshmark == true && this.state.poshmark == true) ||\n      (this.state.Mercari == true && this.state.mercari == true)\n    ) {\n      flag = 1;\n    }\n    if (mplace == \"true\" && flag == 0) {\n      return alert(\"Please choose any marketplace to list the product\");\n    }\n\n    //bal check routine\n    var cnt = 0;\n\n    if (this.state.Ebay && this.state.ebay == true) {\n      cnt++;\n    }\n    if (this.state.Poshmark && this.state.poshmark == true) {\n      cnt++;\n    }\n    if (this.state.Mercari && this.state.mercari == true) {\n      cnt++;\n    }\n    this.state.othersstate.forEach((os) => {\n      if (os == \"true\") {\n        cnt++;\n        console.log(os);\n      }\n    });\n    var rate1 = 0,\n      rate2 = 0,\n      rate3 = 0;\n    var total = 0;\n    rate1 = (this.state.rates.basic / 100) * 1;\n    rate2 = (this.state.rates.advance / 100) * (cnt - 1);\n    if (this.state.delist == true) {\n      rate3 = (this.state.rates.list / 100) * (cnt - 1);\n    }\n    total = rate1 + rate2 + rate3;\n    console.log(this.state.bal);\n\n    if (this.state.bal - total < 0) {\n      if (this.state.savedCards.length > 0) {\n        this.setState({ open: true });\n        window.alert('Insufficient balance')\n      }else{\n        window.alert(\n          \"Low Payment and No card added, Please add a card and then add payment..\"\n        );\n        window.open(\"/addpayment\", \"_self\");\n      }\n    }\n\n    console.log(y, \"chening y value\");\n    data.append(\"sku\", this.state.input2);\n\n    if (this.state.input3 == 0) {\n      data.append(\"quantity\", 1);\n    } else {\n      data.append(\"quantity\", this.state.input3);\n    }\n\n    data.append(\"price\", this.state.input4);\n    data.append(\"brand\", this.state.input5);\n    data.append(\"model\", this.state.input6);\n    data.append(\"note\", this.state.input7);\n    data.append(\"condition_name\", this.state.input1);\n    if (this.state.Ebay) {\n      data.append(\"ebayc\", this.state.ebay);\n    } else {\n      data.append(\"ebayc\", false);\n    }\n    if (this.state.Mercari) {\n      data.append(\"mercaric\", this.state.mercari);\n    } else {\n      data.append(\"mercaric\", false);\n    }\n    if (this.state.Poshmark) {\n      data.append(\"poshmarkc\", this.state.poshmark);\n    } else {\n      data.append(\"poshmarkc\", false);\n    }\n    // if(this.state.others){\n    //     for(let i = 0 ; i < this.state.others.length ; i++){\n    //     data.append(this.state.others[i],false)\n    // }\n    // }\n\n    data.append(\"waist\", this.state.input8);\n    data.append(\"inseam\", this.state.input9);\n    data.append(\"category\", this.state.category);\n    data.append(\"rise\", this.state.input10);\n    data.append(\"weightLB\", this.state.input11);\n    data.append(\"weightOZ\", this.state.input12);\n    data.append(\"delistc\", this.state.delist);\n    data.append(\"activity\", \"basic\");\n    data.append(\"status\", true);\n    data.append(\"listed\", false);\n    data.append(\"costOfGoods\", this.state.costOfGoods || 0);\n    data.append(\"others\", JSON.stringify(y));\n    data.append(\"rate1\", rate1);\n    data.append(\"rate2\", rate2);\n    data.append(\"rate3\", rate3);\n    data.append(\"prodStatus\", \"submitted\");\n\n    localStorage.setItem(\"ebay\", this.state.ebay);\n    localStorage.setItem(\"mercari\", this.state.mercari);\n    localStorage.setItem(\"poshmark\", this.state.poshmark);\n    localStorage.setItem(\"delist\", this.state.delist);\n    this.setState({ isSubmitting: true });\n\n    // var object = {};\n    // data.forEach(function (value, key) {\n    //   object[key] = value;\n    // });\n    // if (this.imgStatusHandler()) {\n    //   this.setState({ isSubmitting: false });\n    //   return alert(\"Please Wait! Images are uploading.....\");\n    // } else {\n    //let productId = ''\n    console.log(data)\n    Axios.post(\"/product\", data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"x-access-token\": `${localStorage.getItem(\"token\")}`,\n      },\n    })\n\n      .then((response) => {\n        console.log(response, \"data append\");\n        let productId = response.data.products\n          ? response.data.products[response.data.products.length - 1]._id\n          : response.data.products;\n        if (this.state.templateId) {\n          Axios.post(\n            \"/producttemplate\",\n            { productId: productId, templateId: this.state.templateId },\n            {\n              headers: {\n                \"x-access-token\": `${localStorage.getItem(\"token\")}`,\n              },\n            }\n          ).then((response) => {\n            console.log(response, \"user data user\");\n          });\n        }\n        window.open(\"/basic\", \"_self\");\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify({ err: err })));\n    //}\n  };\n\n  handleSubmit = (e) => {\n    const { website, username, password, users } = this.state;\n    e.preventDefault();\n    if (website != \"\" && username != \"\" && password != \"\") {\n      this.setState({ loading: true });\n\n      Axios.post(\"/password\", {\n        website: website,\n        username: username,\n        password: password,\n      })\n        .then((response) => {\n          //this.setState({ loading: false });\n          alert(\"Login details has been added\");\n          if (website == \"Ebay\") {\n            this.setState({ Ebay: true });\n            this.setState({ loading: false });\n          } else if (website == \"Poshmark\") {\n            this.setState({ Poshmark: true });\n            this.setState({ loading: false });\n          } else if (website == \"Mercari\") {\n            this.setState({ Mercari: true });\n            this.setState({ loading: false });\n          } else {\n            // const others = [...this.state.others];\n            // others.push(website);\n            // this.setState({ others });\n            // const otherss = [...this.state.othersstate];\n            // otherss.push(true);\n            // this.setState({ othersstate: otherss });\n\n            Axios.get(\"/password/getstatus/others\").then(({ data }) => {\n              //console.log(data);\n              this.setState({ loading: false });\n              if (data.length > 0) {\n                this.setState({ othersbool: true });\n                data.map((d, i) => {\n                  const others = [...this.state.others];\n                  others.push(d);\n                  this.setState({ others });\n\n                  const otherss = [...this.state.othersstate];\n                  otherss.push(true);\n                  this.setState({ othersstate: otherss });\n                });\n              }\n            });\n          }\n          //  Axios.get(\"/password/getstatus\").then(({ data }) => {\n          //   //console.log(data);\n          //   this.setState({ Ebay: data.Ebay });\n          //   this.setState({ Poshmark: data.Poshmark });\n          //   this.setState({ Mercari: data.Mercari });\n          // });\n        })\n        .catch((err) => {\n          this.setState({ isSubmitting: true });\n          console.log(err) || alert(JSON.stringify({ err: err }));\n        });\n    } else {\n      alert(\"Fill up the details\");\n    }\n  };\n\n  handleChange = async (event) => {\n    const { images, cid } = this.state;\n    //console.log(images);\n    const options = {\n      maxSizeMB: 0.3,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n    const idx = images.findIndex((image) => image.key === event.target.name);\n    try {\n      this.setState({ isSubmitting: true });\n      let compressedFile = await imageCompression(\n        event.target.files[0],\n        options\n      );\n      images[idx].img = compressedFile;\n      this.setState({\n        images,\n      });\n      this.setState({ isSubmitting: false });\n    } catch (error) {\n      console.log(error);\n    }\n\n    // console.log(event.target.files[0]);\n    // var reader = new FileReader();\n    // reader.readAsDataURL(event.target.files[0]);\n    // reader.onload = function () {\n    //   //console.log(reader.result);\n    //   socket.emit(\"img\", {\n    //     key: images[idx].key,\n    //     base64: reader.result,\n    //     cid: cid,\n    //   });\n    // };\n    // reader.onerror = function (error) {\n    //   console.log(\"Error: \", error);\n    // };\n    // console.log(this.state.images);\n  };\n\n  handleChangepop = (e) => {\n    const { name, value } = e.target;\n    if (value == \"Others\") {\n      this.setState({ otherssignal: true });\n    } else {\n      if (value == \"Ebay\" || value == \"Poshmark\" || value == \"Mercari\") {\n        this.setState({ otherssignal: false });\n      }\n      this.setState({ [name]: value });\n    }\n  };\n\n  handleOnClick = (o, i) => {\n    // const ot = [...othersstate];\n    // ot[i] = !ot[i];\n    if (this.state.othersstate[i] == \"false\") {\n      this.state.othersstate[i] = \"true\";\n    } else if (this.state.othersstate[i] == \"true\") {\n      this.state.othersstate[i] = \"false\";\n    }\n    localStorage.setItem(o, this.state.othersstate[i]);\n    this.setState({ othersstate: this.state.othersstate });\n  };\n\n  handleBulkUpload = async (e) => {\n    const { images, cid } = this.state;\n    var imgobj = [];\n    const files = e.target.files;\n    const count = files.length;\n\n    const options = {\n      maxSizeMB: 0.3,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n    this.setState({ isSubmitting: true });\n    for (let i = 0; i < count; i++) {\n      const idx = images.findIndex((image) => !image.img);\n      if (idx > -1) {\n        try {\n          console.log(files[i]);\n          let compressedFile = await imageCompression(files[i], options);\n          console.log(compressedFile);\n          images[idx].img = compressedFile;\n          this.setState({ images }, () => console.log(this.state.images));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n    this.setState({ isSubmitting: false });\n    //this.setState({ images }, () => console.log(this.state.images));\n\n    // images.map((i) => {\n    //   var reader = new FileReader();\n    //   if (i.img != \"\") {\n    //     reader.readAsDataURL(i.img);\n    //     reader.onload = function () {\n    //       //console.log(reader.result);\n    //       imgobj.push({ base64: reader.result, cid: cid, key: i.key });\n    //       setTimeout(() => {\n    //         socket.emit(\"img\", {\n    //           key: i.key,\n    //           base64: reader.result,\n    //           cid: cid,\n    //         });\n    //       }, 1000);\n    //     };\n    //     reader.onerror = function (error) {\n    //       console.log(\"Error: \", error);\n    //     };\n    //   }\n    // });\n\n    // setTimeout(() => {\n    //   socket.emit(\"bimg\", {\n    //     bimg: imgobj,\n    //     cid: cid,\n    //   });\n    // }, 2000);\n  };\n\n  handleChangesTemplate = (e) => {\n    this.setTemplate(e.target.value);\n  };\n\n  setTemplate = (id) => {\n    this.setState({ templateId: id });\n  };\n\n  removeImg = (idx) => {\n    const { images } = this.state;\n    images[idx].img = \"\";\n    this.setState({ images });\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  updatePayment = async (amount, stripeId) => {\n    let body = {\n      customer_id: this.state.client_id,\n      amount: amount,\n      stripeId: stripeId,\n    };\n    this.setState({ open: false });\n    await Axios.post(\"/payment/payment\", body)\n      .then(({ data }) => {\n        console.log(data, \"update mpadfjafjk\");\n        if (data.success) {\n          alert(data.msg);\n          window.open(\"/basic\", \"_self\");\n        } else {\n          alert(\"Credit Card is Not added\");\n          window.open(\"/addpayment\", \"_self\");\n        }\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n  };\n  render() {\n    const {\n      website,\n      username,\n      password,\n      users,\n      otherssignal,\n\n      images,\n      isSubmitting,\n      Ebay,\n      Poshmark,\n      Mercari,\n      othersbool,\n      others,\n      othersstate,\n      fullimg,\n      img,\n      templates,\n    } = this.state;\n    //console.log(document.getElementById('bulk'),'dgmt')\n    //document.getElementById('bulk').addEventListener( 'click', onMouse, false );\n    return (\n      <div className=\"container mt-5\">\n        <PaymentAlert\n          open={this.state.open}\n          handleClose={this.handleClose}\n          updatePayment={this.updatePayment}\n          savedCards={this.state.savedCards}\n        />\n        <Link to=\"/products/submitted\">\n          <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n        </Link>\n        <div className=\"row\">\n          <div\n            className=\"modal fade  bd-example-modal-sm\"\n            id=\"addTemplateModal\"\n            tabIndex={-1}\n            role=\"dialog\"\n            aria-labelledby=\"addTemplateModalLabel\"\n            aria-hidden=\"true\"\n          >\n            <div\n              className=\"modal-dialog modal-sm  modal-dialog-centered\"\n              role=\"document\"\n            >\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h6 className=\"modal-title\" id=\"addTemplateModalLabel\">\n                    Logins\n                  </h6>\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  >\n                    <span aria-hidden=\"true\">×</span>\n                  </button>\n                </div>\n                <div className=\"col-12 py-2\">\n                  <div className=\"card p-3 mb-3\">\n                    {this.state.loading ? (\n                      <div className=\"center\">\n                        <LoadingSpinner asOverlay />\n                      </div>\n                    ) : null}\n                    <h6 className=\"mb-3  sub-heading\">\n                      Please enter the logins for each site you want to list &\n                      list to\n                    </h6>\n                    <select\n                      className=\"form-control body-text\"\n                      name=\"website\"\n                      value={website}\n                      onChange={this.handleChangepop}\n                    >\n                      <option>Select Site</option>\n                      {Ebay ? null : <option defaultValue=\"Ebay\">Ebay</option>}\n                      {Poshmark ? null : (\n                        <option defaultValue=\"Poshmark\">Poshmark</option>\n                      )}\n                      {Mercari ? null : (\n                        <option defaultValue=\"Mercari\">Mercari</option>\n                      )}\n                      <option defaultValue=\"other\">Others</option>\n                    </select>\n                    <br />\n                    {otherssignal ? (\n                      <>\n                        <input\n                          type=\"text\"\n                          placeholder=\"Website\"\n                          className=\"form-control mt-3\"\n                          name=\"website\"\n                          defaultValue=\"\"\n                          onChange={this.handleChangepop}\n                        />\n                      </>\n                    ) : null}\n                    <input\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      className=\"form-control mt-3 body-text\"\n                      name=\"username\"\n                      value={username}\n                      onChange={this.handleChangepop}\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Password\"\n                      className=\"form-control mt-3\"\n                      name=\"password\"\n                      value={password}\n                      onChange={this.handleChangepop}\n                    />\n                    <div className=\"text-center\">\n                      <button\n                        className=\"btn btn-danger mt-3 text-center\"\n                        onClick={this.handleSubmit}\n                      >\n                        Add\n                      </button>\n                      <br />\n                      <br />\n                      <small className=\"ml-2\">\n                        You can always add more logins under setting in the\n                        future\n                      </small>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-12 col-md-6\">\n            <div className=\"row m-auto\">\n              {images.map((image, idx) => {\n                return (\n                  <div className=\"col-4 col-md-3 px-1 \">\n                    <div\n                      className=\"modal fade bd-example-modal-sm\"\n                      id=\"addTemplateModal1\"\n                      tabIndex={-1}\n                      role=\"dialog\"\n                      aria-labelledby=\"addTemplateModalLabel\"\n                      aria-hidden=\"true\"\n                    >\n                      <div\n                        className=\"modal-dialog modal-lg  modal-dialog-centered\"\n                        role=\"document\"\n                      >\n                        <div className=\"modal-content\">\n                          <div className=\"modal-header\">\n                            <button\n                              type=\"button\"\n                              className=\"close\"\n                              data-dismiss=\"modal\"\n                              aria-label=\"Close\"\n                            >\n                              <span aria-hidden=\"true\">×</span>\n                            </button>\n                          </div>\n\n                          <img src={fullimg} style={{ height: \"500px\" }} />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"card mb-3\">\n                      <div className=\"card-body body-text text-center align-middle d-flex align-items-center justify-content-center p-2 px-1\">\n                        {image.img ? (\n                          <div className=\"container p-0 m-0\">\n                            <img\n                              src={\n                                typeof image.img === \"string\"\n                                  ? assetsURL + image.img\n                                  : URL.createObjectURL(image.img)\n                              }\n                              style={{ width: \"100%\", height: \"90px\" }}\n                              onClick={() => {\n                                this.setState({ fullimg: image.key }, () => {\n                                  this.fetchimg(\n                                    typeof image.img === \"string\"\n                                      ? assetsURL + image.img\n                                      : URL.createObjectURL(image.img)\n                                  );\n                                });\n                              }}\n                            />\n                            <button\n                              type=\"button\"\n                              className=\"btn2 close mr-auto\"\n                              data-dismiss=\"modal\"\n                              aria-label=\"Close\"\n                              onClick={() => this.removeImg(idx)}\n                            >\n                              <span aria-hidden=\"true\">×</span>\n                            </button>\n                          </div>\n                        ) : (\n                          <div\n                            style={{\n                              width: \"80px\",\n                              height: \"90px\",\n                              margin: \"0px!important\",\n                            }}\n                            className=\"d-flex align-items-center justify-content-center\"\n                          >\n                            <label>\n                              <div className=\"fas fa-plus\"></div> <br />\n                              {image.label}\n                            </label>\n\n                            <input\n                              type=\"file\"\n                              style={styles.inputFile}\n                              name={image.key}\n                              accept=\"image/*\"\n                              onChange={this.handleChange}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"col-12 px-1\">\n                <div className=\"input-group mb-3\">\n                  {this.state.isSubmitting ? (\n                    <div className=\"center\">\n                      <LoadingSpinner />\n                    </div>\n                  ) : null}\n                  <div className=\"custom-file\">\n                    <input\n                      id=\"bulk\"\n                      type=\"file\"\n                      accept=\"image/*\"\n                      className=\"custom-file-input\"\n                      multiple\n                      onChange={(e) => {\n                        this.handleBulkUpload(e);\n                      }}\n                      onClick={(e) => {\n                        console.log(e, \"onclick\");\n                      }}\n                    ></input>\n                    <label\n                      className=\"custom-file-label\"\n                      htmlFor=\"inputGroupFile01\"\n                    >\n                      Bulk Upload Images\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-12 px-1 ml-3\">\n                  <select\n                    value={this.state.templateId}\n                    className=\"form-control\"\n                    id=\"template\"\n                    onChange={this.handleChangesTemplate}\n                  >\n                    <option value=\"\">Choose Template</option>\n                    {templates &&\n                      templates.map((template) => {\n                        return (\n                          <option value={template._id}>{template.name}</option>\n                        );\n                      })}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-12 col-md-6 pt-4 pt-lg-0\">\n            <div className=\"row w-lg-75 mt-lg-0 m-auto\">\n              <div className=\"col-sm-12 col-md-6  mb-4 px-1 my-4\">\n                <select\n                  className=\"custom-select\"\n                  value={this.state.input1}\n                  name=\"input1\"\n                  onChange={(e) => this.change(e)}\n                  required\n                >\n                  <option>Select Condition *</option>\n                  <option value=\"New\">New</option>\n                  <option value=\"New With Tags\">New With Tags</option>\n                  <option value=\"New (Other/Open Box)\">New (Other/Open Box)</option>\n                  <option value=\"New With Defects\">New With Defects</option>\n                  <option value=\"Seller Refurbished\">Seller Refurbished</option>\n                  <option value=\"Used\">Used</option>\n                  <option value=\"Broken/For Repair\">Broken/For Repair</option>\n                </select>\n              </div>\n              <div className=\"col-sm-12 col-md-6  mb-4 mt-4 px-1\">\n                <input\n                  type=\"text\"\n                  onChange={(e) => this.change(e)}\n                  value={this.state.input2}\n                  name=\"input2\"\n                  placeholder=\"SKU\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-sm-12 col-md-6  mb-4 px-1\">\n                <input\n                  type=\"text\"\n                  onChange={(e) => this.change(e)}\n                  value={this.state.input5}\n                  name=\"input5\"\n                  placeholder=\"Brand\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-sm-12 col-md-6  mb-4 px-1\">\n                <input\n                  type=\"text\"\n                  onChange={(e) => this.change(e)}\n                  value={this.state.input6}\n                  name=\"input6\"\n                  placeholder=\"Model\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-4 mb-4 px-1\">\n                <input\n                  type=\"number\"\n                  onChange={(e) => this.change(e)}\n                  value={this.state.input3 === 0 ? \"\" : this.state.input3}\n                  name=\"input3\"\n                  defaultValue=\"1\"\n                  placeholder=\"Quantity(1)\"\n                  min=\"1\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-4 mb-4 px-1\">\n                <input\n                  type=\"number\"\n                  onChange={(e) => this.change(e)}\n                  value={this.state.input4 === 0 ? \"\" : this.state.input4}\n                  name=\"input4\"\n                  placeholder=\"Selling Price\"\n                  min=\"0\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-4 mb-4 px-1\">\n                <input\n                  type=\"number\"\n                  name=\"costOfGoods\"\n                  onChange={(e) => this.change(e)}\n                  placeholder=\"Cost of Goods\"\n                  className=\"form-control\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"col-12 d-flex justify-content-between align-content-center border round p-3\">\n                <ButtonGroup\n                  category=\"Unisex Kids\"\n                  selectedCategory={this.state.category}\n                  setCategory={this.setCategory}\n                />\n                <ButtonGroup\n                  category=\"Men\"\n                  selectedCategory={this.state.category}\n                  setCategory={this.setCategory}\n                />\n                <ButtonGroup\n                  category=\"Women\"\n                  selectedCategory={this.state.category}\n                  setCategory={this.setCategory}\n                />\n                <ButtonGroup\n                  category=\"Girls\"\n                  selectedCategory={this.state.category}\n                  setCategory={this.setCategory}\n                />\n                <ButtonGroup\n                  category=\"Boys\"\n                  selectedCategory={this.state.category}\n                  setCategory={this.setCategory}\n                />\n              </div>\n              <div className=\"d-flex justify-content-between py-2 my-2\">\n                <div className=\"mr-1\">\n                  <input\n                    type=\"text\"\n                    onChange={(e) => this.change(e)}\n                    value={this.state.input8}\n                    name=\"input8\"\n                    placeholder=\"Waist\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"mr-1\">\n                  <input\n                    type=\"text\"\n                    onChange={(e) => this.change(e)}\n                    value={this.state.input9}\n                    name=\"input9\"\n                    placeholder=\"Inseam\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"mr-1\">\n                  <input\n                    type=\"text\"\n                    onChange={(e) => this.change(e)}\n                    value={this.state.input10}\n                    name=\"input10\"\n                    placeholder=\"Rise\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"mr-1\">\n                  <input\n                    type=\"number\"\n                    onChange={(e) => this.change(e)}\n                    value={this.state.input11 === 0 ? \"\" : this.state.input11}\n                    name=\"input11\"\n                    placeholder=\"W (LB)\"\n                    min=\"0\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"\">\n                  <input\n                    type=\"number\"\n                    onChange={(e) => this.change(e)}\n                    value={this.state.input12 === 0 ? \"\" : this.state.input12}\n                    name=\"input12\"\n                    placeholder=\"W (OZ)\"\n                    min=\"0\"\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-sm-12  mb-4 px-1 py-2\">\n                <textarea\n                  type=\"text\"\n                  onChange={(e) => this.change(e)}\n                  value={this.state.input7}\n                  rows=\"4\"\n                  name=\"input7\"\n                  placeholder=\"Notes For VA\"\n                  className=\"form-control\"\n                ></textarea>\n              </div>\n              <div className=\"col-12 col-lg-12\">\n                {Ebay ? (\n                  <div className=\"col-12 col-lg-6\">\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        checked={this.state.ebay}\n                        onChange={() =>\n                          this.setState({ ebay: !this.state.ebay })\n                        }\n                        id=\"ebay\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"ebay\">\n                        List on eBay\n                      </label>\n                    </div>\n                  </div>\n                ) : null}\n                {Poshmark ? (\n                  <div className=\"col-12 col-lg-6\">\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        checked={this.state.poshmark}\n                        onChange={() =>\n                          this.setState({ poshmark: !this.state.poshmark })\n                        }\n                        defaultChecked=\"true\"\n                        id=\"poshmark\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"poshmark\">\n                        List on Poshmark\n                      </label>\n                    </div>\n                  </div>\n                ) : null}\n                {Mercari ? (\n                  <div className=\"col-12 col-lg-6\">\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        checked={this.state.mercari}\n                        onChange={() =>\n                          this.setState({ mercari: !this.state.mercari })\n                        }\n                        id=\"mercari\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"mercari\">\n                        List on Mercari\n                      </label>\n                    </div>\n                  </div>\n                ) : null}\n                {othersbool\n                  ? others.map((o, i) => {\n                      console.log(\n                        this.state.othersstate[i],\n                        i,\n                        \"othherbadkjfkjb\"\n                      );\n                      return (\n                        <div\n                          className=\"col-12 col-lg-6\"\n                          onClick={() => this.handleOnClick(o, i)}\n                        >\n                          <div className=\"form-check\">\n                            {this.state.othersstate[i] == \"true\" ? (\n                              <input\n                                className=\"form-check-input\"\n                                type=\"checkbox\"\n                                checked\n                              />\n                            ) : (\n                              <input\n                                className=\"form-check-input\"\n                                type=\"checkbox\"\n                              />\n                            )}\n\n                            <label\n                              className=\"form-check-label\"\n                              htmlFor=\"mercari\"\n                            >\n                              List on {o}\n                            </label>\n                          </div>\n                        </div>\n                      );\n                    })\n                  : null}\n                <div className=\"col-12 col-lg-6\">\n                  <div className=\"form-check\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"checkbox\"\n                      checked={this.state.delist}\n                      onChange={() =>\n                        this.setState({ delist: !this.state.delist })\n                      }\n                      id=\"delist\"\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"delist\">\n                      Delist once item is sold\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-6 px-1 mt-2\">\n                {isSubmitting ? (\n                  <button\n                    className=\"btn btn-success btn-block d-flex align-items-center justify-content-center\"\n                    disabled\n                  >\n                    <span\n                      className=\"spinner-border spinner-border-sm mr-2\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                    Submit\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    onClick={() => this.onSubmit()}\n                    className=\"btn btn-success mb-4 btn-block\"\n                  >\n                    Submit\n                  </button>\n                )}\n              </div>\n              <div className=\"col-6 px-1 mt-2\">\n                <input\n                  type=\"button\"\n                  value=\"Cancel\"\n                  onClick={() => this.props.history.push(\"/products\")}\n                  className=\"btn btn-danger mb-4 btn-block\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <br />\n        <div style={{ marginBottom: \"60px\" }}></div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  inputFile: {\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    height: \"100%\",\n    width: \"100%\",\n    opacity: 0,\n  },\n};\n\nexport default withRouter(BasicForm);\n","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\EditForm\\EditForm.jsx",["240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { Component } from \"react\";\nimport LeftSection from \"./components/LeftSection/LeftSection\";\nimport RightSection from \"./components/RightSection/RightSection\";\nimport \"./EditForm.css\";\nimport Axios from \"../../services/Axios\";\n//import LoadingSpinner from \"../utils/loader\";\nimport imageCompression from \"browser-image-compression\";\nimport { has } from \"rambda\";\nimport { evaluateTree } from \"../utils/parser\";\n//import $ from \"jquery\";\n//import imageDataURI from \"image-data-uri\";\nimport jwt_decode from \"jwt-decode\";\n\nclass EditForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        line1: { line1: \"\", value1: \"\" },\n        line2: { line2: \"\", value2: \"\" },\n        line3: { line3: \"\", value3: \"\" },\n        line4: { line4: \"\", value4: \"\" },\n        line5: { line5: \"\", value5: \"\" },\n        line6: { line6: \"\", value6: \"\" },\n        line7: { line7: \"\", value7: \"\" },\n        line8: { line8: \"\", value8: \"\" },\n        ebay: { title: \"\", check: \"\", url: \"\" },\n        poshmark: { title: \"\", check: \"\", url: \"\" },\n        mercari: { title: \"\", check: \"\", url: \"\" },\n        delist: { title: \"\", check: \"\", url: \"\" },\n      },\n      isSubmitting: false,\n      extraMeasures: [],\n      extraDescriptions: [],\n      deletedDescriptions: [],\n      ctemplates: [],\n      templates: [],\n      count: 1,\n      count1: 1,\n      images: [\n        { key: \"default_image\", label: \"Default\", img: \"\" },\n        { key: \"brand_image\", label: \"Brand\", img: \"\" },\n        { key: \"model_image\", label: \"Model\", img: \"\" },\n        { key: \"side1_image\", label: \"Side\", img: \"\" },\n        { key: \"side2_image\", label: \"Side\", img: \"\" },\n        { key: \"front_image\", label: \"Front\", img: \"\" },\n        { key: \"back_image\", label: \"Back\", img: \"\" },\n        { key: \"condition1_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition2_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition3_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition4_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition5_image\", label: \"Image Tag\", img: \"\" },\n      ],\n      sku: \"\",\n      Ebay: false,\n      Poshmark: false,\n      Mercari: false,\n      othersbool: false,\n      others: [],\n      othersstate: [],\n      otherfromdb: [],\n      othertolist: [],\n\n      othersurl: [],\n      ebayurl: \"\",\n      poshmarkurl: \"\",\n      mercariurl: \"\",\n      showcat: false,\n\n      rates: {},\n      bal: 0,\n      basiccheck: true,\n      advancecheck: true,\n      activity: \"\",\n      activity_check: true,\n      editchange: false,\n      brandacc: 0,\n      coloracc: 0,\n      labelacc : 0,\n      productid : \"\",\n      clientid : \"\",\n      productMessage : [],\n      messageNotSeen : [],\n      agentName : '',\n      templateIdd: '',\n\n      ebayCategoryDropDownItems: [],\n      shippingDropDownItems: [],\n      companyBlurb: \"\",\n      originZipCode: 0,\n      calculatedShippingActive: false,\n      freeShippingActive: false,\n      flatShippingActive: false,\n      flatShippingRules: [],\n      bestOfferActive: false,\n      bestOfferSettings: [],\n      mercariHashtags: [],\n      internationalShipping: [],\n      compPriceSetting: \"\",\n      compPriceIncreaseValue: 0,\n      compPriceIncreaseMethod: \"\",\n      rightSectionProps: [],\n    };\n    const token = localStorage.getItem(\"token\");\n    const decoded = jwt_decode(token);\n    this.agentid = decoded._doc._id;\n  }\n\n  handleChangesTemplate = (e) => {\n    this.setState({ templateIdd: e.target.value });\n    this.setTemplate(e.target.value);\n  };\n\n  handelMessageNotSeen() {\n    var msgSeenTemp = [];\n    var data = this.state.data;\n    console.log(data,'dataaaaaaaaaa')\n    if (data.messageSeen) {\n      for (let i = 0; i < data.messageSeen.length; i++) {\n        if (data.messageSeen[i].client === false) {\n          msgSeenTemp.push(data.messageSeen[i].field);\n        }\n      }\n    }\n    this.setState({ messageNotSeen: msgSeenTemp });\n  }\n  setTemplate = (tempid) => {\n    //const { images } = this.state;\n    let { templatename } = this.state;\n    // images.forEach((i) => {\n    //   i.img = \"\";\n    // });\n    Axios.get(`/template/${tempid}`)\n      .then(({ data }) => {\n        if (!data.templates[0].data) {\n          data.templates[0].data = {};\n          this.state.data[\"ebay\"][\"check\"] = false;\n          this.state.data[\"poshmark\"][\"check\"] = false;\n          this.state.data[\"mercari\"][\"check\"] = false;\n          this.state.data[\"delist\"][\"check\"] = false;\n        } else {\n          Object.entries(this.state.data).forEach((item) => {\n            if (item[1] === \"\" || item[1] === undefined || item[1] === null) {\n              this.state.data[`${item[0]}`] =\n                data.templates[0].data[`${item[0]}`];\n            }\n          });\n\n          //this.setState({ data: data.templates[0].data });\n          templatename = data.templates[0].name;\n          this.setState({ templatename });\n\n          this.state.data[\"ebay\"][\"title\"] = data.templates[0].data.ebay.title;\n          this.state.data[\"poshmark\"][\"title\"] =\n            data.templates[0].data.poshmark.title;\n          this.state.data[\"mercari\"][\"title\"] =\n            data.templates[0].data.mercari.title;\n          this.state.data[\"delist\"][\"title\"] =\n            data.templates[0].data.delist.title;\n          // if (data.templates[0].data.images) {\n          //   images.forEach((image) => {\n          //     image.img = data.templates[0].data.images[image.key];\n          //   });\n          //   this.setState({ images });\n          // }\n\n          if (data.templates[0].data.extraMeasures) {\n            this.state.extraMeasures = JSON.parse(\n              data.templates[0].data.extraMeasures\n            );\n            this.state.count = this.state.extraMeasures.length + 1;\n          }\n\n          if (data.templates[0].data.others) {\n            this.state.otherfromdb = JSON.parse(data.templates[0].data.others);\n            //console.log(this.state.otherfromdb);\n            this.state.otherfromdb.forEach((db, i) => {\n              this.state.othersstate[i] = db.status;\n            });\n          }\n        }\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n  };\n\n  componentDidMount = () => {\n    Axios.get(\"/template\")\n      .then(({ data }) => this.setState({ templates: data.templates }))\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n    Axios.get(\n      `/product/${this.props.match.params.id}`,\n      (Axios.defaults.headers.common[\"x-access-token\"] = localStorage.getItem(\n        \"token\"\n      )),\n      {\n        headers: {\n          \"content-type\": \"application/x-www-form-urlencoded\",\n        },\n      }\n    ).then((res) => {\n      const { \n        images, \n        //data \n      } = this.state;\n      this.setState({ data: res.data.products[0] });\n\n      this.handelMessageNotSeen()\n\n      if (res.data.products[0].extraMeasures) {\n        this.state.extraMeasures = JSON.parse(\n          res.data.products[0].extraMeasures\n        );\n        this.state.count = this.state.extraMeasures.length + 1;\n      }\n\n      if (res.data.products[0].line) {\n        this.state.extraDescriptions = JSON.parse(res.data.products[0].line);\n        this.setState({\n          extraDescriptions: this.state.extraDescriptions,\n          count1: this.state.extraDescriptions.length + 1,\n        });\n      }\n\n      //this.state.templatename = this.state.data.title.substring(0,5)\n      var yourString = this.state.data.title;\n      var maxLength = 15;\n      var trimmedString = yourString.substr(0, maxLength);\n      this.state.templatename = trimmedString.substr(\n        0,\n        Math.min(trimmedString.length, trimmedString.lastIndexOf(\" \"))\n      );\n\n      if (res.data.products[0].ebay.url !== \"\") {\n        this.state.ebayurl = res.data.products[0].ebay.url;\n        console.log(this.state.ebayurl);\n      }\n      if (res.data.products[0].poshmark.url !== \"\") {\n        this.state.poshmarkurl = res.data.products[0].poshmark.url;\n        console.log(this.state.poshmarkurl);\n      }\n      if (res.data.products[0].mercari.url !== \"\") {\n        this.state.mercariurl = res.data.products[0].mercari.url;\n        console.log(this.state.mercariurl);\n      }\n\n      if (\n        res.data.products[0].category !== \"Men\" &&\n        res.data.products[0].category !== \"Women\" &&\n        res.data.products[0].category !== \"Unisex Kids\" &&\n        res.data.products[0].category !== \"Babies\" &&\n        res.data.products[0].category !== \"Speacialty\"\n      ) {\n        this.setState({ showcat: true });\n      }\n\n      // if(res.data.products[0])\n\n      if (res.data.products[0].others) {\n        this.state.otherfromdb = JSON.parse(res.data.products[0].others);\n        //console.log(this.state.otherfromdb);\n        this.state.otherfromdb.forEach((db, i) => {\n          this.state.othersstate[i] = db.status;\n          if (db.status === true && db.url !== undefined && db.url !== \"\") {\n            this.state.othersurl[i] = db;\n          }\n          if (db.status === true) {\n            this.state.othertolist[i] = db;\n          }\n        });\n        //console.log(this.state.othersurl);\n      }\n\n      if (res.data.products[0]._id) {\n        this.setState({ productid: res.data.products[0]._id });\n      }\n\n      if (res.data.products[0].message) {\n        // console.log( res.data.products[0].message ,'msg value reading')\n        this.setState({ message: res.data.products[0].message });\n      }\n\n      // console.log(this.state.messageNotSeen, 'edit mforefh dfkhkjh')\n\n      this.state.data[\"ebay\"][\"title\"] = res.data.products[0].ebay.title;\n      this.state.data[\"poshmark\"][\"title\"] =\n        res.data.products[0].poshmark.title;\n      this.state.data[\"mercari\"][\"title\"] = res.data.products[0].mercari.title;\n      this.state.data[\"delist\"][\"title\"] = res.data.products[0].delist.title;\n      if (res.data.products[0].images)\n        images.forEach((image) => {\n          image.img = res.data.products[0].images[image.key];\n        });\n      this.setState({ images });\n\n      //balance check\n\n      let activity = res.data.products[0].activity;\n      this.setState({ activity });\n\n/*      const message = async () => {\n        const response = await Axios.get(\n          `/message/${this.props.match.params.id}`,\n          (Axios.defaults.headers.common[\n            \"x-access-token\"\n          ] = localStorage.getItem(\"token\")),\n          {\n            headers: {\n              \"content-type\": \"application/json\",\n            },\n          }\n        );\n        //console.log(response);\n      };*/\n      //console.log(message(), \"response message check\");\n\n      if (localStorage.getItem(\"token\")) {\n        Axios.get(\"/payment/rates\")\n          .then((res) => {\n            //rates = res.data[res.data.length - 1];\n            this.setState({ rates: res.data[res.data.length - 1] });\n\n            Axios.get(\"/clientdetails\")\n              .then(({ data }) => {\n                this.setState({ bal: data.balance });\n                if (this.state.rates.basic / 100 > this.state.bal) {\n                  this.setState({ basiccheck: false });\n                }\n                if (this.state.rates.advance / 100 > this.state.bal) {\n                  this.setState({ advancecheck: false });\n                }\n\n                if (this.state.activity === \"basic\") {\n                  this.setState({ activity_check: this.state.basiccheck });\n                } else {\n                  //advance\n                  this.setState({ activity_check: this.state.advancecheck });\n                }\n                //console.log(this.state.bal);\n              })\n              .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n          })\n          .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n      }\n    });\n\n    Axios.get(\"/password/getstatus\").then(({ data }) => {\n      //console.log(data);\n      this.setState({ Ebay: data.Ebay });\n      this.setState({ Poshmark: data.Poshmark });\n      this.setState({ Mercari: data.Mercari });\n    });\n\n    Axios.get(\"/password/getstatus/others\").then(({ data }) => {\n      //console.log(data);\n      if (data.length > 0) {\n        this.setState({ othersbool: true });\n        data.forEach((d, i) => {\n          const others = [...this.state.others];\n          others.push(d);\n          this.setState({ others });\n\n          const otherss = [...this.state.othersstate];\n          otherss.push(false);\n          this.setState({ othersstate: otherss });\n          //console.log(this.state.othersstate);\n        });\n      }\n    });\n\n    localStorage.setItem(\"actionebay\", \"\");\n    localStorage.setItem(\"actionposhmark\", \"\");\n    localStorage.setItem(\"actionmercari\", \"\");\n    localStorage.setItem(\"actionfb\", \"\");\n\n    Axios.get(`/producttemplate/${this.props.match.params.id}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n    }).then((response) => {\n      if (response.data.templateId) {\n        this.setState({ templateIdd: response.data.templateId });\n        this.setTemplate(response.data.templateId);\n      }\n    });\n\n    Axios.get('ebay/itemSuggestionPopulater').then((res) => {this.setState({ebayCategoryDropDownItems : res.data.data})});\n    Axios.get('ebay/shippingPopulater').then((res) => {this.setState({shippingDropDownItems : res.data.data.ShippingCarrierDetails.map((item, key) => {return res.data.data.ShippingCarrierDetails[key].Description})})});\n\n\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const { data } = this.state;\n    //     if (name === \"title\") {\n    //       data[name] = e.target.value.replace(/[^\\w\\s]/gi, \"\");\n    //     } else {\n    //       data[name] = value;\n    //     }\n    data[name] = value;\n   // console.log(e.target.value);\n   // console.log(this.state.data.brand);\n    this.setState({ data });\n    this.setState({ editchange: true });\n  };\n\n  handleOtherTitles = (e) => {\n    const { name, value } = e.target;\n    const { data } = this.state;\n    data[name][\"title\"] = value;\n    this.setState({ data });\n  };\n\n  handleUrl = (e) => {\n    const { name, value } = e.target;\n    const { data } = this.state;\n    data[name][\"url\"] = value;\n    this.setState({ data });\n  };\n\n  handleMeasureLabel = (id, e) => {\n    const { value } = e.target;\n    const { extraMeasures } = this.state;\n    extraMeasures.forEach((measure) => {\n      if (measure.id === id) {\n        measure.label = value;\n      }\n    });\n    this.setState({ extraMeasures });\n    //console.log(extraMeasures);\n  };\n\n  handleDescriptionLabel = (id, e) => {\n    const { value } = e.target;\n    const { extraDescriptions } = this.state;\n    extraDescriptions.forEach((description) => {\n      if (description.id === id) {\n        description.key = value;\n      }\n    });\n    this.setState({ extraDescriptions });\n   // console.log(extraDescriptions);\n  };\n\n  handleMeasureChange = (id, e) => {\n    const { value } = e.target;\n    const { extraMeasures } = this.state;\n    extraMeasures.forEach((measure) => {\n      if (measure.id === id) {\n        measure.val = value;\n      }\n    });\n    this.setState({ extraMeasures });\n    //console.log(extraMeasures);\n  };\n\n  addMeasure = (e) => {\n  //  console.log(\"addMeaseure\");\n    const { extraMeasures, count } = this.state;\n    extraMeasures.push({ label: \"\", val: \"\", id: count });\n    this.setState({ extraMeasures });\n    this.setState({ count: count + 1 });\n  };\n\n  removeMeasure = (id, e) => {\n    const { extraMeasures, count } = this.state;\n\n    this.setState({\n      extraMeasures: extraMeasures.filter((measure) => {\n        return measure.id !== id;\n      }),\n    });\n    this.setState({ count: count - 1 });\n  };\n\n  onSubmit = (e,  value) => {\n    e.preventDefault();\n    const { data, images, extraMeasures, extraDescriptions } = this.state;\n    const dataform = new FormData();\n    \n    const manualProdList =\n      (this.state.data[\"ebay\"][\"url\"] !== undefined &&\n        this.state.data[\"ebay\"][\"url\"] !== \"\") ||\n      (this.state.data[\"mercari\"][\"url\"] !== undefined &&\n        this.state.data[\"mercari\"][\"url\"] !== \"\") ||\n      (this.state.data[\"poshmark\"][\"title\"] !== undefined &&\n        this.state.data[\"poshmark\"][\"url\"] !== \"\");\n    // const manualProdListBy = this.props;\n    const ebayUrl =\n      this.state.data[\"ebay\"][\"url\"] !== undefined\n        ? this.state.data[\"ebay\"][\"url\"]\n        : \"\";\n    const poshMarkUrl =\n      this.state.data[\"poshmark\"][\"url\"] !== undefined\n        ? this.state.data[\"poshmark\"][\"url\"]\n        : \"\";\n    const mercariUrl =\n      this.state.data[\"mercari\"][\"url\"] !== undefined\n        ? this.state.data[\"mercari\"][\"url\"]\n        : \"\";\n    images.forEach((image) => {\n      if(image.img)\n      {\n        dataform.append(image.key, image.img);\n      }\n    });\n\n    var y = [];\n    this.state.others.forEach((o, i) => {\n      let obj = {\n        name: o,\n        status: this.state.othersstate[i],\n        url: this.state.othersurl[i] ? this.state.othersurl[i] : \"\",\n      };\n      y.push(obj);\n    });\n\n    this.setState({ isSubmitting: true });\n\n    dataform.append(\"sku\", data.sku);\n    dataform.append(\"upc\", data.upc);\n    dataform.append(\"quantity\", data.quantity);\n    dataform.append(\"price\", data.price);\n    dataform.append(\"extraMeasures\", JSON.stringify(extraMeasures));\n    dataform.append(\"extraDescription\", JSON.stringify(extraDescriptions));\n    dataform.append(\"brand\", data.brand);\n    dataform.append(\"model\", data.model);\n    dataform.append(\"modelNo\", data.modelNo)\n    dataform.append(\"title\", data.title);\n    dataform.append(\"shortDescription\", data.shortDescription);\n    dataform.append(\"condition_name\", data.condition_name);\n    dataform.append(\"ebay\", data.ebay.title);\n    dataform.append(\"mercari\", data.mercari.title);\n    dataform.append(\"poshmark\", data.poshmark.title);\n    dataform.append(\"delist\", data.delist.title);\n    dataform.append(\"ebayc\", data.ebay.check);\n    dataform.append(\"mercaric\", data.mercari.check);\n    dataform.append(\"poshmarkc\", data.poshmark.check);\n    dataform.append(\"delistc\", data.delist.check);\n    dataform.append(\"colorShade\", data.colorShade);\n    dataform.append(\"material\", data.material);\n    dataform.append(\"size\", data.size);\n    dataform.append(\"style\", data.style);\n    dataform.append(\"pattern\", data.pattern);\n    dataform.append(\"category\", data[\"category\"]);\n    dataform.append(\"categorySecondary\", data.categorySecondary);\n    dataform.append(\"listingFormat\", data.listingFormat);\n    dataform.append(\"givingWorksCharityID\", data.givingWorksCharityID);\n    dataform.append(\"givingWorksDonationPercentage\", data.givingWorksDonationPercentage);\n    dataform.append(\"storeCategoryOne\", data.storeCategoryOne);\n    dataform.append(\"storeCategoryTwo\", data.storeCategoryTwo);\n    dataform.append(\"lotSize\", data.lotSize);\n    dataform.append(\"type\", data.type);\n    dataform.append(\"seasonOrWeather\", data.seasonOrWeather);\n    dataform.append(\"care\", data.care);\n    dataform.append(\"inseam\", data.inseam);\n    dataform.append(\"rise\", data.rise);\n    dataform.append(\"waist\", data.waist);\n    dataform.append(\"bottomDescription\", data.bottomDescription);\n    dataform.append(\"msrp\", data.msrp);\n    dataform.append(\"mrp\", data.mrp);\n    dataform.append(\"keywords\", data.keywords);\n    dataform.append(\"notes\", data.notes);\n    dataform.append(\"weightLB\", data.weightLB);\n    dataform.append(\"weightOZ\", data.weightOZ);\n    dataform.append(\"zipCode\", data.zipCode);\n    dataform.append(\"packageLength\", data.packageLength);\n    dataform.append(\"packageWidth\", data.packageWidth);\n    dataform.append(\"packageHeight\", data.packageHeight);\n    dataform.append(\"costOfGoods\", data.costOfGoods);\n    dataform.append(\"shippingFees\", data.shippingFees);\n    dataform.append(\"domesticShippingService\", data.domesticShippingService);\n    dataform.append(\"domesticShippingCost\", data.domesticShippingCost);\n    dataform.append(\"domesticShippingEachAdditional\", data.domesticShippingEachAdditional);\n    dataform.append(\"domesticShippingSurcharge\", data.domesticShippingSurcharge);\n    dataform.append(\"domesticShippingFreeShippingActive\", data.domesticShippingFreeShippingActive);\n    dataform.append(\"internationalShippingService\", data.internationalShippingService);\n    dataform.append(\"internationalShippingCost\", data.internationalShippingCost);\n    dataform.append(\"internationalShippingEachAdditional\", data.internationalShippingEachAdditional);\n    dataform.append(\"internationalShippingSurcharge\", data.internationalShippingSurcharge);\n    dataform.append(\"internationalShippingFreeShippingActive\", data.internationalShippingFreeShippingActive);\n    dataform.append(\"calculatedShippingActive\", data.calculatedShippingActive);\n    dataform.append(\"calculatedShipping\", data.calculatedShipping);\n    dataform.append(\"profit\", data.profit);\n    dataform.append(\"status\", true);\n    dataform.append(\"line\", JSON.stringify(extraDescriptions));\n    dataform.append(\"note\", data.note)\n    // dataform.append(\"line2\", { line2: data.line2, value2: data.value2 });\n    // dataform.append(\"line3\", { line3: data.line3, value3: data.value3 });\n    // dataform.append(\"line4\", { line4: data.line4, value4: data.value4 });\n    // dataform.append(\"line6\", { line6: data.line6, value6: data.value6 });\n    // dataform.append(\"line7\", { line7: data.line7, value7: data.value7 });\n    // dataform.append(\"line8\", { line8: data.line8, value8: data.value8 });\n    // dataform.append(\"line5\", { line5: data.line5, value5: data.value5 });\n    dataform.append(\"madeIn\", data.madeIn);\n    dataform.append(\"gender\", data.gender || \"\");\n    dataform.append(\"others\", JSON.stringify(y));\n    dataform.append(\"manualProdList\", manualProdList);\n    dataform.append(\"ebayUrl\", ebayUrl);\n    dataform.append(\"poshMarkUrl\", poshMarkUrl);\n    dataform.append(\"mercariUrl\", mercariUrl);\n    dataform.append(\"bestOfferActive\", data.bestOfferActive);\n    dataform.append(\"bestOfferAcceptFloorActive\", data.bestOfferAcceptFloorActive);\n    dataform.append(\"bestOfferDeclineCeilingActive\", data.bestOfferDeclineCeilingActive);\n    dataform.append(\"bestOfferAcceptFloorValue\", data.bestOfferAcceptFloorValue);\n    dataform.append(\"bestOfferDeclineCeilingValue\", data.bestOfferDeclineCeilingValue);\n    dataform.append(\"compPriceSetting\", data.compPriceSetting);\n    dataform.append(\"compPriceIncreaseValue\", data.compPriceIncreaseValue);\n    dataform.append(\"compPriceIncreaseMethod\", data.compPriceIncreaseMethod);\n    dataform.append(\"mercariHashtags\", data.mercariHashtags);\n    dataform.append(\"companyBlurb\", data.companyBlurb);\n    dataform.append(\"ebayCategoryField\", data.ebayCategoryField);\n    dataform.append(\"ebayOptionalFieldsActive\", data.ebayOptionalFieldsActive);\n    if(value === \"draft\")\n    {\n      dataform.append(\"prodStatus\", \"draft\");\n    }\n    \n    Axios.put(`/product/${this.props.match.params.id}`, dataform, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"x-access-token\": `${localStorage.getItem(\"token\")}`,\n      },\n    })\n      .then((response) => {\n        if(value === \"draft\")\n        {\n          alert('Product Is Saved As Draft.')\n        }\n        window.open(`/products/${data.prodStatus}`, \"_self\");\n      })\n      .catch((err) => {\n        this.setState({ isSubmitting: false });\n        console.log(err) || alert(JSON.stringify({ err: err }));\n      });\n  };\n\n  toggleSelectedWebsite = (str) => {\n    \n    const { data } = this.state;\n    \n    data[str][\"check\"] = !data[str][\"check\"];\n    this.setState({ data });\n  };\n\n  toggleSelectedOthersWebsite = (i) => {\n    const { othersstate } = this.state;\n    othersstate[i] = !othersstate[i];\n    this.setState({ othersstate });\n  };\n\n  handleImageChange = async (event) => {\n    const { images } = this.state;\n\n    const options = {\n      maxSizeMB: 0.3,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n    const idx = images.findIndex((image) => image.key === event.target.name);\n    try {\n      this.setState({ isSubmitting: true });\n      let compressedFile = await imageCompression(\n        event.target.files[0],\n        options\n      );\n      images[idx].img = compressedFile;\n      this.setState({\n        images,\n      });\n      this.setState({ isSubmitting: false });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleBulkUpload = async (e) => {\n    const { images } = this.state;\n    const files = e.target.files;\n    const count = files.length;\n\n    const options = {\n      maxSizeMB: 0.3,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n    this.setState({ isSubmitting: true });\n    for (let i = 0; i < count; i++) {\n      const idx = images.findIndex((image) => !image.img);\n      if (idx > -1) {\n        try {\n         // console.log(files[i]);\n          let compressedFile = await imageCompression(files[i], options);\n        //  console.log(compressedFile);\n          images[idx].img = compressedFile;\n          this.setState({ images }, () => console.log(this.state.images));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n    this.setState({ isSubmitting: false });\n  };\n\n  handleCheckboxToggle = (booleanValue, name) => {\n    const { data } = this.state;\n\n    data[name] = booleanValue;\n\n    this.setState({ data });\n    this.setState({ editchange: true });\n  }\n\n  removeImg = (idx) => {\n    const { images } = this.state;\n    images[idx].img = \"\";\n    this.setState({ images });\n  };\n\n  skuChange = (e) => {\n    this.setState({ sku: e.target.value });\n  };\n\n  listHandler = async (website) => {\n    if (this.state.editchange === true) {\n      return alert(\"Please save changes before listing\");\n    }\n\n    if (website === \"ebay\") {\n      //localStorage.setItem(\"actionebay\", \"listebay\");\n      //const eBayAuthToken = localStorage.getItem(\"ebayauthtoken\");\n    }\n    if (website === \"poshmark\") {\n      \n      localStorage.setItem(\"actionposhmark\", \"listposhmark\");\n      window.location.reload();\n      // window.open(\"https://poshmark.com/create-listing\");\n    }\n    if (website === \"mercari\") {\n      \n      localStorage.setItem(\"actionmercari\", \"listmercari\");\n      window.location.reload();\n      // window.open(\"https://www.mercari.com/sell/\");\n    }\n    if (website === \"facebook\") {\n     \n      localStorage.setItem(\"actionfb\", \"listfb\");\n      window.location.reload();\n      // window.open(\"https://www.facebook.com/marketplace/\");\n    }\n  };\n\n  editHandler = (website) => {\n    if (this.state.editchange === true) {\n      return alert(\"Please save changes before listing\");\n    }\n    if (website === \"ebay\") {\n      localStorage.setItem(\"actionebay\", \"editebay\");\n      localStorage.setItem(\"ebaydelisturl\", this.state.ebayurl);\n     \n      window.location.reload();\n      // window.open(\"https://www.ebay.com/sh/lst/active\");\n    }\n    if (website === \"poshmark\") {\n      localStorage.setItem(\"actionposhmark\", \"editposhmark\");\n      localStorage.setItem(\"poshmarkdelisturl\", this.state.poshmarkurl);\n      \n      window.location.reload();\n      // window.open(this.state.poshmarkurl);\n    }\n    if (website === \"mercari\") {\n      localStorage.setItem(\"actionmercari\", \"editmercari\");\n      localStorage.setItem(\"mercaridelisturl\", this.state.mercariurl);\n      \n      window.location.reload();\n      // window.open(this.state.mercariurl);\n\n    }\n  };\n\n  listHandlerAll = async() => {\n    var count = 0;\n    if (this.state.editchange === true) {\n      return alert(\"Please save changes before listing\");\n    }\n    if (this.state.Ebay && this.state.data[\"ebay\"][\"check\"]) {\n      localStorage.setItem(\"actionebay\", \"listebay\");\n      window.location.reload();\n      // window.open(\n      //   \"https://bulksell.ebay.com/ws/eBayISAPI.dll?SingleList&sellingMode=AddItem\"\n      // );\n      count = count+1;\n    }\n    if (this.state.Poshmark && this.state.data[\"poshmark\"][\"check\"]) {\n      localStorage.setItem(\"actionposhmark\", \"listposhmark\");\n      window.location.reload();\n      //window.open(\"https://poshmark.com/create-listing\");\n      count = count+1;\n    }\n    if (this.state.Mercari && this.state.data[\"mercari\"][\"check\"]) {\n      localStorage.setItem(\"actionmercari\", \"listmercari\");\n      window.location.reload();\n      //window.open(\"https://www.mercari.com/sell/\");\n      count = count+1;\n    }\n  };\n\n  editHandlerAll = () => {\n    if (this.state.editchange === true) {\n      return alert(\"Please save changes before listing\");\n    }\n    if (this.state.editchange === true) {\n      return alert(\"Please save changes before listing\");\n    }\n    if (\n      this.state.Ebay &&\n      this.state.data[\"ebay\"][\"check\"] &&\n      this.state.ebayurl\n    ) {\n      localStorage.setItem(\"actionebay\", \"editebay\");\n      localStorage.setItem(\"ebaydelisturl\", this.state.ebayurl);\n      window.location.reload();\n      //window.open(\"https://www.ebay.com/sh/lst/active\");\n    }\n    if (\n      this.state.Poshmark &&\n      this.state.data[\"poshmark\"][\"check\"] &&\n      this.state.poshmarkurl\n    ) {\n      localStorage.setItem(\"actionposhmark\", \"editposhmark\");\n      localStorage.setItem(\"poshmarkdelisturl\", this.state.poshmarkurl);\n      window.location.reload();\n      //window.open(this.state.poshmarkurl);\n    }\n    if (\n      this.state.Mercari &&\n      this.state.data[\"mercari\"][\"check\"] &&\n      this.state.mercariurl\n    ) {\n      localStorage.setItem(\"actionmercari\", \"editmercari\");\n      localStorage.setItem(\"mercaridelisturl\", this.state.mercariurl);\n      window.location.reload();\n      //window.open(this.state.mercariurl);\n    }\n  };\n\n  delistHandler = async (website) => {\n    if (this.state.editchange === true) {\n      return alert(\"Please save changes before listing\");\n    }\n    const tempData = {listing:0,crosslisting:0,delisting:1}\n    await Axios.post(\"/nooflistings/\",tempData,{headers: {\"x-access-token\": localStorage.getItem(\"token\"),},})\n    \n    if (website === \"ebay\") {\n      localStorage.setItem(\"actionebay\", \"delistebay\");\n      localStorage.setItem(\"ebaydelisturl\", this.state.ebayurl);\n      window.location.reload();\n      // window.open(\"https://www.ebay.com/sh/lst/active\");\n    }\n    if (website === \"poshmark\") {\n      localStorage.setItem(\"actionposhmark\", \"delistposhmark\");\n      localStorage.setItem(\"poshmarkdelisturl\", this.state.poshmarkurl);\n      window.location.reload();\n      // window.open(this.state.poshmarkurl);\n    }\n    if (website === \"mercari\") {\n      localStorage.setItem(\"actionmercari\", \"delistmercari\");\n      localStorage.setItem(\"mercaridelisturl\", this.state.mercariurl);\n      window.location.reload();\n      // window.open(this.state.mercariurl);\n    }\n    if (website === \"facebook\") {\n      localStorage.setItem(\"actionfb\", \"delistfb\");\n      window.location.reload();\n      this.state.othersurl.forEach((db, i) => {\n        if (db.name === \"facebook\") {\n          window.open(db.url);\n        }\n      });\n    }\n  };\n\n  delistHandlerAll = async () => {\n    if (this.state.editchange === true) {\n      return alert(\"Please save changes before listing\");\n    }\n    var count = 0;\n    if (\n      this.state.Ebay &&\n      this.state.data[\"ebay\"][\"check\"] &&\n      this.state.ebayurl\n    ) {\n      localStorage.setItem(\"actionebay\", \"delistebay\");\n      localStorage.setItem(\"ebaydelisturl\", this.state.ebayurl);\n      count=count+1;\n      window.location.reload();\n      //window.open(\"https://www.ebay.com/sh/lst/active\");\n    }\n    if (\n      this.state.Poshmark &&\n      this.state.data[\"poshmark\"][\"check\"] &&\n      this.state.poshmarkurl\n    ) {\n      localStorage.setItem(\"actionposhmark\", \"delistposhmark\");\n      localStorage.setItem(\"poshmarkdelisturl\", this.state.poshmarkurl);\n      count=count+1\n      window.location.reload();\n      //window.open(this.state.poshmarkurl);\n    }\n    if (\n      this.state.Mercari &&\n      this.state.data[\"mercari\"][\"check\"] &&\n      this.state.mercariurl\n    ) {\n      localStorage.setItem(\"actionmercari\", \"delistmercari\");\n      localStorage.setItem(\"mercaridelisturl\", this.state.mercariurl);\n      count=count+1;\n      window.location.reload();\n      //window.open(this.state.mercariurl);\n    }\n  };\n\n  listallow = () => {\n    var allow = 0,\n      cnt = 0;\n    if (this.state.Ebay && this.state.data.ebay.check) {\n      cnt++;\n      if (this.state.ebayurl === null || this.state.ebayurl === \"\") {\n        allow++;\n      }\n    }\n    if (this.state.Poshmark && this.state.data.poshmark.check) {\n      cnt++;\n      if (this.state.poshmarkurl === null || this.state.poshmarkurl === \"\") {\n        allow++;\n      }\n    }\n    if (this.state.Mercari && this.state.data.mercari.check) {\n      cnt++;\n      if (this.state.mercariurl === null || this.state.mercariurl === \"\") {\n        allow++;\n      }\n    }\n\n    if (allow === cnt && cnt !== 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  delistallow = () => {\n    var deallow = 0,\n      cnt = 0;\n    if (this.state.Ebay && this.state.data.ebay.check) {\n      cnt++;\n      if (\n        this.state.ebayurl !== null &&\n        this.state.ebayurl !== \"d\" &&\n        this.state.ebayurl !== \"\" //ebayurl[0]==\"h\"\n      ) {\n        deallow++;\n      }\n    }\n    if (this.state.Poshmark && this.state.data.poshmark.check) {\n      cnt++;\n      if (\n        this.state.poshmarkurl !== null &&\n        this.state.poshmarkurl !== \"d\" &&\n        this.state.poshmarkurl !== \"\"\n      ) {\n        deallow++;\n      }\n    }\n    if (this.state.Mercari && this.state.data.mercari.check) {\n      cnt++;\n      if (\n        this.state.mercariurl !== null &&\n        this.state.mercariurl !== \"d\" &&\n        this.state.mercariurl !== \"\"\n      ) {\n        deallow++;\n      }\n    }\n\n    if (deallow === cnt && cnt !== 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  nonelisted = () => {\n    var bol = 0\n      //,cnt = 0;\n    if (this.state.Ebay && this.state.data.ebay.check) {\n      //cnt++;\n      if (\n        this.state.ebayurl !== null &&\n        this.state.ebayurl !== \"d\" &&\n        this.state.ebayurl !== \"\" ////ebayurl[0]==\"h\"\n      ) {\n        bol++;\n      }\n    }\n    if (this.state.Poshmark && this.state.data.poshmark.check) {\n      //cnt++;\n      if (\n        this.state.poshmarkurl !== null &&\n        this.state.poshmarkurl !== \"d\" &&\n        this.state.poshmarkurl !== \"\"\n      ) {\n        bol++;\n      }\n    }\n    if (this.state.Mercari && this.state.data.mercari.check) {\n      if (\n        this.state.mercariurl !== null &&\n        this.state.mercariurl !== \"d\" &&\n        this.state.mercariurl !== \"\"\n      ) {\n        bol++;\n      }\n    }\n\n    if (bol === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  setCategory = (str) => {\n    const { data } = this.state;\n    data[\"category\"] = str;\n    this.setState({ data });\n  };\n\n  blobToBase64 = (blob) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    return new Promise((resolve) => {\n      reader.onloadend = () => {\n        resolve(reader.result);\n      };\n    });\n  };\n\n  handleDelete = async () => {\n    const id = this.props.match.params.templateid\n    \n    Axios.delete(`/template/${id}`) \n   .then((response) => {\n     window.open(\"/templates\", \"_self\");\n   })\n   .catch((err) => {\n     console.log(err) || alert(JSON.stringify({ err: err }));\n   });\n\n  }\n\n   handleChangesTemplate = (e) => {\n     this.setState({templateIdd : e.target.value})\n    this.set_c_Template(e.target.value)\n   }\n\n  clearExtraDescriptions = () => {\n    this.setState({ extraDescriptions: [] });\n    this.setState({ deletedDescriptions: [] });\n  };\n\n  handleSelectedLeaf = (itemAspectsArray) => {\n    var { extraDescriptions, count1 } = this.state;\n    extraDescriptions = [];\n    Object.keys(itemAspectsArray.data.aspects).forEach((item, index) => {\n      extraDescriptions.push({\n        id: index,\n        key: itemAspectsArray.data.aspects[index].localizedAspectName,\n        aspectUsage: itemAspectsArray.data.aspects[index].aspectConstraint.aspectUsage,\n        suggestedValues: itemAspectsArray.data.aspects[index].aspectValues,\n        aspectRequired: itemAspectsArray.data.aspects[index].aspectConstraint.aspectRequired,\n        value: \"\"\n      });\n      count1 = count1 + 1;\n    });\n\n    this.setState({ extraDescriptions: extraDescriptions, count1: count1 });\n  };\n\n  handleSelectedEbayCategory = (category) => {\n    const url = \"/ebay/itemAspects/\" + category.categoryId;\n    var { data } = this.state;\n    Axios.get(url)\n      .then((response) => response.data)\n      .then((data) => {\n        this.handleSelectedLeaf(data);\n      })\n      .catch((err) => console.log(err));\n\n      data['ebayCategoryField'] = category.categoryName;\n      this.setState({ data });\n  };\n\n  handleDescriptionLabel = (id, e) => {\n    const { value } = e.target;\n    const { extraDescriptions } = this.state;\n    extraDescriptions.forEach((description) => {\n      if (description.id === id) {\n        description.key = value;\n      }\n    });\n    this.setState({ extraDescriptions });\n  };\n\n  handleDescriptionChange = (id, value) => {\n    const { extraDescriptions } = this.state;\n    extraDescriptions.forEach((description) => {\n      if (description.id === id) {\n        description.value = value;\n      }\n    });\n    this.setState({ extraDescriptions });\n  };\n\n  addDescription = () => {\n    const { extraDescriptions, count1 } = this.state;\n    extraDescriptions.push({ key: \"\", value: \"\", id: count1 });\n    this.setState({ extraDescriptions });\n    this.setState({ count1: count1 + 1 });\n  };\n\n  arrayFilterStorage = (item, filterValue) => \n  {\n    var {deletedDescriptions} = this.state;\n\n    if(item.id !== filterValue)\n    {\n      return true;\n    }\n    else if(item.id === filterValue)\n    {\n      deletedDescriptions.push(item);\n      this.setState({deletedDescriptions});\n      return false;\n    }\n  }\n\n  removeDescription = (id, e) => {\n    const { extraDescriptions } = this.state;\n\n    this.setState({extraDescriptions: extraDescriptions.filter((description) => {return this.arrayFilterStorage(description, id)})});\n  };\n\n  toggleOptional = () => {\n    var { data } = this.state;\n    data['ebayOptionalFieldsActive'] = !data.ebayOptionalFieldsActive;\n    this.setState({ data });\n  };\n\n  setEbayCategoryField = (categoryName) => {\n    var { data } = this.state\n    data['ebayCategoryField'] = categoryName;\n    this.setState({ data });\n  };\n\n  repopulateExtraDescriptions = () => {\n    var { extraDescriptions, deletedDescriptions } = this.state;\n\n    var concatenatedArray = extraDescriptions.concat(deletedDescriptions);\n\n    this.setState({deletedDescriptions: []});\n    this.setState({extraDescriptions:concatenatedArray});\n  }\n\n  priceCalculation = () => {\n    var { data } = this.state;\n    if(data['compPriceIncreaseMethod'] === 'dollar')\n    {\n      data['price'] = parseFloat(data['price']) + parseFloat(data['compPriceIncreaseValue']);\n      data[\"profit\"] = data['price'] - data[\"costOfGoods\"];\n    }\n    if(data['compPriceIncreaseMethod'] === 'percent')\n    {\n      data['price'] = parseFloat(data['price']) + (parseFloat(data['price']) * (parseFloat(data['compPriceIncreaseValue'])/100));\n      data[\"profit\"] = data['price'] - data[\"costOfGoods\"];\n    }\n\n    this.setState({data});\n  };\n\n  render = () => {\n    const {\n      data,\n      images,\n      isSubmitting,\n      extraMeasures,\n      //templates,\n      //ctemplates,\n      Ebay,\n      Poshmark,\n      Mercari,\n      //templatename,\n      //othersbool,\n      //others,\n      //othersstate,\n      //otherfromdb,\n      //othertolist,\n      //othersurl,\n      //ebayurl,\n      //poshmarkurl,\n      //mercariurl,\n      //activity_check,\n      showcat,\n      brandacc,\n      coloracc,\n      labelacc,\n      //messageNotSeen,\n      ebayCategoryDropDownItems,\n      shippingDropDownItems\n    } = this.state;\n    //const {templateid} = this.props.match.params\n    return (\n      <div className='app'>\n        <div className='app__body'>\n          <LeftSection\n            data={data}\n            images={images}\n            Ebay={Ebay}\n            Poshmark={Poshmark}\n            Mercari={Mercari}\n            isSubmitting={isSubmitting}\n            handleChange={this.handleChange}\n            removeImg={this.removeImg}\n            handleBulkUpload={this.handleBulkUpload}\n            handleImageChange={this.handleImageChange}\n            handleOtherTitles={this.handleOtherTitles}\n            toggleSelectedOthersWebsite={this.toggleSelectedOthersWebsite}\n            toggleSelectedWebsite={this.toggleSelectedWebsite}\n            productid = {this.state.productid}\n            clientid = {this.state.clientid}\n            extraDescriptions={this.state.extraDescriptions}\n              />\n          <RightSection\n            data={data}\n            handleChange={this.handleChange}\n            brandacc={brandacc}\n            coloracc={coloracc}\n            labelacc={labelacc}\n            addMeasure={this.addMeasure}\n            removeMeasure={this.removeMeasure}\n            extraMeasures={extraMeasures}\n            handleMeasureChange={this.handleMeasureChange}\n            handleMeasureLabel={this.handleMeasureLabel}\n            clearExtraDescriptions={this.clearExtraDescriptions}\n            addDescription={this.addDescription}\n            extraDescriptions={this.state.extraDescriptions}\n            handleDescriptionChange={this.handleDescriptionChange}\n            handleDescriptionLabel={this.handleDescriptionLabel}\n            removeDescription={this.removeDescription}\n            repopulateExtraDescriptions={this.repopulateExtraDescriptions}\n            handleSelectedLeaf={this.handleSelectedLeaf}\n            handleSelectedEbayCategory={this.handleSelectedEbayCategory}\n            handleOtherTitles={this.handleOtherTitles}\n            toggleOptional={this.toggleOptional}\n            handleUrl={this.handleUrl}\n            productid = {this.state.productid}\n            clientid = {this.state.clientid}\n            productMessage = {this.state.productMessage}\n            showcat={showcat}\n            setCategory={this.setCategory}\n            ebayCategoryDropDownItems={ebayCategoryDropDownItems}\n            shippingDropDownItems={shippingDropDownItems}\n            handleCheckboxToggle={this.handleCheckboxToggle}\n            onSubmit={this.onSubmit}\n            isSubmitting={this.isSubmitting}\n            setEbayCategoryField={this.setEbayCategoryField}\n            priceCalculation={this.priceCalculation}\n              />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditForm;\n","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Components\\header\\header.jsx",["272","273","274","275","276","277","278"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport message from \"../../Pages/Messages/message\";\n//import {Helmet} from \"react-helmet\";\nimport \"./headermin.css\";\nimport Logo from \"../images/hammock.svg\";\nimport PaymentAlert from \"../paymentAlert/PaymentAlert\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Axios, { assetsURL } from \"../../services/Axios\";\nAxios.defaults.headers[\"x-access-token\"] = localStorage.getItem(\"token\");\n\nclass header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      rates: {},\n      bal: 0,\n      basiccheck: true,\n      advancecheck: true,\n      open: false,\n      client_id: \"\",\n      customerName: \"\",\n      clientMessageSeenCount: 0,\n    };\n  }\n\n  componentDidMount = async () => {\n    if (localStorage.getItem(\"token\")) {\n      await Axios.get(\"/payment/rates\")\n        .then((res) => {\n          //rates = res.data[res.data.length - 1];\n          this.setState({ rates: res.data[res.data.length - 1] });\n        })\n        .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n\n      await Axios.get(\"/clientdetails\")\n        .then(({ data }) => {\n          if (parseInt(data.balance) < 5) this.setState({ open: true });\n          this.setState({\n            bal: data.balance,\n            client_id: data._id,\n            customerName: data.firstName,\n            clientMessageSeenCount: data.clientMessageSeenCount,\n          });\n          localStorage.setItem(\"customerName\", this.state.customerName);\n        })\n        .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n\n      // if (this.state.rates.basic / 100 > this.state.bal) {\n      //   this.setState({ basiccheck: false });\n      // }\n      // if (this.state.rates.advance / 100 > this.state.bal) {\n      //   this.setState({ advancecheck: false });\n      // }\n    }\n  };\n\n  logoutHandler = () => {\n    localStorage.removeItem(\"token\");\n    window.open(\"/login\", \"_self\");\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  updatePayment = async (amount) => {\n    let body = {\n      customer_id: this.state.client_id,\n      amount: amount,\n    };\n    this.setState({ open: false });\n    await Axios.post(\"/payment/payment\", body)\n      .then(({ data }) => {\n        if (data.success) alert(data.msg);\n        else alert(\"Error\");\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n  };\n\n  render() {\n    const { basiccheck, advancecheck, rates, bal } = this.state;\n    return (\n      <nav\n        className=\"navbar navbar-expand-lg navbar-dark\"\n        style={{ backgroundColor: \"#4db0cc\" }}\n      >\n        {/* <PaymentAlert\n          open={this.state.open}\n          handleClose={this.handleClose}\n          updatePayment={this.updatePayment}\n       />*/}\n\n        <a href=\"/\" className=\"navbar-brand\">\n          <img src={Logo} alt=\"hammock\" height=\"40px\" />\n        </a>\n        <h5 className=\"ml-4 mt-2\">\n          <i className=\"text-white\">Balance: $ {bal ? bal.toFixed(2) : 0}</i>\n        </h5>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav ml-auto\">\n            {/* <li class=\"nav-item dropdown\">\n              <li class=\"nav-item\">\n                <a\n                  href=\"/basic\"\n                  className=\"nav-link\"\n                  style={{ color: \"white\" }}\n                >\n                  Listing\n                </a>\n              </li>\n            </li> */}\n\n            <li class=\"nav-item\">\n              <Link to=\"/basic\" className=\"nav-link\" style={{ color: \"white\" }}>\n                Basic Listing\n              </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link\n                to=\"/messages\"\n                className=\"nav-link\"\n                style={{ color: \"white\" }}\n              >\n                Messages({this.state.clientMessageSeenCount})\n              </Link>\n            </li>\n\n            <li class=\"nav-item\">\n              <a\n                href=\"/templates\"\n                className=\"nav-link\"\n                style={{ color: \"white\" }}\n              >\n                Templates\n              </a>\n            </li>\n            <a href=\"/setting\" className=\"nav-link\" style={{ color: \"white\" }}>\n              Setting\n            </a>\n            <li class=\"nav-item\">\n              <span\n                onClick={this.logoutHandler}\n                className=\"nav-link c-pointer text-danger\"\n              >\n                <div className=\"fas fa-sign-out-alt mr-1\"></div>\n                Logout\n              </span>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default header;","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\index.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\utils\\parser.js",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\services\\Axios.jsx",["279"],"import Axios from \"axios\";\n\nvar baseURL = \"\";\nvar assetsURL = \"\";\n\nif(process.env.REACT_APP_STAGE === 'devlocal')\n{\n\tbaseURL = \"http://localhost:8000/api\";\n\tassetsURL = \"http://localhost:8000/assets/\";\n}\n\nelse if(process.env.REACT_APP_STAGE === 'devhost')\n{\n\tbaseURL = \"https://devcust.avoidpoints.com/api\";\n\tassetsURL = \"https://devcust.avoidpoints.com/assets/\";\n}\n\nelse if(process.env.REACT_APP_STAGE === 'staging')\n{\n\tbaseURL = \"https://stageapp.avoidpoints.com/api\";\n\tassetsURL = \"https://stageapp.avoidpoints.com/assets/\";\n}\n\nelse if(process.env.REACT_APP_STAGE === 'production')\n{\n\tbaseURL = \"https://app.hammoq.com/api\";\n\tassetsURL = \"https://app.hammoq.com/assets/\";\n}\n\nAxios.defaults.baseURL = \"http://localhost:8000/api\" + \"/client\";\n\nexport default Axios;\nexport { baseURL, assetsURL };\n","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Basic\\ButtonGroup.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\utils\\loader.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Components\\paymentAlert\\PaymentAlert.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\EditForm\\components\\RightSection\\RightSection.jsx",["280","281","282","283","284","285","286"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n//import { HOST } from \"../../../../services/Axios\";\nimport Axios from \"../../../../services/Axios\";\nimport \"./RightSection.css\";\nimport Poshmarkimg from \"./images/poshmark.png\";\nimport Ebayimg from \"./images/ebay.png\";\nimport Mercariimg from \"./images/mercari.png\";\nimport EbayCategoryModal from \"../ebayModal\";\n//import Popover from '@material-ui/core/Popover';\nimport TextField from \"@material-ui/core/TextField\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { useTheme /*makeStyles*/ } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { VariableSizeList } from \"react-window\";\nconst max = 5000;\n\nconst LISTBOX_PADDING = 8; // px\n\nfunction renderRow(props) {\n  const { data, index, style } = props;\n  return React.cloneElement(data[index], {\n    style: {\n      ...style,\n      top: style.top + LISTBOX_PADDING,\n    },\n  });\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n  const outerProps = React.useContext(OuterElementContext);\n  return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (ref.current != null) {\n      ref.current.resetAfterIndex(0, true);\n    }\n  }, [data]);\n  return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\n  props,\n  ref\n) {\n  const { children, ...other } = props;\n  const itemData = React.Children.toArray(children);\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up(\"sm\"), { noSsr: true });\n  const itemCount = itemData.length;\n  const itemSize = smUp ? 36 : 48;\n\n  const getChildSize = (child) => {\n    if (React.isValidElement(child) && child.type === ListSubheader) {\n      return 48;\n    }\n\n    return itemSize;\n  };\n\n  const getHeight = () => {\n    if (itemCount > 8) {\n      return 8 * itemSize;\n    }\n    return itemData.forEach(getChildSize).reduce((a, b) => a + b, 0);\n  };\n\n  const gridRef = useResetCache(itemCount);\n\n  return (\n    <div ref={ref}>\n      <OuterElementContext.Provider value={other}>\n        <VariableSizeList\n          itemData={itemData}\n          height={getHeight() + 2 * LISTBOX_PADDING}\n          width='100%'\n          ref={gridRef}\n          outerElementType={OuterElementType}\n          innerElementType='ul'\n          itemSize={(index) => getChildSize(itemData[index])}\n          overscanCount={5}\n          itemCount={itemCount}\n        >\n          {renderRow}\n        </VariableSizeList>\n      </OuterElementContext.Provider>\n    </div>\n  );\n});\n\nListboxComponent.propTypes = {\n  children: PropTypes.node,\n};\n\n//const useStyles = makeStyles({\n//  listbox: {\n//    boxSizing: 'border-box',\n//    '& ul': {\n//      padding: 0,\n//      margin: 0,\n//    },\n//  },\n//});\n\nconst renderGroup = (params) => [\n  <ListSubheader key={params.key} component='div'>\n    {params.group}\n  </ListSubheader>,\n  params.children,\n];\n\nclass RightSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestTitles: false,\n      showOtherTitles: false,\n      selectedWebsites: [],\n      ebayCategory: \"\",\n      category: \"\",\n      showMoreLines: false,\n      value: \"\",\n      count: 0,\n      custom: true,\n      title: \"\",\n      desc: \"\",\n      msgFormToggle: false,\n      msgFormTitle: \"\",\n      msgFormDescription: \"\",\n      curTime: new Date(),\n      anchorEl: null,\n      productMessage: [],\n      field: \"\",\n      currentSuggestion: [],\n      gtin: \"\",\n    };\n    this.ebayRef = React.createRef();\n  }\n\n  componentWillMount() {\n    if (\"custom\" in localStorage) {\n      let custom = localStorage.getItem(\"custom\");\n      this.setState({ custom: custom === \"true\" });\n    }\n  }\n\n/*  handleMessage = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleMessageSubmit = async () => {\n    const productId = this.props.productid;\n    const clientId = this.props.clientid;\n    const formData = {\n      msgformTitle: this.state.msgFormTitle,\n      senderName: `agent: ${localStorage.getItem(\"agentName\")}`,\n      msgFormDescription: this.state.msgFormDescription,\n      field: this.state.field,\n    };\n    try {\n      const response = await Axios.post(\n        `/message/${clientId}/${productId}`,\n        formData,\n        {\n          headers: {\n            \"content-type\": \"application/json\",\n            headers: localStorage.getItem(\"agent\"),\n          },\n        }\n      );\n      console.log(response);\n      this.setState({ anchorEl: null });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n    handleMessageData = async (value, event) => {\n    //console.log(value,\"value\")\n    const productId = this.props.productid;\n    const clientId = this.props.clientid;\n    const msgFormToggle = this.state.msgFormToggle;\n    const anchorEl = event.currentTarget;\n    //console.log(anchorEl)\n    try {\n      const response = await Axios.get(\n        `/message/${clientId}/${productId}/${value}`,\n        {\n          headers: {\n            \"content-type\": \"application/json\",\n            headers: localStorage.getItem(\"agent\"),\n          },\n        }\n      );\n      this.setState({\n        productMessage: response.data.message,\n        msgFormToggle: !msgFormToggle,\n        msgFormTitle: `was : ${this.props.data[value]}`,\n        field: value,\n        anchorEl,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };*/\n\n  setCategory = (str) => {\n    const { data } = this.props;\n    if (this.state.category === str) {\n      data[\"category\"] = \"\";\n      this.setState({ category: \"\" });\n    } else {\n      data[\"category\"] = str;\n      this.setState({ category: str });\n    }\n  };\n\n  handleClick = (event) => {\n    this.setState({ anchorE1: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  customtitle = (e) => {\n    const { custom } = this.state;\n    const { data } = this.props;\n    localStorage.setItem(\"custom\", !custom);\n    this.setState({ custom: !custom });\n    if (data.title) {\n      let title = data.title;\n      this.setState({ title });\n      data.title = title.trim();\n    }\n  };\n\n  handleChangeLocal = (e) => {\n    let change = {};\n    change[e.target.id] = e.target.value;\n    this.setState(change);\n  };\n\n  ebayGTINCall = () => {\n  const { gtin } = this.state;\n  const url = \"/ebay/lookUpForUPCISBN/\" + gtin;\n  Axios.get(url)\n    .then((response) => response.data)\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((err) => console.log(err));\n  };\n\n  render = () => {\n    const {\n      custom,\n      showOtherTitles,\n      gtin,\n    } = this.state;\n\n    const {\n      data,\n      handleChange,\n      addMeasure,\n      addDescription,\n      extraMeasures,\n      handleDescriptionChange,\n      handleDescriptionLabel,\n      removeDescription,\n      handleSelectedLeaf,\n      handleSelectedEbayCategory,\n      handleOtherTitles,\n      handleUrl,\n      handleCheckboxToggle,\n      showcat,\n      ebayCategoryDropDownItems,\n      onSubmit,\n      extraDescriptions,\n      toggleOptional,\n      clearExtraDescriptions,\n      setEbayCategoryField,\n      repopulateExtraDescriptions,\n      priceCalculation,\n      shippingDropDownItems\n    } = this.props;\n\n    if (custom === false) {\n      data.title = [\n        data.brand,\n        data.colorShade,\n        data.material,\n        data.size,\n        data.style,\n        data.pattern,\n        data.seasonOrWeather,\n        data.care,\n        data.madeIn,\n      ].reduce((title, val) =>\n        val === undefined || val === \"\" ? title : title + \" \" + val\n      );\n      data.ebay.title = [\n        data.brand,\n        data.colorShade,\n        data.material,\n        data.size,\n        data.style,\n        data.pattern,\n        data.seasonOrWeather,\n        data.care,\n        data.madeIn,\n      ].reduce((title, val) =>\n        val === undefined || val === \"\" ? title : title + \" \" + val\n      );\n      data.poshmark.title = [\n        data.brand,\n        data.colorShade,\n        data.material,\n        data.size,\n        data.seasonOrWeather,\n        data.care,\n        data.madeIn,\n      ].reduce((title, val) =>\n        val === undefined || val === \"\" ? title : title + \" \" + val\n      );\n      data.mercari.title = [\n        data.brand,\n        data.colorShade,\n        data.material,\n        data.size,\n        data.seasonOrWeather,\n        data.care,\n        data.madeIn,\n      ].reduce((title, val) =>\n        val === undefined || val === \"\" ? title : title + \" \" + val\n      );\n    }\n\n    return (\n      <div className='right__app'>\n        <EbayCategoryModal\n          ref={this.ebayRef}\n          onSelectedLeafModalClose={handleSelectedLeaf}\n          setSelectedCategoryField={setEbayCategoryField}\n        />\n        <div>\n          {/* Product Titles */}\n          <div className='d-flex align-items-center mb-1'>\n            <div className='h6 fw-500 text-uppercase mt-3'>Product Title </div>\n            <i className='fas fa-question-circle c-pointer text-secondary ml-2 mt-2'></i>\n            <button\n              className={\n                custom\n                  ? \"btn btn-success ml-2 mt-2 btn-sm\"\n                  : \"btn btn-warning ml-2 mt-2 btn-sm\"\n              }\n              onClick={this.customtitle}\n            >\n              Custom Title\n            </button>\n          </div>\n          <div className='form-group row'>\n            <div className='col-sm-8'>\n              <input\n                className='form-control form-control-sm'\n                type='text'\n                name='title'\n                id='tite'\n                value={data.title}\n                onChange={handleChange}\n                maxLength='140'\n              />\n              <small\n                className='form-text text-muted'\n                style={{ fontSize: \"0.5em\" }}\n              >\n                {data.title\n                  ? custom\n                    ? data.title.length\n                    : data.title.length - 8\n                  : null}\n                /140 max characters\n              </small>\n            </div>\n            <label\n              className='col-sm-4 text-left col-form-label col-form-label-sm'\n              onClick={() => {\n                this.setState({ showOtherTitles: !showOtherTitles });\n                let title=data.title;\n                data.title=title.trim();\n                data.ebay.title=data.title;\n                data.poshmark.title=data.title;\n                data.mercari.title=data.title;\n              }}\n            >\n              <Link to='#'>{showOtherTitles ? \"Hide\" : \"Show\"} All Titles</Link>\n            </label>\n          </div>\n          {showOtherTitles && (\n            <div>\n              <div className='form-group row'>\n                <div className='col-sm-8'>\n                  <input\n                    className='form-control form-control-sm'\n                    type='text'\n                    name='ebay'\n                    id='EbayTitleButton'\n                    value={data[\"ebay\"][\"title\"]}\n                    onChange={handleOtherTitles}\n                    maxLength='140'\n                  />\n                  <small\n                    className='form-text text-muted'\n                    style={{ fontSize: \"0.5em\" }}\n                  >\n                    {data.ebay.title ? data.ebay.title.length : null}/140 max\n                    characters\n                  </small>\n                </div>\n                <label\n                  htmlFor='colFormLabelSm'\n                  className='col-sm-4 text-left col-form-label col-form-label-sm'\n                >\n                  EBAY\n                </label>\n              </div>\n              <div className='form-group row'>\n                <div className='col-sm-8'>\n                  <input\n                    className='form-control form-control-sm'\n                    type='text'\n                    name='poshmark'\n                    id='PoshmarkTitleButton'\n                    value={data[\"poshmark\"][\"title\"]}\n                    onChange={handleOtherTitles}\n                    maxLength='140'\n                  />\n                  <small\n                    className='form-text text-muted'\n                    style={{ fontSize: \"0.5em\" }}\n                  >\n                    {data.poshmark.title ? data.poshmark.title.length : null}140\n                    max characters\n                  </small>\n                </div>\n                <label\n                  htmlFor='colFormLabelSm'\n                  className='col-sm-4 text-left col-form-label col-form-label-sm'\n                >\n                  POSHMARK\n                </label>\n              </div>\n              <div className='form-group row'>\n                <div className='col-sm-8'>\n                  <input\n                    className='form-control form-control-sm'\n                    type='text'\n                    name='mercari'\n                    id='MercariTitleButton'\n                    value={data[\"mercari\"][\"title\"]}\n                    onChange={handleOtherTitles}\n                    maxLength='140'\n                  />\n                  <small\n                    className='form-text text-muted'\n                    style={{ fontSize: \"0.5em\" }}\n                  >\n                    {data.mercari.title ? data.mercari.title.length : null}/140\n                    max characters\n                  </small>\n                </div>\n                <label\n                  htmlFor='colFormLabelSm'\n                  className='col-sm-4 text-left col-form-label col-form-label-sm'\n                >\n                  MERCARI\n                </label>\n              </div>\n            </div>\n          )}\n          <div className='search__toggle'>\n            <div className='right__search'>\n              <input\n                placeholder='   Search for UPC, ISBN, or EAN'\n                id='gtin'\n                type='text'\n                className='right__search__container'\n                value={gtin}\n                onChange={(e) => this.handleChangeLocal(e)}\n              ></input>\n              <button\n                className='right__search__button'\n                onClick={this.ebayGTINCall}\n              >\n                Search\n              </button>\n            </div>\n            <button className='toggle__button'>Un Sold</button>\n          </div>\n          {/* ========================================================================================================== */}\n\n          <div className='account__market'>\n            <div className='account'>\n              <label htmlFor='Account'>Account:</label>\n              <select id='Account' name='Account' className='select__account'>\n                <option value='USA'>USA</option>\n                <option value='UK'>UK</option>\n                <option value='India'>India</option>\n                <option value='Aus'>Aus</option>\n              </select>\n            </div>\n            {/* ========================================================================================================== */}\n\n            <div className='market'>\n              <label htmlFor='Market'>Market</label>\n              <select id='Market' name='Market' className='select__market'>\n                <option value='Ebay'>Ebay</option>\n                <option value='Poshmark'>Poshmark</option>\n                <option value='Mercari'>Mercari</option>\n              </select>\n            </div>\n          </div>\n          {/* ========================================================================================================== */}\n\n          <div className='urls'>\n            <div className='the__url'>\n              <img\n                src={Ebayimg}\n                alt='ebay'\n                width='28'\n                height='25'\n                className='imgcls'\n              />\n              <input\n                placeholder='Ebay URL'\n                type='text'\n                className='the__url_input'\n                value={data[\"ebay\"][\"url\"]}\n                onChange={handleUrl}\n              ></input>\n            </div>\n\n            <div className='the__url'>\n              <img\n                src={Poshmarkimg}\n                alt='ebay'\n                width='25'\n                height='25'\n                className='imgcls'\n              />\n              <input\n                placeholder='Poshmark URL'\n                type='text'\n                className='the__url_input'\n                value={data[\"poshmark\"][\"url\"]}\n                onChange={handleUrl}\n              ></input>\n            </div>\n\n            <div className='the__url'>\n              <img\n                src={Mercariimg}\n                alt='ebay'\n                width='25'\n                height='25'\n                className='imgcls'\n              />\n              <input\n                placeholder='Mercari URL'\n                type='text'\n                className='the__url_input'\n                value={data[\"mercari\"][\"url\"]}\n                onChange={handleUrl}\n              ></input>\n            </div>\n          </div>\n          {/* ========================================================================================================== */}\n\n          {/* ========================================================================================================== */}\n\n          <div className='details__heading'>\n            <div className=' detail_adjust'>Details</div>\n            <div className='details__content'>\n              <div className='arrange__details'>\n                <div className='details__col'>\n                  <label htmlFor='Price' className='label__style'>\n                    Price\n                  </label>\n                  <label htmlFor='Price' className='label__style'>\n                    Apply Price\n                  </label>\n                  <label htmlFor='MRP' className='label__style'>\n                    MRP\n                  </label>\n                  <label htmlFor='MSRP' className='label__style'>\n                    MSRP\n                  </label>\n                  <label htmlFor='COGS' className='label__style'>\n                    Cost of Goods\n                  </label>\n                  <label htmlFor='SOC' className='label__style'>\n                    Shipping/Other Costs\n                  </label>\n                </div>\n                <div className='details__input_header'>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='price'\n                    id='price'\n                    defaultValue={data.price}\n                    onChange={handleChange}\n                  ></input>\n                  <button\n                    className='details__input'\n                    onClick={priceCalculation}\n                  >Calculate</button>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='mrp'\n                    id='mrp'\n                    defaultValue={data.mrp}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='number'\n                    name='msrp'\n                    id='msrp'\n                    defaultValue={data.msrp}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='costOfGoods'\n                    id='costOfGoods'\n                    defaultValue={data.costOfGoods}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='shippingFees'\n                    id='shippingFees'\n                    defaultValue={data.shippingFees}\n                    onChange={handleChange}\n                  ></input>\n                </div>\n              </div>\n              <label className='compPriceSetting'>{data.compPriceSetting}</label>\n              <div className='arrange__details'>\n                <div className='details__col'>\n                  <label htmlFor='SKU' className='label__style'>\n                    SKU\n                  </label>\n                  <label htmlFor='UPC' className='label__style'>\n                    UPC\n                  </label>\n                  <label htmlFor='Quantity' className='label__style'>\n                    Quantity\n                  </label>\n                  <label htmlFor='SWLBKG' className='label__style'>\n                    Shipping weight Lb/KG\n                  </label>\n                  <label htmlFor='SWOZG' className='label__style'>\n                    Shipping weight Oz/G\n                  </label>\n                </div>\n                <div className='details__input_header'>\n                  <input\n                    className='details__input'\n                    type='text'\n                    name='sku'\n                    id='sku'\n                    defaultValue={data.sku}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='text'\n                    name='upc'\n                    id='upc'\n                    defaultValue={data.upc}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='quantity'\n                    id='quantity'\n                    defaultValue={data.quantity}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='weightLB'\n                    id='weightLB'\n                    defaultValue={data.weightLB}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='weightOZ'\n                    id='weightOZ'\n                    defaultValue={data.weightOZ}\n                    onChange={handleChange}\n                  ></input>\n                </div>\n              </div>\n              <div className='arrange__details'>\n                <div className='details__col'>\n                  <label htmlFor='Profit' className='label__style'>\n                    Profit\n                  </label>\n                  <label htmlFor='SZOCC' className='label__style'>\n                    Shipping Zip or City Code\n                  </label>\n                  <label htmlFor='SPL' className='label__style'>\n                    Shipping Package Length\n                  </label>\n                  <label htmlFor='SPW' className='label__style'>\n                    Shipping Package Width\n                  </label>\n                  <label htmlFor='SPH' className='label__style'>\n                    Shipping Package Height\n                  </label>\n                </div>\n                <div className='details__input_header'>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='profit'\n                    id='profit'\n                    defaultValue={data.profit}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='text'\n                    name='zipCode'\n                    id='zipCode'\n                    defaultValue={data.zipCode}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='packageLength'\n                    id='packageLength'\n                    defaultValue={data.packageLength}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='packageWidth'\n                    id='packageWidth'\n                    defaultValue={data.packageWidth}\n                    onChange={handleChange}\n                  ></input>\n                  <input\n                    className='details__input'\n                    type='number'\n                    step=\"any\"\n                    name='packageHeight'\n                    id='packageHeight'\n                    defaultValue={data.packageHeight}\n                    onChange={handleChange}\n                  ></input>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* ========================================================================================================== */}\n\n          <div className='measurements__header'>\n              <div className='productdetails_adjust'>\n                Product Details\n              </div>\n              <div className='product__header_btn_ctn'>\n                <select\n                  id='condition_name'\n                  name='condition_name'\n                  className='condition__input'\n                  value={data.condition_name}\n                  onChange={handleChange}\n                  displayEmpty\n                  inputProps={{ 'aria-label': 'Without label' }}\n                  >\n                  <option defaultValue={data.condition_name} disabled>{data.condition_name}</option>\n                  <option defaultValue='New'>New</option>\n                  <option defaultValue='New (Other/Open Box)'>New (Other/Open Box)</option>\n                  <option defaultValue='New With Defects'>New With Defects</option>\n                  <option defaultValue='Seller Refurbished'>Seller Refurbished</option>\n                  <option defaultValue='Used'>Used</option>\n                  <option defaultValue='Broken/For Repair'>Broken/For Repair</option>\n                </select>\n              <ToggleButton\n                className='product__togglebtn'\n                variant='contained'\n                selected={data.ebayOptionalFieldsActive}\n                onClick={toggleOptional}\n              >\n                Optional\n              </ToggleButton>\n              <button\n                className='btn-success product__btn'\n                onClick={clearExtraDescriptions}\n              >\n                Reset Details\n              </button>\n              <button\n                className='btn-success product__btn'\n                onClick={repopulateExtraDescriptions}\n              >\n                Undo Delete\n              </button>\n            </div>\n          </div>\n          {extraDescriptions.length !== 0 ? (\n            extraDescriptions.filter((description) =>\n                data.ebayOptionalFieldsActive ? true : description.aspectUsage === \"RECOMMENDED\"\n              )\n              .map((description) => {\n                return (\n                  <>\n                  <div className='measurement__body'>\n                    <input\n                      className={`form-control form-control-sm col-4 mr-3 ${\n                        description.aspectRequired\n                          ? \"aspect__input_required\"\n                          : description.aspectUsage === \"RECOMMENDED\"\n                          ? \"aspect__input_recommended\"\n                          : \"\"\n                      }`}\n                      type='text'\n                      name='label'\n                      id={description.id}\n                      value={description.key}\n                      onChange={(e) => handleDescriptionLabel(description.id, e)}\n                      placeholder='key'\n                    />\n                    :-\n                    <Autocomplete\n                      freeSolo\n                      options={\n                        description.suggestedValues\n                          ? description.suggestedValues\n                          : [{\"localizedValue\": \"No Suggested Values\"}]\n                      }\n                      getOptionLabel={(option) => option.localizedValue}\n                      style={{ width: 300 }}\n                      value={description.value}\n                      onChange={(event, value, reason) => handleDescriptionChange(description.id, value)}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          classes='form-control form-control-sm col-4 mr-3 aspect__input_field'\n                        />\n                      )}\n                    />\n                    <button\n                      className='btn'\n                      onClick={(e) => removeDescription(description.id, e)}\n                    >\n                      <div className='fa fa-minus-square ml-3'></div>\n                    </button>\n                  </div>\n                  </>\n                );\n              })\n          ) : (\n            <>\n              <div className='properties'>\n                <div className='prop_adjust'>\n                  <input\n                    placeholder='  Show all title'\n                    type='text'\n                    className='properties__input'\n                  ></input>\n                  <input\n                    placeholder='  Brand or Maker'\n                    type='text'\n                    className='properties__input'\n                  ></input>\n                  <input\n                    placeholder='    Style or Feature'\n                    type='text'\n                    className='properties__input'\n                  ></input>\n                </div>\n              </div>\n              <div className='segrigate'>\n                <button\n                  className={`${\n                    data.category === \"Unisex\"\n                      ? \"fill__button\"\n                      : \"outline__button\"\n                  }`}\n                  category='Unisex'\n                  onClick={() => {\n                    this.setCategory(\"Unisex\");\n                  }}\n                >\n                  Unisex\n                </button>\n                <button\n                  className={`${\n                    data.category === \"Men\" ? \"fill__button\" : \"outline__button\"\n                  }`}\n                  category='Men'\n                  onClick={() => {\n                    this.setCategory(\"Men\");\n                  }}\n                >\n                  Men\n                </button>\n                <button\n                  className={`${\n                    data.category === \"Women\"\n                      ? \"fill__button\"\n                      : \"outline__button\"\n                  }`}\n                  category='Women'\n                  onClick={() => {\n                    this.setCategory(\"Women\");\n                  }}\n                >\n                  Women\n                </button>\n                <button\n                  className={`${\n                    data.category === \"Unisex Kids\"\n                      ? \"fill__button\"\n                      : \"outline__button\"\n                  }`}\n                  category='Unisex Kids'\n                  onClick={() => {\n                    this.setCategory(\"Unisex Kids\");\n                  }}\n                >\n                  Unisex Kids\n                </button>\n                <button\n                  className={`${\n                    data.category === \"Girls\"\n                      ? \"fill__button\"\n                      : \"outline__button\"\n                  }`}\n                  category='Girls'\n                  onClick={() => {\n                    this.setCategory(\"Girls\");\n                  }}\n                >\n                  Girls\n                </button>\n                <button\n                  className={`${\n                    data.category === \"Boys\"\n                      ? \"fill__button\"\n                      : \"outline__button\"\n                  }`}\n                  category='Boys'\n                  onClick={() => {\n                    this.setCategory(\"Boys\");\n                  }}\n                >\n                  Boys\n                </button>\n                <button\n                  className={`${\n                    data.category === \"Maternity\"\n                      ? \"fill__button\"\n                      : \"outline__button\"\n                  }`}\n                  category='Materity'\n                  onClick={() => {\n                    this.setCategory(\"Maternity\");\n                  }}\n                >\n                  Materity\n                </button>\n                <button\n                  className={`${\n                    data.category === \"Babies\"\n                      ? \"fill__button\"\n                      : \"outline__button\"\n                  }`}\n                  category='Babies'\n                  onClick={() => {\n                    this.setCategory(\"Babies\");\n                  }}\n                >\n                  Babies\n                </button>\n\n                {showcat && (\n                  <input\n                    className='custom__category'\n                    type='text'\n                    name='category'\n                    placeholder='Custom Category'\n                    value={data.category}\n                    onChange={handleChange}\n                    maxLength='140'\n                  />\n                )}\n              </div>\n              <div className='measurement__heading'>\n                <div className='measurement_adjust'>Measurements</div>\n                <div className='measurement__body'>\n                  <label htmlFor='Waist' className='label__style'>\n                    Waist\n                    <input\n                      className='measurement__input'\n                      type='number'\n                      step=\"any\"\n                      name='waist'\n                      id='waist'\n                      defaultValue={data.waist}\n                      onChange={handleChange}\n                    ></input>\n                  </label>\n                  <label htmlFor='Rise' className='label__style'>\n                    Rise\n                    <input\n                      className='measurement__input'\n                      type='number'\n                      step=\"any\"\n                      name='rise'\n                      id='rise'\n                      defaultValue={data.rise}\n                      onChange={handleChange}\n                    ></input>\n                  </label>\n                  <label htmlFor='Inseam' className='label__style'>\n                    Inseam\n                    <input\n                      className='measurement__input'\n                      type='number'\n                      step=\"any\"\n                      name='inseam'\n                      id='inseam'\n                      defaultValue={data.inseam}\n                      onChange={handleChange}\n                    ></input>\n                  </label>\n                  <button\n                    className='outline__button__measurement'\n                    onClick={addMeasure}\n                  >\n                    Add new measurement\n                  </button>\n                </div>\n              </div>\n            </>\n          )}\n          {/* ========================================================================================================== */}\n\n          <div className='general__header'>\n            <div className='gen_settings'>General Settings</div>\n            <div className='general__body'>\n              <div className='general__col'>\n                <label htmlFor='Category' className='label__style_general'>\n                  Category\n                  <div className='category__alignment'>\n                    <Autocomplete\n                      disableListWrap\n                      ListboxComponent={ListboxComponent}\n                      renderGroup={renderGroup}\n                      options={ebayCategoryDropDownItems}\n                      getOptionLabel={(option) => option.categoryName}\n                      renderInput={(params) => (\n                        <TextField\n                          placeholder={data.ebayCategoryField ? data.ebayCategoryField : \"\"}\n                          {...params}\n                          style={{\n                            borderRadius: 7,\n                            border: 1,\n                            borderColor: \"solid gray\",\n                            width: 185,\n                            marginLeft: 7,\n                            height: 30,\n                            marginTop: 3,\n                          }}\n                        />\n                      )}\n                      renderOption={(option) => (\n                        <Typography noWrap>{option.categoryName}</Typography>\n                      )}\n                      onChange={(event, value, reason) =>\n                        reason === \"select-option\"\n                          ? handleSelectedEbayCategory(value)\n                          : null\n                      }\n                    />\n                    <button\n                      className='brz__btn '\n                      onClick={(e) => {\n                        this.ebayRef.current.openModal();\n                      }}\n                    >\n                      Browse\n                    </button>\n                  </div>\n                </label>\n                <label\n                  htmlFor='SecondaryCategory'\n                  className='label__style_general'\n                >\n                  Secondary Category\n                  <div>\n                    <input \n                    className='general__input_brz'\n                    ></input>\n                    <button className='brz__btn'>Browse</button>\n                  </div>\n                </label>\n                <label htmlFor='ListingFormat' className='label__style_general'>\n                  Listing Format\n                  <input \n                  className='general__input'\n                  name='listingFormat'\n                  defaultValue={data.listingFormat}\n                  onChange={handleChange}\n                  ></input>\n                </label>\n              </div>\n\n              {/* =============================================================== */}\n              <div className='general__col'>\n                <label\n                  htmlFor='GivingWorksCharityID'\n                  className='label__style_general'\n                >\n                  Giving Works Charity ID\n                  <input \n                  className='general__input'\n                  name='givingWorksCharityID'\n                  defaultValue={data.givingWorksCharityID}\n                  onChange={handleChange}\n                  ></input>\n                </label>\n                <label\n                  htmlFor='GivingWorksDonationPercentage'\n                  className='label__style_general'\n                >\n                  Giving Works Donation %\n                  <input \n                  className='general__input'\n                  name='givingWorksDonationPercentage'\n                  defaultValue={data.givingWorksDonationPercentage}\n                  onChange={handleChange}\n                  ></input>\n                </label>\n                <label\n                  htmlFor='StoreCategory1'\n                  className='label__style_general'\n                >\n                  Store Category 1\n                  <input \n                  className='general__input'\n                  name='storeCategoryOne'\n                  defaultValue={data.storeCategoryOne}\n                  onChange={handleChange}\n                  ></input>\n                </label>\n              </div>\n\n              {/* =============================================================== */}\n              <div className='general__col'>\n                <label\n                  htmlFor='StoreCategory2'\n                  className='label__style_general'\n                >\n                  Store Category 2\n                  <input \n                  className='general__input'\n                  name='storeCategoryTwo'\n                  defaultValue={data.storeCategoryTwo}\n                  onChange={handleChange}\n                  ></input>\n                </label>\n                <label htmlFor='LotSize' className='label__style_general'>\n                  Lot Size\n                  <input \n                  className='general__input'\n                  name='lotSize'\n                  defaultValue={data.lotSize}\n                  onChange={handleChange}\n                  ></input>\n                </label>\n                <label htmlFor='Type' className='label__style_general'>\n                  Type\n                  <input \n                  className='general__input'\n                  name='type'\n                  defaultValue={data.type}\n                  onChange={handleChange}\n                  ></input>\n                </label>\n              </div>\n            </div>\n          </div>\n          {/* ========================================================================================================== */}\n          <div className='dom__header'>\n            <div className='Dom_ship'> Domestic Shipping Service</div>\n            <div className='dom__body'>\n              <div className='arrange__main'>\n                <div className='arrange__col_dom'>\n                  <label htmlFor='ShippingServiceDom' className='label__style'>\n                    Shipping Service\n                  </label>\n                  <Autocomplete\n                        name='domesticShippingService'\n                        options={shippingDropDownItems}\n                        getOptionLabel={(option) => option.toString()}\n                        style={{ width: 300 }}\n                        value={data.domesticShippingService}\n                        onChange={(event, value, reason) =>\n                          reason === \"select-option\"\n                            ? handleChange(event)\n                            : null\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            name='domesticShippingService'\n                            classes='form-control form-control-sm col-4 mr-3 aspect__input_field'\n                          />\n                        )}\n                      />\n                </div>\n                <div className='arrange__col_dom'>\n                  <label htmlFor='CostDom' className='label__style'>\n                    Cost\n                  </label>\n                  <input \n                  className='dom__input'\n                  name='domesticShippingCost'\n                  defaultValue={data.domesticShippingCost}\n                  onChange={handleChange}\n                  ></input>\n                </div>\n              </div>\n\n              {/* ==================================================================================== */}\n\n              <div className='arrange__main'>\n                <div className='arrange__col_dom'>\n                  <label htmlFor='EachAdditionalDom' className='label__style'>\n                    Each Additional\n                  </label>\n                  <input \n                  className='dom__input'\n                  name='domesticShippingEachAdditional'\n                  defaultValue={data.domesticShippingEachAdditional}\n                  onChange={handleChange}\n                  ></input>\n                </div>\n                <div className='arrange__col_dom'>\n                  <label\n                    htmlFor='AK/HI/PR/SurchargeDom'\n                    className='label__style'\n                  >\n                    AK/HI/PR Surcharge\n                  </label>\n                  <input \n                  className='dom__input'\n                  name='domesticShippingSurcharge'\n                  defaultValue={data.domesticShippingSurcharge}\n                  onChange={handleChange}\n                  ></input>\n                </div>\n              </div>\n\n              {/* ==================================================================================== */}\n              <div className='arrange__col_dom'>\n                <div className='free__ship'>\n                  <label>\n                  <input \n                  type='checkbox'\n                  className='dom__input'\n                  checked={data.domesticShippingFreeShippingActive}\n                  onChange={(e) => {handleCheckboxToggle(e.target.checked, 'domesticShippingFreeShippingActive')}}\n                  ></input>\n                    Free Shipping?\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* ========================================================================================================== */}\n          <div className='dom__header'>\n            <div className='int_ship'> International Shipping Service</div>\n            <div className='dom__body'>\n              <div className='arrange__main'>\n                <div className='arrange__col_dom'>\n                  <label htmlFor='ShippingServiceInt' className='label__style'>\n                    Shipping Service\n                  </label>\n                  <Autocomplete\n                        name='internationalShippingService'\n                        options={shippingDropDownItems}\n                        getOptionLabel={(option) => option.toString()}\n                        style={{ width: 300 }}\n                        value={data.internationalShippingService}\n                        onChange={(event, value, reason) =>\n                          reason === \"select-option\"\n                            ? handleChange(event)\n                            : null\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            name='internationalShippingService'\n                            classes='form-control form-control-sm col-4 mr-3 aspect__input_field'\n                          />\n                        )}\n                      />\n                </div>\n                <div className='arrange__col_dom'>\n                  <label htmlFor='CostInt' className='label__style'>\n                    Cost\n                  </label>\n                  <input \n                  className='dom__input'\n                  name='internationalShippingCost'\n                  defaultValue={data.internationalShippingCost}\n                  onChange={handleChange}\n                  ></input>\n                </div>\n              </div>\n\n              {/* ==================================================================================== */}\n\n              <div className='arrange__main'>\n                <div className='arrange__col_dom'>\n                  <label htmlFor='EachAdditionalInt' className='label__style'>\n                    Each Additional\n                  </label>\n                  <input \n                  className='dom__input'\n                  name='internationalShippingEachAdditional'\n                  defaultValue={data.internationalShippingEachAdditional}\n                  onChange={handleChange}\n                  ></input>\n                </div>\n                <div className='arrange__col_dom'>\n                  <label\n                    htmlFor='AK/HI/PRSurchargeInt'\n                    className='label__style'\n                  >\n                    AK/HI/PR Surcharge\n                  </label>\n                  <input \n                  className='dom__input'\n                  name='internationalShippingSurcharge'\n                  defaultValue={data.internationalShippingSurcharge}\n                  onChange={handleChange}\n                  ></input>\n                </div>\n              </div>\n\n              {/* ==================================================================================== */}\n              <div className='arrange__col_dom'>\n                <div className='free__ship'>\n                  <input \n                  type='checkbox' \n                  className='dom__input'\n                  name='internationalShippingFreeShippingActive'\n                  checked={data.internationalShippingFreeShippingActive}\n                  onChange={(e) => {handleCheckboxToggle(e.target.checked, 'internationalShippingFreeShippingActive')}}\n                  ></input>\n                  <label\n                    htmlFor='FreeShippingInt'\n                    className='label__style_free'\n                  >\n                    Free Shipping?\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* =============================================================== */}\n          <div className='best_offer'>\n            <div className='dom__header2'>\n              <div className='int_ship2'> Best Offer</div>\n              <div className='dom__body2'>\n                <button className='button_style'>\n                  Yes, best offer enabled\n                </button>\n                <div className='option_div'>\n                  <input \n                  type='checkbox'\n                  name='bestOfferAcceptFloorActive'\n                  checked={data.bestOfferAcceptFloorActive}\n                  onChange={(e) => {handleCheckboxToggle(e.target.checked, 'bestOfferAcceptFloorActive')}}\n                  ></input>{\" \"}\n                  <label>Automatically accept offers of atleast</label>{\" \"}\n                  <input \n                  className='inputbox1'\n                  name='bestOfferAcceptFloorValue'\n                  defaultValue={data.bestOfferAcceptFloorValue}\n                  onChange={handleChange}\n                  ></input>\n                </div>\n                <div className='option_div'>\n                  <input \n                  type='checkbox'\n                  name='bestOfferDeclineCeilingActive'\n                  checked={data.bestOfferDeclineCeilingActive}\n                  onChange={(e) => {handleCheckboxToggle(e.target.checked, 'bestOfferDeclineCeilingActive')}}\n                  ></input>{\" \"}\n                  <label>Automatically decline offers lower than</label>{\" \"}\n                  <input \n                  className='inputbox'\n                  name='bestOfferDeclineCeilingValue'\n                  defaultValue={data.bestOfferDeclineCeilingValue}\n                  onChange={handleChange}\n                  ></input>\n                </div>\n              </div>\n            </div>\n            <div className='decition_buttons'>\n              <button \n              className='save_to_draft'\n              onClick={(e) => {onSubmit(e, \"draft\");}}>\n              Save to draft\n              </button>\n              {/* \"submit should only be on the drafted section. Change submit on the submitted section to save to submitted\"  */}\n              {data.prodStatus && data.prodStatus === 'submit' ?\n                (\n                  <>\n                  <button className='save'\n                  onClick={(e) => {onSubmit(e, \"save\");}}>\n                  Save</button>\n                  </>\n                )\n                :\n                (\n                  <>\n                  <button className='submit'\n                  onClick={(e) => {onSubmit(e, \"submit\");}}>\n                  Submit</button>\n                  </>\n                )\n                \n              }\n              <button \n              className='cancel'\n              onClick={() => window.open(\"/searchcart\", \"_self\")}\n              >Cancel</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default RightSection;\n","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\EditForm\\components\\LeftSection\\LeftSection.jsx",["287"],"import React, { Component } from \"react\";\nimport \"./LeftSection.css\";\n//import Imagebtn from \"../Imagebtn\";\n//import { Link } from \"react-router-dom\";\nimport { assetsURL } from \"../../../../services/Axios\";\n//import Popover from '@material-ui/core/Popover';\n//import Axios from '../../../../services/Axios';\n//import Badge from '@material-ui/core/Badge';\nimport LoadingSpinner from \"../../../utils/loader\";\n//import { FaChevronRight, FaChevronLeft } from \"react-icons/fa\";\nconst max = 5000;\nconst $ = window.$;\n\nconst styles = {\n  inputFile: {\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    height: \"100%\",\n    width: \"100%\",\n    opacity: 0,\n  },\n};\n\nclass LeftSection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      shortDescCharCount: 0,\n      messageFormToggle: false,\n      modalImage: \"\",\n      imageIndex: 0,\n      anchorEl: null,\n      customdesc: false,\n      desc: \"\"\n    };\n  }\n\n  componentWillMount() \n  {\n    if (\"customdesc\" in localStorage) \n    {\n      this.setState({customdesc: localStorage.getItem(\"customdesc\") === \"true\"});\n    }\n  }\n\n  handleChanges = (e) => {\n    if (e.target.value.length > max) return 0;\n    this.setState({ shortDescCharCount: e.target.value.length });\n  };\n\n  handleClick = (event) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n  \n  handleImageModal = (idx) => {\n    //console.log(idx ,'idx')\n    if (\n      idx >= 0 &&\n      idx < this.props.images.length &&\n      this.props.images[idx].img !== null\n    ) {\n      let image = this.props.images[idx];\n      // console.log(image, 'index check')\n      this.setState(\n        {\n          imageIndex: idx,\n          fullimg:\n            typeof image.img === \"string\"\n              ? image.img.substring(0, 4) !== \"http\" &&\n                image.img.substring(0, 5) !== \"https\"\n                ? assetsURL + image.img\n                : image.img\n              : image.img !== null\n              ? URL.createObjectURL(image.img)\n              : \"\",\n        },\n        () => {\n          $(\"#addTemplateModal1\").modal(\"show\");\n        }\n      );\n    }\n  };\n\n  customdescription = (e) => {\n    const { data } = this.props;\n    const { customdesc } = this.state\n    localStorage.setItem('customdesc', !customdesc);\n    this.setState({ customdesc: !customdesc });\n\n    if (data.shortDescription) {\n      let desc = data.shortDescription;\n      this.setState({ desc });\n      data.shortDescription = desc.trim();\n    }\n  };\n\n  render = () => {\n    const { \n      //suggestTitles, \n      customdesc \n    } = this.state;\n    const {\n      data,\n      handleChange,\n      images,\n      //Ebay,\n      //Poshmark,\n      //Mercari,\n      handleBulkUpload,\n      handleImageChange,\n      removeImg,\n      extraDescriptions,\n      //toggleSelectedOthersWebsite,\n      toggleSelectedWebsite\n    } = this.props;\n\n    if (customdesc === false) {\n      data.shortDescription =\n        (data.title !== undefined\n          ? data.title !== \"\"\n            ? data.title + \"\\n\" + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.brand !== undefined\n          ? data.brand !== \"\"\n            ? \"Brand: \" + data.brand + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.model !== undefined\n          ? data.model !== \"\"\n            ? \"Model: \" + data.model + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.category !== undefined\n          ? data.category !== \"\"\n            ? \"Category: \" + data.category + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.colorShade !== undefined\n          ? data.colorShade !== \"\"\n            ? \"Color: \" + data.colorShade + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.material !== undefined\n          ? data.material !== \"\"\n            ? \"Material: \" + data.material + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.style !== undefined\n          ? data.style !== \"\"\n            ? \"Style: \" + data.style + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.pattern !== undefined\n          ? data.pattern !== \"\"\n            ? \"Pattern: \" + data.pattern + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.size !== undefined\n          ? data.size !== \"\"\n            ? \"Size: \" + data.size + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.seasonOrWeather !== undefined\n          ? data.seasonOrWeather !== \"\"\n            ? \"Season/Weather: \" + data.seasonOrWeather + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.care !== undefined\n          ? data.care !== \"\"\n            ? \"Care: \" + data.care + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.madeIn !== undefined\n          ? data.madeIn !== \"\"\n            ? \"Made in: \" + data.madeIn + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.line1 !== undefined\n          ? data.line1 !== \"\"\n            ? data.line1 + \": \" + data.value1 + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.line2 !== undefined\n          ? data.line2 !== \"\"\n            ? data.line2 + \": \" + data.value2 + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.line3 !== undefined\n          ? data.line3 !== \"\"\n            ? data.line3 + \": \" + data.value3 + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.line4 !== undefined\n          ? data.line4 !== \"\"\n            ? data.line4 + \": \" + data.value4 + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.line5 !== undefined\n          ? data.line5 !== \"\"\n            ? data.line5 + \": \" + data.value5 + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.line6 !== undefined\n          ? data.line6 !== \"\"\n            ? data.line6 + \": \" + data.value6 + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.line7 !== undefined\n          ? data.line7 !== \"\"\n            ? data.line7 + \": \" + data.value7 + \"\\n\"\n            : \"\"\n          : \"\") +\n        (data.line8 !== undefined\n          ? data.line8 !== \"\"\n            ? data.line8 + \": \" + data.value8 + \"\\n\"\n            : \"\"\n          : \"\");\n\n      for (let i = 0; i < extraDescriptions.length; i++) {\n        if((extraDescriptions[i].value !== \"\" || extraDescriptions[i].value !== null || extraDescriptions[i].value !== undefined || extraDescriptions[i].value !== \"No Suggested Values\" || extraDescriptions[i].value !== \"undefined\") && (extraDescriptions[i].value.localizedValue !== \"\" | null | undefined | \"No Suggested Values\"))\n        {\n          data.shortDescription +=\n            extraDescriptions[i].key + \": \" + extraDescriptions[i].value.localizedValue + \"\\n\";\n        }\n      }\n\n      if(data.companyBlurb !== undefined)\n      {\n        data.shortDescription+=\n        (data.companyBlurb !== undefined\n          ? data.companyBlurb !== \"\"\n            ? \"\\n\" + data.companyBlurb + \"\\n\"\n            : \"\"\n          : \"\");\n      }\n    }\n\n\n    return (\n      <>\n      <div className='left__app'>\n        <div className=\"mt-3\" />\n          <div className=\"row m-auto\">\n            {images.map((image, idx) => {\n              return (\n                <div className=\"col-12 col-lg-4 px-2\">\n                  <div\n                    className=\"modal fade bd-example-modal-sm\"\n                    id=\"addTemplateModal1\"\n                    tabIndex={-1}\n                    role=\"dialog\"\n                    aria-labelledby=\"addTemplateModalLabel\"\n                    aria-hidden=\"true\"\n                  >\n                    <div\n                      className=\"modal-dialog modal-lg modal-dialog-centered\"\n                      //style={{ width: \"500px\", height: \"10px\" }}\n                    >\n                      <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                          <button\n                            type=\"button\"\n                            className=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                          >\n                            <span aria-hidden=\"true\">×</span>\n                          </button>\n                        </div>\n                        <img\n                          src={this.state.fullimg}\n                          style={{ height: \"500px\" }}\n                          alt=\"+\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"card text-primary mb-3\">\n                    <div className=\"card-body body-text text-center align-middle d-flex align-items-center justify-content-center p-2 px-1\">\n                      {image.img ? (\n                        <div className=\"container p-0 m-0\">\n                          <img\n                            src={\n                              typeof image.img === \"string\"\n                                ? assetsURL + image.img\n                                : URL.createObjectURL(image.img)\n                            }\n                            style={{ width: \"100%\", height: \"90px\" }}\n                            alt=\"+\"\n                            onClick={() => {\n                              this.setState(\n                                {\n                                  fullimg:\n                                    typeof image.img === \"string\"\n                                      ? assetsURL + image.img\n                                      : URL.createObjectURL(image.img),\n                                },\n                                () => {\n                                  $(\"#addTemplateModal1\").modal(\"show\");\n                                }\n                              );\n                            }}\n                          ></img>\n\n                          <button\n                            type=\"button\"\n                            className=\"btn2 close mr-auto\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                            onClick={() => removeImg(idx)}\n                          >\n                            <span aria-hidden=\"true\">×</span>\n                          </button>\n                        </div>\n                      ) : (\n                        <div\n                          style={{\n                            width: \"40px\",\n                            height: \"90px\",\n                            margin: \"0px!important\",\n                          }}\n                          className=\"d-flex align-items-center justify-content-center\"\n                        >\n                          <label style={{ fontSize: \"18px\" }}>\n                            <div className=\"fas fa-plus\"></div>\n                          </label>\n                          <input\n                            type=\"file\"\n                            style={styles.inputFile}\n                            name={image.key}\n                            accept=\"image/*\"\n                            onChange={handleImageChange}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"col-12 px-1\">\n              <div className=\"input-group mb-3\">\n                {this.props.isSubmitting ? (\n                  <div className=\"center\">\n                    <LoadingSpinner />\n                  </div>\n                ) : null}\n                <div className=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    className=\"custom-file-input\"\n                    multiple\n                    onChange={handleBulkUpload}\n                  />\n                  <label\n                    className=\"custom-file-label\"\n                    htmlFor=\"inputGroupFile01\"\n                  >\n                    Bulk Upload Images\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        <div className='store__buttons'>\n          <button className={`${data[\"ebay\"][\"check\"] === true ? \"outline__button\" : \"fill__button\"}`}\n                  onClick={() => {toggleSelectedWebsite(\"ebay\");}}\n                  id=\"EbayToggleButton\"\n                  >Ebay</button>\n          <button className={`${data[\"mercari\"][\"check\"] === true ? \"outline__button\" : \"fill__button\"}`}\n                  onClick={() => {toggleSelectedWebsite(\"mercari\");}}\n                  id=\"MercariToggleButton\"\n                  >Mercari</button>\n        </div>\n        <div className='store__buttons'>\n          <button className={`${data[\"poshmark\"][\"check\"] === true ? \"outline__button\" : \"fill__button\"}`}\n                  onClick={() => {toggleSelectedWebsite(\"poshmark\");}}\n                  id=\"PoshmarkToggleButton\"\n                  >Poshmark</button>\n          <button className='outline__button'>Other</button>\n        </div>\n        <div className='store__buttons'>\n          <button className={`${data[\"delist\"][\"check\"] === true ? \"outline__button_red\" : \"fill__button_red\"} w-100`}\n                  onClick={() => {toggleSelectedWebsite(\"delist\");}}\n                  id=\"DelistToggleButton\"\n                  >Delist</button>\n        </div>\n        <div className=\"form-group mt-3\">\n          <label className=\"h6 py-2 fw-500 text-uppercase\">\n            Short Description\n            {\n              customdesc ?\n              <button\n              className={\"btn btn-success ml-2  btn-sm\"}\n              onClick={this.customdescription}\n              >\n              Custom\n            </button>\n            :\n              <button\n                className={\"btn btn-warning ml-2 btn-sm\"}\n                onClick={this.customdescription}\n              >\n                 Automatic Generate\n              </button>\n          }\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"shortDescriptionInputField\"\n            rows=\"7\"\n            name=\"shortDescription\"\n            value={data.shortDescription}\n            onKeyUp={this.handleChanges}\n            onChange={handleChange}\n          ></textarea>\n          <small className=\"form-text text-muted\" style={{ fontSize: \"0.5em\" }}>\n            {this.state.shortDescCharCount}/5000 max characters\n          </small>\n        </div>\n        <div className=\"form-group mt-3\">\n          <label className=\"h6 py-2 fw-500 text-uppercase\">\n            Keywords or tags\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"KeywordsTagsInputField\"\n            rows=\"5\"\n            name=\"keywords\"\n            defaultValue={data.keywords}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group mt-3\">\n          <label className=\"h6 py-2 fw-500 text-uppercase\">\n            Enter Note (Will not be displayed in listing)\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"NoteInputField\"\n            rows=\"5\"\n            name=\"note\"\n            defaultValue={data.note}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n      </>\n    );\n  };\n}\n\nexport default LeftSection;\n","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\signup\\signup.jsx",["288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305"],"import React, { Component } from \"react\";\nimport Axios from \"../../services/Axios\";\nimport \"./signupmin.css\";\nimport Logo from \"../../Components/images/hammock.svg\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      address1: \"\",\n      address2: \"\",\n      country: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      email: \"\",\n      phoneno: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      term1: false,\n      term2: false,\n      isSubmitting: false,\n    };\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleToggleCheckbox = (e) => {\n    const { name } = e.target;\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  handleSubmit = (e) => {\n    this.setState({ isSubmitting: true });\n    e.preventDefault();\n    const {\n      term1,\n      term2,\n      address1,\n      address2,\n      password,\n      confirmPassword,\n      country,\n      city,\n      state,\n      zip,\n      firstName,\n      lastName,\n      email,\n      phoneno,\n    } = this.state;\n\n    if (!term1) {\n      this.setState({ isSubmitting: false });\n      return alert(\"Accept all the terms.\");\n    }\n\n    if (email == \"\") {\n      this.setState({ isSubmitting: false });\n      return alert(\"Email field is required.\");\n    }\n\n    if (phoneno == \"\") {\n      this.setState({ isSubmitting: false });\n      return alert(\"Phone.no field is required.\");\n    }\n\n    if (firstName == \"\" || lastName == \"\") {\n      this.setState({ isSubmitting: false });\n      return alert(\"Name field is required.\");\n    }\n\n    if (password !== confirmPassword) {\n      this.setState({ isSubmitting: false });\n      return alert(\"Password don't match.\");\n    }\n\n    const body = { ...this.state };\n    Axios.post(\"/signup\", body)\n      .then((res) => {\n        if (res.data.errors) {\n          this.setState({ isSubmitting: false });\n          return alert(res.data.errors);\n        }\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"paymentadded\", false);\n        window.open(\"/addpayment\", \"_self\");\n      })\n      .catch((err) => {\n        this.setState({ isSubmitting: false });\n        if (err.response.data.err) {\n          return alert(err.response.data.err);\n        }\n        alert(\"Something went wrong.\");\n        console.log(err);\n      });\n  };\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      address1,\n      address2,\n      country,\n      state,\n      zip,\n      email,\n      phoneno,\n      city,\n      password,\n      confirmPassword,\n      isSubmitting,\n    } = this.state;\n    return (\n      <div className=\"row col-lg-5 m-auto\">\n        <form className=\"formIt mt-7\">\n          <div className=\"d-flex align-items-center justify-content-between mb-5 ml-5 mr-5\">\n            <img src={Logo} alt=\"hammoq\" className=\"img\" />\n          </div>\n          <Link to=\"/products/submitted\">\n            <i className=\"fa fa-arrow-left mt-3\" aria-hidden=\"true\"></i>\n          </Link>\n          <div>\n            <Link to=\"/signin\">Login</Link>\n          </div>\n          <br />\n          <h5>All fields are required</h5>\n          <br />\n          <label htmlFor=\"firstname\">FIRST NAME:</label>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            value={firstName}\n            onChange={this.handleChange}\n            className=\"form-control mb-4\"\n            required\n          ></input>\n          <label htmlFor=\"lastname\">LAST NAME:</label>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            value={lastName}\n            onChange={this.handleChange}\n            className=\"form-control mb-4\"\n            required\n          ></input>\n          <label htmlFor=\"email\">EMAIL:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            className=\"form-control mb-4\"\n            required\n          ></input>\n          <label htmlFor=\"state\">PHONE.NO:</label>\n          <input\n            type=\"text\"\n            name=\"phoneno\"\n            value={phoneno}\n            onChange={this.handleChange}\n            className=\"form-control  mb-4\"\n            required\n          ></input>\n          <label htmlFor=\"password\">PASSWORD:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            className=\"form-control mb-4\"\n            required\n          ></input>\n          <label htmlFor=\"passwordconfirmation\">PASSWORD CONFIRMATION:</label>\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={this.handleChange}\n            className=\"form-control mb-4\"\n            required\n          ></input>\n          <label htmlFor=\"couponcode\">COUPON CODE:</label>\n          <input\n            type=\"text\"\n            name=\"couponcode\"\n            className=\"form-control mb-4\"\n          ></input>\n          <a href=\"\" target=\"_blank\">\n            Terms and Conditions\n          </a>\n          <div className=\"form-check\">\n            <input\n              type=\"checkbox\"\n              name=\"term1\"\n              onChange={this.handleToggleCheckbox}\n              className=\"form-check-input\"\n            ></input>\n            <label htmlFor=\"accept-terms\" className=\"form-check-label mb-4\">\n              I HAVE READ AND AGREE FOR TERMS SERVICE\n            </label>\n          </div>\n          {isSubmitting ? (\n            <button className=\"btn btn-success\" disabled>\n              <span\n                className=\"spinner-border spinner-border-sm mr-2\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n              SIGNING UP...\n            </button>\n          ) : (\n            <button className=\"btn btn-primary\" onClick={this.handleSubmit}>\n              SIGNUP\n            </button>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\forgotpassword\\forgotpassword.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\searchcart\\searchcart.jsx",["306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355"],"import React, { Component } from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./searchcartmin.css\";\nimport Search from \"../utils/Search\";\nimport Comment from \"./Comment\";\nimport Axios, { assetsURL } from \"../../services/Axios\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport LoadingSpinner from \"../utils/loader\";\nimport Pagination from \"../../Components/pagination/Pagination\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { fireEvent } from \"@testing-library/react\";\nimport { formatMs } from \"@material-ui/core\";\nAxios.defaults.headers[\"x-access-token\"] = localStorage.getItem(\"token\");\n\nconst $ = window.$;\n\nclass Searchcart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      rates: {},\n      search: \"\",\n      searchedProducts: [],\n      productMessageSeen: [],\n      bal: 0,\n      Ebay: false,\n      Poshmark: false,\n      Mercari: false,\n      othersbool: false,\n      others: [],\n      othersstate: [],\n      loading: false,\n      datesort: false,\n      counter: 2,\n      page: 1,\n      rowsPerPage: 10,\n      clientdetails: [],\n      totalPage: \"\",\n      filteredProducts: [],\n      message: \"\",\n      pop_open: false,\n      inventoryCount: \"\",\n      draftCount: \"\",\n      submittedCount: \"\",\n      prodStatus: \"\",\n    };\n  }\n\n  handelProductMessageSeen() {\n    var data = this.state.products.filter((status) => status.status != false);\n    console.log(data,'dataaaaaaa')\n    var prodMsgSeen = true\n    var tempProdMsgSeen = []\n    for (var i = 0; i < data.length; i++) {\n        prodMsgSeen = true;\n        for (var j = 0; j < data[i].messageSeen.length; j++) {\n          if (data[i].messageSeen[j].client == false) {\n            prodMsgSeen = false;\n          }\n        }\n        tempProdMsgSeen.push(prodMsgSeen);\n    }\n    this.setState({ productMessageSeen: tempProdMsgSeen });\n    console.log(this.state.productMessageSeen,'prodmsgseennnnnnnnnnnnnnn')\n  }\n  componentDidMount = () => {\n    const prodStatus = this.props.match.params.prodStatus;\n    this.setState({ prodStatus: this.props.match.params.prodStatus });\n    this.setState({ loading: true });\n    Axios.get(\"/payment/rates\")\n      .then((res) => {\n        //rates = res.data[res.data.length - 1];\n        this.setState({ rates: res.data[res.data.length-1] });\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n\n    Axios.get(`/product/type/${prodStatus}`, { params: { page: 1, size: 10 } })\n      .then(({ data }) => {\n        if (data.err) {\n          window.alert(\"No product, Please add few...\");\n          window.open(\"/basic\", \"_self\");\n        } else {\n          this.setState({\n            products: data.data.filter((status) => status.status != false),\n            totalPage: parseInt(data.pages),\n            page: parseInt(data.currPage),\n            inventoryCount: data.count.inventoryCount,\n            draftCount: data.count.draftCount,\n            submittedCount: data.count.submittedCount,\n          });\n          this.handelProductMessageSeen();\n        }\n        //console.log(this.state.productMessageSeen, \"product msg seen\");\n        this.setState({ loading: false });\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n\n    Axios.get(\"/clientdetails\")\n      .then(({ data }) => {\n        this.setState({ bal: data.balance, clientdetails: data });\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n\n    Axios.get(\"/password/getstatus\").then(({ data }) => {\n      this.setState({ Ebay: data.Ebay });\n      this.setState({ Poshmark: data.Poshmark });\n      this.setState({ Mercari: data.Mercari });\n    });\n\n    Axios.get(\"/password/getstatus/others\").then(({ data }) => {\n      if (data.length > 0) {\n        this.setState({ othersbool: true });\n        data.map((d, i) => {\n          const others = [...this.state.others];\n          others.push(d);\n          this.setState({ others });\n\n          const otherss = [...this.state.othersstate];\n          otherss.push(false);\n\n          this.setState({ othersstate: otherss });\n        });\n      }\n    });\n  };\n\n\n  duplicateHandler = async (itemId) => {\n    const response = await Axios.post(`/product/${itemId}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n        \"content-type\": \"application/x-www-form-urlencoded\",\n      },\n    });\n    const response1 = await Axios.get(\n      `/product/type/${this.state.prodStatus}`,\n      { params: { page: 1, size: 10 } }\n    );\n    this.setState({\n      products: response1.data.data,\n    });\n    window.alert(\"duplicate has been created\");\n    window.location.reload();\n  };\n\n  handleSearchChange = (e) => {\n    const { value } = e.target;\n    const { products } = this.state;\n    this.setState(\n      { searchedProducts: Search(products, value), search: value },\n      () =>\n        this.setState({\n          searchedProducts: this.state.searchedProducts.filter((filtered) => {\n            return filtered.status == true;\n          }),\n        })\n    );\n  };\n\n\n  handleDelete = async (itemId) => {\n    window.confirm(\"Are You Sure\");\n    const data = {\n      status: false,\n    };\n    try {\n      const response = await Axios.put(`/product/status/${itemId}`, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      });\n      this.setState({ products: response.data.products });\n      this.handelProductMessageSeen();\n      window.location.reload()\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleChangePage = async (newPage) => {\n    if (newPage > 0 && newPage <= this.state.totalPage) {\n      this.setState({ page: newPage });\n      await Axios.get(`/product/type/${this.state.prodStatus}`, {\n        params: { page: newPage, size: this.state.rowsPerPage },\n      })\n        .then(({ data }) => {\n          console.log(data, \"page chanegs dataaaa\");\n          if (data) this.setState({ \n            products: data.data.filter((status) => status.status != false)\n            ,loading: false });\n          this.handelProductMessageSeen();\n        })\n        .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n    }\n  };\n\n  handleChangeRowsPerPage = async (val) => {\n    await Axios.get(`/product/type/${this.state.prodStatus}`, {\n      params: { page: this.state.page, size: val },\n    })\n      .then(({ data }) => {\n        this.setState({\n          products: data.data.filter((status) => status.status != false),\n          rowsPerPage: val,\n          totalPage: data.pages,\n        });\n        this.handelProductMessageSeen();\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n  };\n\n  handleMessageAlert = (e) => {\n    e.preventDefault();\n    this.setState({\n      pop_open: !this.state.pop_open,\n      anchorEl: e.currentTarget,\n    });\n  };\n\n  handleRequestClose() {\n    this.setState({\n      pop_open: false,\n    });\n  }\n  render() {\n    const { comment, addComment } = this.props;\n    // console.log(this.state.products, \"products\");\n    const {\n      products,\n      rates,\n      searchedProducts,\n      search,\n      bal,\n      Ebay,\n      Poshmark,\n      Mercari,\n      othersbool,\n      others,\n      othersstate,\n      datesort,\n      counter,\n      rowsPerPage,\n      page,\n      clientdetails,\n      totalPage,\n      filteredProducts,\n      productMessageSeen,\n    } = this.state;\n    const newproducts =\n      searchedProducts.length > 0 || search.length > 0\n        ? searchedProducts\n        : filteredProducts.length\n        ? filteredProducts\n        : products;\n    return (\n      <div>\n        <div className=\"cartIt\" style={{ minHeight: \"75vh\" }}>\n          <div className=\"row\">\n            <div className=\"col-6 d-flex\">\n              <input\n                type=\"text\"\n                id=\"searcheverything\"\n                className=\"form-control col-12 ml-2\"\n                value={search}\n                onChange={this.handleSearchChange}\n                placeholder=\"Search\"\n              />\n            </div>\n          </div>\n          <div\n            className=\"modal fade  bd-example-modal-sm\"\n            id=\"addTemplateModal\"\n            tabIndex={-1}\n            role=\"dialog\"\n            aria-labelledby=\"addTemplateModalLabel\"\n            aria-hidden=\"true\"\n          >\n            <div\n              className=\"modal-dialog modal-sm  modal-dialog-centered\"\n              role=\"document\"\n            >\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h6 className=\"modal-title\" id=\"addTemplateModalLabel\">\n                    Rates for listing are -\n                  </h6>\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  >\n                    <span aria-hidden=\"true\">×</span>\n                  </button>\n                </div>\n                <div className=\"col\">\n                  <br />\n                  First site Listing: ${rates.basic / 100}\n                  <br /> <br />\n                  Other site Listing: ${rates.advance / 100} <br /> <br />\n                  Delisting Listing: ${rates.list / 100} <br /> <br />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            {/* <h5 className=\"ml-4 mt-2\">Balance: $ {bal.toFixed(2)}</h5> */}\n            <div\n              className=\"btn btn-secondary d-flex col-2 col-lg-1 ml-auto justify-content-center mr-4 mb-2\"\n              style={{ position: \"absolute\", top: \"75px\", right: \"0px\" }}\n              onClick={() => $(\"#addTemplateModal\").modal(\"show\")}\n            >\n              Rates\n            </div>\n          </div>\n          {/* <div className=\"row\">\n        \n          <div\n            className=\" d-flex  ml-auto justify-content-center mr-4 mb-2\"\n            style={{ position: \"absolute\", top: \"85px\", right: \"135px\" }}\n          >\n            Unlisted products :{\" \"}\n            {clientdetails.noOfProducts - clientdetails.noOfListings > 0 ? clientdetails.noOfProducts - clientdetails.noOfListings : 0} , Listed\n            products: {clientdetails.noOfListings}\n          </div>\n        </div> */}\n          <div className=\"product__info\">\n            {/* <div>\n            <button type=\"text\" onClick = {this.handleMessageAlert} className=\"btn btn-primary d-incline mr-4 mb-3\" >Message</button>\n            <Popover\n              open={this.state.pop_open}\n              anchorEl={this.state.anchorEl}\n              onRequestClose={this.handleRequestClose}\n              anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n              }}\n              transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"left\",\n              }}\n            ></Popover> \n            <Popover\n              id={chatid}\n               open={open}\n              anchorEl={anchorEl}\n              onClose={this.commentClose}\n              anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n              }}\n              transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n                }}\n                />\n            <Message addComment={this.addComment} comment={comment} />\n          </div> */}\n\n            <div style={{ justifyContent: \"space-evenly\" }}>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary d-inline mr-3 mb-3\"\n                onClick={() => {\n                  //this.handleInventory()\n                  this.props.history.push(\"/products/inventory\");\n                  window.location.reload();\n                  //console.log(this.props.history)\n                }}\n              >\n                {this.state.inventoryCount}-Inventory\n              </button>\n              <button\n                className=\"btn btn-primary d-inline mr-3 mb-3\"\n                onClick={() => {\n                  // this.handleDrafts();\n\n                  this.props.history.push(\"/products/draft\");\n                  window.location.reload();\n                }}\n              >\n                {this.state.draftCount}-Drafts\n              </button>\n              <button\n                className=\"btn btn-primary d-inline mr-3 mb-3\"\n                onClick={() => {\n                  //this.handleSubmitted();\n                  this.props.history.push(\"/products/submitted\");\n                  window.location.reload();\n                }}\n              >\n                {this.state.submittedCount} -Submitted\n              </button>\n            </div>\n          </div>\n\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\" className=\"imageIt\">\n                  No\n                </th>\n                <th scope=\"col\" className=\"imageIt\">\n                  Photos\n                </th>\n                <th scope=\"col\" className=\"title\">\n                  TITLE\n                </th>\n                <th scope=\"col\" className=\"sku\">\n                  SKU\n                </th>\n                <th scope=\"col\" className=\"price\">\n                  PRICE\n                </th>\n                <th scope=\"col\" className=\"status\">\n                  STATUS\n                </th>\n                <th scope=\"col\"></th>\n                <th scope=\"col\"></th>\n                <th scope=\"col\"></th>\n                <th scope=\"col\" className=\"date\">\n                  <button\n                    className=\"btn btn-sm\"\n                    onClick={() => {\n                      this.setState({\n                        datesort: !datesort,\n                        productMessageSeen: productMessageSeen.reverse(),\n                      });\n                    }}\n                  >\n                    <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                    <b>DATE</b>\n                  </button>\n                </th>\n                <th scope=\"col\" className=\"message\">\n                  Message\n                </th>\n                <th scope=\"col\" className=\"notes\">\n                  NOTES\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {datesort ? (\n                <>\n                  {newproducts && newproducts.length > 0 ? (\n                    newproducts.reverse().map((product, idx) => {\n                      return (\n                        <tr>\n                          <td>{idx + 1 + (page - 1) * rowsPerPage}</td>\n                          <td>\n                            <img\n                              src={\n                                product.images.default_image.substring(\n                                  0,\n                                  product.images.default_image.indexOf(\":\")\n                                ) != \"http\" &&\n                                product.images.default_image.substring(\n                                  0,\n                                  product.images.default_image.indexOf(\":\")\n                                ) != \"https\"\n                                  ? assetsURL + product.images.default_image\n                                  : product.images.default_image\n                              }\n                              className=\"product-img\"\n                              alt=\"prod\"\n                            />\n                          </td>\n                          <td>\n                            {product.title\n                              ? product.title\n                              : product.brand + \" \" + product.model}\n                          </td>\n                          <td>{product.sku}</td>\n                          <td>\n                            <div>{product.price}</div>\n                          </td>\n                          <td>\n                            {product.ebay.check && Ebay ? (\n                              <div>\n                                <small>\n                                  {product.ebay.url == \"\" ||\n                                  product.ebay.url == null ? (\n                                    <p className=\"text-danger\">Ebay</p>\n                                  ) : product.ebay.url == \"d\" ? (\n                                    \"Ebay\"\n                                  ) : (\n                                    <a href={product.ebay.url} target=\"_blank\">\n                                      Ebay\n                                    </a>\n                                  )}\n                                </small>\n                              </div>\n                            ) : null}\n                            {product.poshmark.check && Poshmark ? (\n                              <div>\n                                <small>\n                                  {product.poshmark.url == \"\" ||\n                                  product.poshmark.url == null ? (\n                                    <p className=\"text-danger\">Poshmark</p>\n                                  ) : product.poshmark.url == \"d\" ? (\n                                    \"Poshmark\"\n                                  ) : (\n                                    <a\n                                      href={product.poshmark.url}\n                                      target=\"_blank\"\n                                    >\n                                      Poshmark\n                                    </a>\n                                  )}\n                                </small>\n                              </div>\n                            ) : null}\n                            {product.mercari.check && Mercari ? (\n                              <div>\n                                <small>\n                                  {product.mercari.url == \"\" ||\n                                  product.mercari.url == null ? (\n                                    <p className=\"text-danger\">Mercari</p>\n                                  ) : product.mercari.url == \"d\" ? (\n                                    \"Mercari\"\n                                  ) : (\n                                    <a\n                                      href={product.mercari.url}\n                                      target=\"_blank\"\n                                    >\n                                      Mercari\n                                    </a>\n                                  )}\n                                </small>\n                              </div>\n                            ) : null}\n                            {product.delist.check ? (\n                              <div>\n                                <small>\n                                  Delist -\n                                  {product.delist.url == \"\" ? \"false\" : \"true\"}\n                                </small>\n                              </div>\n                            ) : null}\n                            {othersbool &&\n                              product.others &&\n                              JSON.parse(product.others).map((items) => {\n                                console.log(\n                                  items,\n                                  \"checking values for status\"\n                                );\n                                if (items.status) {\n                                  return (\n                                    <div>\n                                      <small>\n                                        {items.name}-\n                                        {items.url == \"\" ? \"false\" : \"true\"}\n                                      </small>\n                                    </div>\n                                  );\n                                }\n                              })}\n                          </td>\n                          <td>\n                            <a href={`/edit/${product._id}`}>\n                              <button className=\"btn btn-primary d-inline btn-sm\">\n                                Edit/List\n                              </button>\n                            </a>\n                          </td>\n                          <td>\n                            <button\n                              className=\"btn btn-primary d-inline btn-sm\"\n                              onClick={() => this.duplicateHandler(product._id)}\n                            >\n                              Duplicate\n                            </button>\n                          </td>\n                          <td>\n                            <button\n                              className=\"btn btn-danger d-inline btn-sm\"\n                              onClick={() => this.handleDelete(product._id)}\n                            >\n                              Delete\n                            </button>\n                          </td>\n                          <td>\n                            <small>{product.date.split(\"T\")[0]}</small>\n                          </td>\n                          <td>\n                            {productMessageSeen[idx] ? (\n                              <Badge\n                                color=\"secondary\"\n                                invisible=\"true\"\n                                variant=\"dot\"\n                              >\n                                <MailIcon />\n                              </Badge>\n                            ) : (\n                              <Badge color=\"secondary\" variant=\"dot\">\n                                <MailIcon />\n                              </Badge>\n                            )}\n                          </td>\n                          <td>\n                            <small>{product.note}</small>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  ) : (\n                    <>\n                      <h4>\n                        No products submitted for listings, please submit some\n                      </h4>\n                      {this.state.loading ? (\n                        <div className=\"center\">\n                          <LoadingSpinner asOverlay />\n                        </div>\n                      ) : null}\n                    </>\n                  )}\n                </>\n              ) : (\n                <>\n                  {newproducts && newproducts.length > 0 ? (\n                    newproducts.map((product, idx) => {\n                      return (\n                        <tr>\n                          <td>{idx + 1 + (page - 1) * rowsPerPage}</td>\n                          <td>\n                            <img\n                              src={\n                                product.images.default_image != null &&\n                                product.images.default_image.substring(\n                                  0,\n                                  product.images.default_image.indexOf(\":\")\n                                ) != \"http\" &&\n                                product.images.default_image.substring(\n                                  0,\n                                  product.images.default_image.indexOf(\":\")\n                                ) != \"https\"\n                                  ? assetsURL + product.images.default_image\n                                  : product.images.default_image\n                              }\n                              className=\"product-img\"\n                              alt=\"prod\"\n                            />\n                          </td>\n                          <td>\n                            {product.title\n                              ? product.title\n                              : product.brand + \" \" + product.model}\n                          </td>\n                          <td>{product.sku}</td>\n                          <td>\n                            <div>{product.price}</div>\n                          </td>\n                          <td>\n                            {product.ebay.check && Ebay ? (\n                              <div>\n                                <small>\n                                  {product.ebay.url == \"\" ||\n                                  product.ebay.url == null ? (\n                                    <p className=\"text-danger\">Ebay</p>\n                                  ) : product.ebay.url == \"d\" ? (\n                                    \"Ebay\"\n                                  ) : (\n                                    <a href={product.ebay.url} target=\"_blank\">\n                                      Ebay\n                                    </a>\n                                  )}\n                                </small>\n                              </div>\n                            ) : null}\n                            {product.poshmark.check && Poshmark ? (\n                              <div>\n                                <small>\n                                  {product.poshmark.url == \"\" ||\n                                  product.poshmark.url == null ? (\n                                    <p className=\"text-danger\">Poshmark</p>\n                                  ) : product.poshmark.url == \"d\" ? (\n                                    \"Poshmark\"\n                                  ) : (\n                                    <a\n                                      href={product.poshmark.url}\n                                      target=\"_blank\"\n                                    >\n                                      Poshmark\n                                    </a>\n                                  )}\n                                </small>\n                              </div>\n                            ) : null}\n                            {product.mercari.check && Mercari ? (\n                              <div>\n                                <small>\n                                  {product.mercari.url == \"\" ||\n                                  product.mercari.url == null ? (\n                                    <p className=\"text-danger\">Mercari</p>\n                                  ) : product.mercari.url == \"d\" ? (\n                                    \"Mercari\"\n                                  ) : (\n                                    <a\n                                      href={product.mercari.url}\n                                      target=\"_blank\"\n                                    >\n                                      Mercari\n                                    </a>\n                                  )}\n                                </small>\n                              </div>\n                            ) : null}\n                            {product.delist.check ? (\n                              <div>\n                                <small>\n                                  Delist -\n                                  {product.delist.url == \"\" ? \"false\" : \"true\"}\n                                </small>\n                              </div>\n                            ) : null}\n                            {othersbool &&\n                              product.others &&\n                              JSON.parse(product.others).map((items) => {\n                                if (items && items.status) {\n                                  return (\n                                    <div>\n                                      <small>\n                                        {items.name}-\n                                        {items.url == \"\" ? \"false\" : \"true\"}\n                                      </small>\n                                    </div>\n                                  );\n                                }\n                              })}\n                          </td>\n                          <td>\n                            <a href={`/edit/${product._id}`}>\n                              <button className=\"btn btn-primary d-inline btn-sm\">\n                                Edit/List\n                              </button>\n                            </a>\n                          </td>\n                          <td>\n                            <button\n                              className=\"btn btn-primary d-inline btn-sm\"\n                              onClick={() => this.duplicateHandler(product._id)}\n                            >\n                              Duplicate\n                            </button>\n                          </td>\n                          <td>\n                            <button\n                              className=\"btn btn-danger d-inline btn-sm\"\n                              onClick={() => this.handleDelete(product._id)}\n                            >\n                              Delete\n                            </button>\n                          </td>\n                          <td>\n                            <small>{product.date.split(\"T\")[0]}</small>\n                          </td>\n                          <td>\n                            {productMessageSeen[idx] ? (\n                              <Badge\n                                color=\"secondary\"\n                                invisible=\"true\"\n                                variant=\"dot\"\n                              >\n                                <MailIcon />\n                              </Badge>\n                            ) : (\n                              <Badge color=\"secondary\" variant=\"dot\">\n                                <MailIcon />\n                              </Badge>\n                            )}\n                          </td>\n\n                          <td>\n                            <small>{product.note}</small>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  ) : (\n                    <>\n                      <h4>\n                        No products submitted for listings, please submit some\n                      </h4>\n                      {this.state.loading ? (\n                        <div className=\"center\">\n                          <LoadingSpinner asOverlay />\n                        </div>\n                      ) : null}\n                    </>\n                  )}\n                </>\n              )}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"w-100 mx-auto py-2\">\n          <Pagination\n            curPage={page}\n            totalPage={totalPage}\n            rowPerPage={rowsPerPage}\n            onRowNumberChange={this.handleChangeRowsPerPage}\n            previous={this.handleChangePage}\n            next={this.handleChangePage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Searchcart;\n","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\settings\\settings.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Transactions\\Transactions.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\TemplateForm.jsx",["356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386"],"import React, { Component } from \"react\";\nimport LeftSection from \"./Components/LeftSection\";\nimport RightSection from \"./Components/RightSection\";\nimport \"./Template.css\";\nimport Axios from \"../../services/Axios\";\n//import { socketCon } from \"../../services/Axios\";\nimport { Link } from \"react-router-dom\";\nimport LoadingSpinner from \"../utils/loader\";\n//import io from \"socket.io-client\";\nimport imageCompression from \"browser-image-compression\";\n\n// const socket = io(socketCon);\n\nconst $ = window.$;\n\nexport default class extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      users: [],\n      website: \"\",\n      otherssignal: false,\n      loading: false,\n\n      data: {\n        line1:{line1:\"\",value1:\"\"},\n        line2:{line2:\"\",value2:\"\"},\n        line3:{line3:\"\",value3:\"\"},\n        line4:{line4:\"\",value4:\"\"},\n        line5:{line5:\"\",value5:\"\"},\n        line6:{line6:\"\",value6:\"\"},\n        line7:{line7:\"\",value7:\"\"},\n        line8:{line8:\"\",value8:\"\"},\n        ebay: { title: \"\", check: \"\" },\n        poshmark: { title: \"\", check: \"\" },\n        mercari: { title: \"\", check: \"\" },\n        delist: { title: \"\", check: \"\" },\n      },\n      templatename: \"\",\n      isSubmitting: false,\n      templates: [],\n      extraMeasures: [],\n      extraDescriptions : [],\n      count: 1,\n      count1 : 1,\n      images: [\n        { key: \"default_image\", label: \"Default\", img: \"\" },\n        { key: \"brand_image\", label: \"Brand\", img: \"\" },\n        { key: \"model_image\", label: \"Model\", img: \"\" },\n        { key: \"side1_image\", label: \"Side\", img: \"\" },\n        { key: \"side2_image\", label: \"Side\", img: \"\" },\n        { key: \"front_image\", label: \"Front\", img: \"\" },\n        { key: \"back_image\", label: \"Back\", img: \"\" },\n        { key: \"condition1_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition2_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition3_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition4_image\", label: \"Condition\", img: \"\" },\n        { key: \"condition5_image\", label: \"Image Tag\", img: \"\" },\n      ],\n      Ebay: false,\n      Poshmark: false,\n      Mercari: false,\n      othersbool: false,\n      others: [],\n      othersstate: [],\n      tempcheck: false,\n      otherfromdb: [],\n      bal: 0,\n      rates: {},\n      cid: \"\",\n      imglen: 0,\n      templateid : ''\n    };\n  }\n\n  setTemplate = (tempid) => {\n    //const { images } = this.state;\n    let { templatename } = this.state;\n    // images.forEach((i) => {\n    //   i.img = \"\";\n    // });\n    Axios.get(`/template/${tempid}`)\n      .then(({ data }) => {\n        if (!data.templates[0].data) {\n          data.templates[0].data = {};\n          this.state.data[\"ebay\"][\"check\"] = false;\n          this.state.data[\"poshmark\"][\"check\"] = false;\n          this.state.data[\"mercari\"][\"check\"] = false;\n          this.state.data[\"delist\"][\"check\"] = false;\n        } else {\n          Object.entries(data.templates[0].data).forEach((item) => {\n            if (\n              this.state.data[`${item[0]}`] === \"\" ||\n              this.state.data[`${item[0]}`] === undefined ||\n              this.state.data[`${item[0]}`] === null\n            ) {\n              this.state.data[`${item[0]}`] =\n                data.templates[0].data[`${item[0]}`];\n            }\n          });\n          //this.setState({ data: data.templates[0].data });\n\n          templatename = data.templates[0].name;\n          this.setState({ templatename });\n\n          this.state.data[\"ebay\"][\"title\"] = data.templates[0].data.ebay.title;\n          this.state.data[\"poshmark\"][\"title\"] =\n            data.templates[0].data.poshmark.title;\n          this.state.data[\"mercari\"][\"title\"] =\n            data.templates[0].data.mercari.title;\n          this.state.data[\"delist\"][\"title\"] =\n            data.templates[0].data.delist.title;\n          // if (data.templates[0].data.images) {\n          //   images.forEach((image) => {\n          //     image.img = data.templates[0].data.images[image.key];\n          //   });\n          //   this.setState({ images });\n          // }\n\n          if (data.templates[0].data.extraMeasures) {\n            this.state.extraMeasures = JSON.parse(\n              data.templates[0].data.extraMeasures\n            );\n            this.state.count = this.state.extraMeasures.length + 1;\n          }\n\n          if (data.templates[0].data.line) {\n            this.state.extraDescriptions = JSON.parse(\n              data.templates[0].data.line\n            );\n            this.setState({extraDescriptions: this.state.extraDescriptions , count1 : this.state.extraDescriptions.length + 1})\n            \n          }\n\n          if (data.templates[0].data.others) {\n            this.state.otherfromdb = JSON.parse(data.templates[0].data.others);\n            this.state.otherfromdb.forEach((db, i) => {\n              this.state.othersstate[i] = db.status;\n            });\n          }\n          this.setState({ tempcheck: true });\n        }\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n  };\n\n  componentDidMount = () => {\n    const tempId = this.props.match.params.id\n    this.setState({templateid : tempId})\n    Axios.get(\"/template\")\n      .then(({ data }) => this.setState({ templates: data.templates }))\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n    const { templateid } = this.props.match.params;\n    let { templatename, images, /*cid*/ } = this.state;\n    templateid &&\n      Axios.get(`/template/${templateid}`)\n        .then(({ data }) => {\n          if (!data.templates[0].data) {\n            data.templates[0].data = {};\n            this.state.data[\"ebay\"][\"check\"] = false;\n            this.state.data[\"poshmark\"][\"check\"] = false;\n            this.state.data[\"mercari\"][\"check\"] = false;\n            this.state.data[\"delist\"][\"check\"] = false;\n          } else {\n            this.setState({ data: data.templates[0].data });\n            this.state.data[\"ebay\"][\"title\"] =\n              data.templates[0].data.ebay.title;\n            this.state.data[\"poshmark\"][\"title\"] =\n              data.templates[0].data.poshmark.title;\n            this.state.data[\"mercari\"][\"title\"] =\n              data.templates[0].data.mercari.title;\n            this.state.data[\"delist\"][\"title\"] =\n              data.templates[0].data.delist.title;\n            if (data.templates[0].data.images)\n              images.forEach((image) => {\n                image.img = data.templates[0].data.images[image.key];\n              });\n            this.setState({ images });\n\n            if (data.templates[0].data.extraMeasures) {\n              this.state.extraMeasures = JSON.parse(\n                data.templates[0].data.extraMeasures\n              );\n              this.state.count = this.state.extraMeasures.length + 1;\n            }\n\n            if (data.templates[0].data.others) {\n              this.state.otherfromdb = JSON.parse(\n                data.templates[0].data.others\n              );\n              this.state.otherfromdb.forEach((db, i) => {\n                this.state.othersstate[i] = db.status;\n              });\n            }\n          }\n\n          templatename = data.templates[0].name;\n          this.setState({ templatename });\n\n          this.setState({ tempcheck: true });\n        })\n        .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n    if (!templateid) {\n      this.state.data[\"ebay\"][\"check\"] = false;\n      this.state.data[\"poshmark\"][\"check\"] = false;\n      this.state.data[\"mercari\"][\"check\"] = false;\n      this.state.data[\"delist\"][\"check\"] = false;\n    }\n\n    Axios.get(\"/password/getstatus\").then(({ data }) => {\n      this.setState({ Ebay: data.Ebay });\n      this.setState({ Poshmark: data.Poshmark });\n      this.setState({ Mercari: data.Mercari });\n    });\n\n    Axios.get(\"/password/getstatus/others\").then(({ data }) => {\n      if (data.length > 0) {\n        this.setState({ othersbool: true });\n        data.forEach((d, i) => {\n          const others = [...this.state.others];\n          others.push(d);\n          this.setState({ others });\n\n          const otherss = [...this.state.othersstate];\n          otherss.push(false);\n          this.setState({ othersstate: otherss });\n          //console.log(this.state.othersstate)\n        });\n      }\n    });\n\n    Axios.get(\"/clientdetails\")\n      .then(({ data }) => {\n        this.setState({ bal: data.balance });\n        this.setState({ cid: data._id }, () =>\n          localStorage.setItem(\"cid\", this.state.cid)\n        );\n        // socket.emit(\"cidinit\", { cid: this.state.cid });\n        // console.log(this.state.cid);\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n\n    Axios.get(\"/payment/rates\")\n      .then((res) => {\n        //rates = res.data[res.data.length - 1];\n        this.setState({ rates: res.data[res.data.length - 1] });\n      })\n      .catch((err) => console.log(err) || alert(JSON.stringify(err)));\n  };\n  // setImage = (i) => {\n  //   const { images } = this.state;\n  //   i.img.forEach((imgi) => {\n  //     if (imgi.cid == localStorage.getItem(\"cid\"))\n  //       images[imgi.index].img = imgi.name;\n  //   });\n  //   this.setState({\n  //     images,\n  //   });\n  // };\n\n  // imgStatusHandler = () => {\n  //   const { cid } = this.state;\n  //   console.log(\"called imgStatusHandler\");\n  //   socket.emit(\"getuploadstatus\", { cid: cid });\n  //   socket.on(\"imgupload\", (i) => {\n  //     console.log(\"imgcnt:\" + i.imgcnt);\n  //     var imglen = this.state.images.filter((i) => {\n  //       if (i.img !== \"\") {\n  //         return true;\n  //       }\n  //     });\n  //     console.log(imglen.length);\n  //     if (i.cid == cid && imglen.length == i.imgcnt) {\n  //       return false;\n  //     } else {\n  //       return true;\n  //     }\n  //   });\n  // };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const { data } = this.state;\n    if (name === \"title\") {\n      data[name] = e.target.value.replace(/[^\\w\\s]/gi, \"\");\n    } else {\n      data[name] = value;\n    }\n    this.setState({ data });\n  };\n\n  handleChangepop = (e) => {\n    const { name, value } = e.target;\n    if (value === \"Others\") {\n      this.setState({ otherssignal: true });\n    } else {\n      if (value === \"Ebay\" || value === \"Poshmark\" || value === \"Mercari\") {\n        this.setState({ otherssignal: false });\n      }\n      this.setState({ [name]: value });\n    }\n  };\n\n  handleOtherTitles = (e) => {\n    const { name, value } = e.target;\n    const { data } = this.state;\n    data[name][\"title\"] = value;\n    this.setState({ data });\n  };\n\n  handleDescriptionLabel = (id, e) => {\n    const { value } = e.target;\n    const { extraDescriptions } = this.state;\n    extraDescriptions.forEach((description) => {\n      if (description.id === id) {\n        description.key = value;\n      }\n    });\n    this.setState({ extraDescriptions });\n    console.log(extraDescriptions);\n  };\n\n  handleMeasureLabel = (id, e) => {\n    const { value } = e.target;\n    const { extraMeasures } = this.state;\n    extraMeasures.forEach((measure) => {\n      if (measure.id === id) {\n        measure.label = value;\n      }\n    });\n    this.setState({ extraMeasures });\n    console.log(extraMeasures);\n  };\n\n  handleDescriptionChange = (id, e) => {\n    const { value } = e.target;\n    const { extraDescriptions } = this.state;\n    extraDescriptions.forEach((description) => {\n      if (description.id === id) {\n        description.value = value;\n      }\n    });\n    this.setState({ extraDescriptions });\n    console.log(extraDescriptions);\n  };\n\n  handleMeasureChange = (id, e) => {\n    const { value } = e.target;\n    const { extraMeasures } = this.state;\n    extraMeasures.forEach((measure) => {\n      if (measure.id === id) {\n        measure.val = value;\n      }\n    });\n    this.setState({ extraMeasures });\n    console.log(extraMeasures);\n  };\n\n  addMeasure = (e) => {\n    const { extraMeasures, count } = this.state;\n    extraMeasures.push({ label: \"\", val: \"\", id: count });\n    this.setState({ extraMeasures });\n    this.setState({ count: count + 1 });\n  };\n\n  addDescription = () => {\n    console.log(\"add description\");\n    const { extraDescriptions, count1 } = this.state;\n    extraDescriptions.push({ key: \"\", value: \"\", id: count1 });\n    console.log(extraDescriptions);\n    this.setState({ extraDescriptions });\n    this.setState({ count1: count1 + 1 });\n  };\n\n  removeMeasure = (id, e) => {\n    const { extraMeasures, count } = this.state;\n\n    this.setState({\n      extraMeasures: extraMeasures.filter((measure) => {\n        return measure.id !== id;\n      }),\n    });\n    this.setState({ count: count - 1 });\n  };\n  removeDescription = (id, e) => {\n    const { extraDescriptions, /*count1*/ } = this.state;\n    this.setState({\n      extraDescriptions: extraDescriptions.filter((description) => {\n        return description.id !== id;\n      }),\n    });\n  };\n\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { data, images, extraMeasures, extraDescriptions } = this.state;\n    const { templateid } = this.props.match.params;\n    const dataform = new FormData();\n\n    if (images[0].img === \"\" && !templateid) {\n      return alert(\"Atleast First Image is required\");\n    }\n\n    if (data.condition_name === undefined && !templateid) {\n      return alert(\"Condition is required\");\n    }\n\n    // if (data.sku == undefined && !templateid) {\n    //   return alert(\"SKU is required\");\n    // }\n\n    var y = [];\n    this.state.others.forEach((o, i) => {\n      let obj = {\n        name: o,\n        status: this.state.othersstate[i],\n        url: \"\",\n      };\n      y.push(obj);\n    });\n    //console.log(y);\n\n    var mplace = true;\n\n    if (\n      this.state.Ebay === true ||\n      this.state.Poshmark === true ||\n      this.state.Mercari === true ||\n      this.state.others.length !== 0\n    ) {\n      mplace = true;\n    } else {\n      if (!templateid) {\n        mplace = false;\n        return $(\"#addTemplateModal\").modal(\"show\");\n      }\n      //return alert(\"Please have marketplace logins atleast\")\n    }\n\n    var flag = 0;\n    this.state.othersstate.forEach((os) => {\n      if (os === true) {\n        flag = 1;\n      }\n    });\n\n    if (\n      (this.state.Ebay && this.state.data.ebay.check === true) ||\n      (this.state.Poshmark && this.state.data.poshmark.check === true) ||\n      (this.state.Mercari && this.state.data.mercari.check === true)\n    ) {\n      if (!templateid) flag = 1;\n    }\n\n    if (mplace === true && flag === 0 && !templateid) {\n      return alert(\"Please choose any marketplace to list the product\");\n    }\n\n    //bal check routine\n    var cnt = 0;\n\n    if (this.state.data.ebay.check === true) {\n      cnt++;\n    }\n    if (this.state.data.poshmark.check === true) {\n      cnt++;\n    }\n    if (this.state.data.mercari.check === true) {\n      cnt++;\n    }\n    this.state.othersstate.forEach((os) => {\n      if (os === true) {\n        cnt++;\n        console.log(os);\n      }\n    });\n\n    var rate1 = 0,\n      rate2 = 0,\n      rate3 = 0;\n    var total = 0;\n    rate1 = (this.state.rates.basic / 100) * 1;\n    rate2 = (this.state.rates.advance / 100) * (cnt - 1);\n    if (this.state.data.delist.check === true) {\n      rate3 = (this.state.rates.list / 100) * (cnt - 1);\n    }\n    total = rate1 + rate2 + rate3;\n    console.log(rate1);\n    console.log(rate2);\n    console.log(rate3);\n    console.log(this.state.bal);\n    if (this.state.bal - total < 0) {\n      return alert(\"Insufficient balance\");\n    }\n    this.setState({ isSubmitting: true });\n\n    dataform.append(\"extraMeasures\", JSON.stringify(extraMeasures));\n    dataform.append(\"sku\", data.sku || \"\");\n\n    dataform.append(\"quantity\", data.quantity || 1);\n    dataform.append(\"price\", data.price || 0);\n    dataform.append(\"brand\", data.brand || \"\");\n    dataform.append(\"model\", data.model || \"\");\n    dataform.append(\"title\", data.title);\n    dataform.append(\"shortDescription\", data.shortDescription || \"\");\n    dataform.append(\"notes\", data.notes)\n    dataform.append(\"condition_name\", data.condition_name);\n    dataform.append(\"ebay\", data.ebay.title);\n    dataform.append(\"mercari\", data.mercari.title);\n    dataform.append(\"poshmark\", data.poshmark.title);\n    dataform.append(\"delist\", data.delist.title);\n    dataform.append(\"ebayc\", data.ebay.check);\n    dataform.append(\"mercaric\", data.mercari.check);\n    dataform.append(\"poshmarkc\", data.poshmark.check);\n    dataform.append(\"delistc\", data.delist.check);\n    dataform.append(\"colorShade\", data.colorShade || \"\");\n    dataform.append(\"material\", data.material || \"\");\n    dataform.append(\"modelNo\", data.modelNo || \"\");\n    dataform.append(\"size\", data.size || \"\");\n    dataform.append(\"style\", data.style || \"\");\n    dataform.append(\"pattern\", data.pattern || \"\");\n    dataform.append(\"category\", data[\"category\"]);\n    dataform.append(\"seasonOrWeather\", data.seasonOrWeather || \"\");\n    dataform.append(\"care\", data.care || \"\");\n    dataform.append(\"inseam\", data.inseam || \"\");\n    dataform.append(\"rise\", data.rise || \"\");\n    dataform.append(\"waist\", data.waist || \"\");\n    dataform.append(\"activity\", \"advanced\");\n    dataform.append(\"bottomDescription\", data.bottomDescription || \"\");\n    dataform.append(\"msrp\", data.msrp || 0);\n    dataform.append(\"upc\", data.upc || \"\");\n    dataform.append(\"keywords\", data.keywords || \"\");\n    dataform.append(\"note\", data.note || \"\");\n    dataform.append(\"weightLB\", data.weightLB || 0);\n    dataform.append(\"weightOZ\", data.weightOZ || 0);\n    dataform.append(\"zipCode\", data.zipCode || 0);\n    dataform.append(\"packageLength\", data.packageLength || 0);\n    dataform.append(\"packageWidth\", data.packageWidth || 0);\n    dataform.append(\"packageHeight\", data.packageHeight || 0);\n    dataform.append(\"costOfGoods\", data.costOfGoods || 0);\n    dataform.append(\"shippingFees\", data.shippingFees || 0);\n    dataform.append(\"profit\", data.profit || 0);\n    dataform.append(\"status\", true);\n    dataform.append(\"listed\", false);\n    dataform.append(\"line\", JSON.stringify(extraDescriptions))\n    dataform.append(\"line1\", {line1:data.line1,value1:data.value1});\n    dataform.append(\"line2\", {line2:data.line2,value2:data.value2});\n    dataform.append(\"line3\", {line3:data.line3,value3:data.value3});\n    dataform.append(\"line4\", {line4:data.line4,value4:data.value4});\n    dataform.append(\"line6\", {line6:data.line6,value6:data.value6});\n    dataform.append(\"line7\", {line7:data.line7,value7:data.value7});\n    dataform.append(\"line8\", {line8:data.line8,value8:data.value8});\n    dataform.append(\"line5\", {line5:data.line5,value5:data.value5});\n    dataform.append(\"madeIn\", data.madeIn || \"\");\n    dataform.append(\"gender\", data.gender || \"\");\n    dataform.append(\"others\", JSON.stringify(y));\n    dataform.append(\"rate1\", rate1);\n    dataform.append(\"rate2\", rate2);\n    dataform.append(\"rate3\", rate3);\n    var tempimg = [];\n    for (let i = 0; i < this.state.imglen; i++) {\n      if (\n        document\n          .getElementById(i)\n          .src.substring(0, document.getElementById(i).src.indexOf(\":\")) ===\n          \"http\" ||\n        document\n          .getElementById(i)\n          .src.substring(0, document.getElementById(i).src.indexOf(\":\")) ===\n          \"https\"\n      ) {\n        let obj = {};\n        obj[document.getElementById(i).name] = document.getElementById(i).src;\n        tempimg.push(obj);\n      }\n    }\n    if (tempimg.length > 0) {\n      dataform.append(\"imgFromSite\", JSON.stringify(tempimg));\n      console.log(tempimg);\n    }\n\n    images.forEach((image) => {\n      if (!!image.img) dataform.append(image.key, image.img);\n    });\n\n    // var object = {};\n    // dataform.forEach(function (value, key) {\n    //   object[key] = value;\n    // });\n\n    // if (this.imgStatusHandler() && !templateid) {\n    //   this.setState({ isSubmitting: false });\n    //   return alert(\"Please Wait! Images are uploading.....\");\n    // }\n\n    templateid\n      ? Axios.put(`/template/${templateid}`, dataform, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            \"x-access-token\": `${localStorage.getItem(\"token\")}`,\n          },\n        })\n          .then((response) => {\n            console.log(response)\n            window.open(\"/templates\", \"_self\");\n          })\n          .catch((err) => {\n            this.setState({ isSubmitting: false });\n            console.log(err) || alert(JSON.stringify({ err: err }));\n          })\n      : Axios.post(\"/product\", dataform, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            \"x-access-token\": `${localStorage.getItem(\"token\")}`,\n          },\n        })\n          .then((response) => {\n            window.open(\"/products/submitted\", \"_self\");\n          })\n          .catch((err) => {\n            this.setState({ isSubmitting: true });\n            console.log(err) || alert(JSON.stringify({ err: err }));\n          });\n  };\n\n  handleSubmit = (e) => {\n    const { website, username, password, /*users*/ } = this.state;\n    e.preventDefault();\n    if (website !== \"\" && username !== \"\" && password !== \"\") {\n      this.setState({ loading: true });\n      Axios.post(\"/password\", {\n        website: website,\n        username: username,\n        password: password,\n      })\n        .then((response) => {\n          this.setState({ loading: false });\n          alert(\"Login details has been added\");\n          Axios.get(\"/password/getstatus\").then(({ data }) => {\n            //console.log(data);\n            this.setState({ Ebay: data.Ebay });\n            this.setState({ Poshmark: data.Poshmark });\n            this.setState({ Mercari: data.Mercari });\n          });\n\n          Axios.get(\"/password/getstatus/others\").then(({ data }) => {\n            //console.log(data);\n            if (data.length > 0) {\n              this.setState({ othersbool: true });\n              data.forEach((d, i) => {\n                const others = [...this.state.others];\n                others.push(d);\n                this.setState({ others });\n\n                const otherss = [...this.state.othersstate];\n                otherss.push(true);\n                this.setState({ othersstate: otherss });\n              });\n            }\n          });\n\n          // let user = {\n          //   website: website,\n          //   username: username,\n          //   password: password,\n          // };\n          // users.push(user);\n\n          // this.setState({ [website]: false });\n\n          // this.setState(\n          //   {\n          //     users: users,\n          //   },\n          //   () => {\n          //     this.setState({\n          //       username: \"\",\n          //       password: \"\",\n          //       website: \"\",\n          //     });\n          //   }\n          // );\n        })\n        .catch((err) => {\n          this.setState({ isSubmitting: true });\n          console.log(err) || alert(JSON.stringify({ err: err }));\n        });\n    } else {\n      alert(\"Fill up the details\");\n    }\n  };\n\n  toggleSelectedWebsite = (str) => {\n    const { data } = this.state;\n    data[str][\"check\"] = !data[str][\"check\"];\n    this.setState({ data });\n  };\n\n  toggleSelectedOthersWebsite = (i) => {\n    const { othersstate } = this.state;\n    othersstate[i] = !othersstate[i];\n    this.setState({ othersstate });\n  };\n\n  handleImageChange = async (event) => {\n    const { images, /*cid*/ } = this.state;\n    const options = {\n      maxSizeMB: 0.3,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n    const idx = images.findIndex((image) => image.key === event.target.name);\n    try {\n      this.setState({ isSubmitting: true });\n      let compressedFile = await imageCompression(\n        event.target.files[0],\n        options\n      );\n      images[idx].img = compressedFile;\n      this.setState({\n        images,\n      });\n      this.setState({ isSubmitting: false });\n    } catch (error) {\n      console.log(error);\n    }\n    // console.log(images);\n\n    // var reader = new FileReader();\n    // reader.readAsDataURL(event.target.files[0]);\n    // reader.onload = function () {\n    //   //console.log(reader.result);\n    //   socket.emit(\"img\", {\n    //     key: images[idx].key,\n    //     base64: reader.result,\n    //     cid: cid,\n    //   });\n    // };\n    // reader.onerror = function (error) {\n    //   console.log(\"Error: \", error);\n    // };\n  };\n\n  handleBulkUpload = async (e) => {\n    const { images, /*cid*/ } = this.state;\n    //var imgobj = [];\n    const files = e.target.files;\n    const count = files.length;\n    console.log(\"bulk image change\");\n    const options = {\n      maxSizeMB: 0.3,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n    this.setState({ isSubmitting: true });\n    for (let i = 0; i < count; i++) {\n      const idx = images.findIndex((image) => !image.img);\n      if (idx > -1) {\n        try {\n          console.log(files[i]);\n          let compressedFile = await imageCompression(files[i], options);\n          console.log(compressedFile);\n          images[idx].img = compressedFile;\n          this.setState({ images }, () => console.log(this.state.images));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n    this.setState({ isSubmitting: false });\n\n    //this.setState({ images }, () => console.log(this.state.images));\n\n    // images.forEach((i) => {\n    //   var reader = new FileReader();\n    //   if (i.img !== \"\") {\n    //     reader.readAsDataURL(i.img);\n    //     reader.onload = function () {\n    //       //console.log(reader.result);\n    //       imgobj.push({ base64: reader.result, cid: cid, key: i.key });\n    //       // setTimeout(() => {\n    //       //   socket.emit(\"img\", {\n    //       //     key: i.key,\n    //       //     base64: reader.result,\n    //       //     cid: cid,\n    //       //   });\n    //       // }, 1000);\n    //     };\n    //     reader.onerror = function (error) {\n    //       console.log(\"Error: \", error);\n    //     };\n    //   }\n    // });\n\n    // setTimeout(() => {\n    //   // var imglen = this.state.images.filter((i) => {\n    //   //   if (i.img !== \"\") {\n    //   //     return true;\n    //   //   }\n    //   // });\n    //   // if (imgobj.length == imglen.length) {\n    //   //   console.log(imgobj);\n    //   // let img1 = imgobj.slice(0, 6);\n    //   // console.log(img1);\n    //   // let img2 = imgobj.slice(6, 12);\n    //   // console.log(img2);\n    //   //if (img1 !== null) {\n    //   socket.emit(\"bimg\", {\n    //     bimg: imgobj,\n    //     cid: cid,\n    //   });\n    //   //}\n\n    //   // setTimeout(() => {\n    //   //   if (img2 !== null) {\n    //   //     socket.emit(\"bimg2\", {\n    //   //       bimg: img2,\n    //   //       cid: cid,\n    //   //     });\n    //   //   }\n    //   // }, 5000);\n    //   //}\n    // }, 2000);\n  };\n\n  removeImg = (idx) => {\n    const { images } = this.state;\n    images[idx].img = \"\";\n    this.setState({ images });\n  };\n\n  exthandle = (e) => {\n    const { images, /*imglen*/ } = this.state;\n    console.log(\"detected\");\n    images.forEach((i, idx) => {\n      if (e.target.value > idx) i.img = \"true\";\n    });\n    this.setState({\n      imglen: e.target.value,\n    });\n    this.setState({\n      images,\n    });\n\n    //console.log(document.getElementsByTagName(\"img\"));\n  };\n  setCategory = (str) => {\n    const { data } = this.state;\n    data[\"category\"] = str;\n    this.setState({ data });\n  };\n\n    handleDelete = async () => {\n     const id = this.props.match.params.templateid\n     \n     Axios.delete(`/template/${id}`, {\n      headers: {\n        \"x-access-token\": `${localStorage.getItem(\"token\")}`,\n      },\n    }) \n    .then((response) => {\n      window.open(\"/templates\", \"_self\");\n    })\n    .catch((err) => {\n      console.log(err) || alert(JSON.stringify({ err: err }));\n    });\n\n  }\n  handleUrl = (e) => {\n    const { name, value } = e.target;\n    const { data } = this.state;\n    data[name][\"url\"] = value;\n    this.setState({ data });\n  };\n  render = () => {\n    const {\n      website,\n      username,\n      password,\n      //users,\n      otherssignal,\n      data,\n      images,\n      isSubmitting,\n      templates,\n      extraMeasures,\n      Ebay,\n      Poshmark,\n      Mercari,\n      templatename,\n      othersbool,\n      others,\n      othersstate,\n      tempcheck,\n      cid,\n    } = this.state;\n    const { templateid } = this.props.match.params;\n    return (\n      <div className=\"container-fluid px-3 template\">\n        {templateid ? (\n          <Link to=\"/templates\">\n            <i className=\"fa fa-arrow-left mt-3\" aria-hidden=\"true\"></i>\n          </Link>\n        ) : (\n          <Link to=\"/products/submitted\">\n            <i className=\"fa fa-arrow-left mt-3\" aria-hidden=\"true\"></i>\n          </Link>\n        )}\n        <h2 className=\"text-dark d-flex justify-content-lg-center pb-4\">\n          Create or Edit: {templatename}\n        </h2>\n        <div className=\"row\">\n          <div\n            className=\"modal fade  bd-example-modal-sm\"\n            id=\"addTemplateModal\"\n            tabIndex={-1}\n            role=\"dialog\"\n            aria-labelledby=\"addTemplateModalLabel\"\n            aria-hidden=\"true\"\n          >\n            <div\n              className=\"modal-dialog modal-sm  modal-dialog-centered\"\n              role=\"document\"\n            >\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h6 className=\"modal-title\" id=\"addTemplateModalLabel\">\n                    Logins\n                  </h6>\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  >\n                    <span aria-hidden=\"true\">×</span>\n                  </button>\n                </div>\n                <div className=\"col-12 py-2\">\n                  <div className=\"card p-3 mb-3\">\n                    {this.state.loading ? (\n                      <div className=\"center\">\n                        <LoadingSpinner asOverlay />\n                      </div>\n                    ) : null}\n                    <h6 className=\"mb-3  sub-heading\">\n                      Please enter the logins for each site you want to list &\n                      crosslist to\n                    </h6>\n                    <select\n                      className=\"form-control body-text\"\n                      name=\"website\"\n                      value={website}\n                      onChange={this.handleChangepop}\n                    >\n                      <option>Select Site</option>\n                      {Ebay ? null : <option defaultValue=\"Ebay\">Ebay</option>}\n                      {Poshmark ? null : (\n                        <option defaultValue=\"Poshmark\">Poshmark</option>\n                      )}\n                      {Mercari ? null : (\n                        <option defaultValue=\"Mercari\">Mercari</option>\n                      )}\n                      <option defaultValue=\"other\">Others</option>\n                    </select>\n                    <br />\n                    {otherssignal ? (\n                      <>\n                        <input\n                          type=\"text\"\n                          placeholder=\"Website\"\n                          className=\"form-control mt-3\"\n                          name=\"website\"\n                          defaultValue=\"\"\n                          onChange={this.handleChangepop}\n                        />\n                      </>\n                    ) : null}\n                    <input\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      className=\"form-control mt-3 body-text\"\n                      name=\"username\"\n                      value={username}\n                      onChange={this.handleChangepop}\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Password\"\n                      className=\"form-control mt-3\"\n                      name=\"password\"\n                      value={password}\n                      onChange={this.handleChangepop}\n                    />\n                    <div className=\"text-center\">\n                      <button\n                        className=\"btn btn-danger mt-3 text-center\"\n                        onClick={this.handleSubmit}\n                      >\n                        Add\n                      </button>\n                      <br />\n                      <br />\n                      <h6>\n                        You can always add more logins under setting in the\n                        future\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-12 col-lg-6 pr-4\">\n            <div className=\"dropdown\">\n              <button\n                className=\"btn btn-outline-primary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n              >\n                Choose Template\n                <span className=\"caret\"></span>\n              </button>\n              <ul className=\"dropdown-menu\">\n                {templates && templates.length !== 0 ? (\n                  templates.forEach((template) => {\n                    return (\n                      <li>\n                        <button\n                          className=\"btn colorIt\"\n                          style={{ width: \"100%\", textAlign: \"left\" }}\n                          id=\"dropdownMenuOffset\"\n                          onClick={() => this.setTemplate(template._id)}\n                        >\n                          {template.name}\n                        </button>\n                      </li>\n                    );\n                  })\n                ) : (\n                  <li>No Templates created</li>\n                )}\n              </ul>\n            </div>\n            <LeftSection\n              data={data}\n              images={images}\n              Ebay={Ebay}\n              Poshmark={Poshmark}\n              Mercari={Mercari}\n              othersbool={othersbool}\n              others={others}\n              othersstate={othersstate}\n              cid={cid}\n              isSubmitting={isSubmitting}\n              toggleSelectedOthersWebsite={this.toggleSelectedOthersWebsite}\n              handleChange={this.handleChange}\n              removeImg={this.removeImg}\n              extraMeasures={extraMeasures}\n              addMeasure={this.addMeasure}\n              removeMeasure={this.removeMeasure}\n              handleMeasureChange={this.handleMeasureChange}\n              handleMeasureLabel={this.handleMeasureLabel}\n              handleBulkUpload={this.handleBulkUpload}\n              handleImageChange={this.handleImageChange}\n              handleOtherTitles={this.handleOtherTitles}\n              toggleSelectedWebsite={this.toggleSelectedWebsite}\n              exthandle={this.exthandle}\n              setImage={this.setImage}\n              setCategory={this.setCategory}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 pl-lg-3\">\n            <RightSection\n              data={data}\n              toggleSelectedWebsite={this.toggleSelectedWebsite}\n              handleChange={this.handleChange}\n              templatename={templatename}\n              tempcheck={tempcheck}\n              images={images}\n              removeImg={this.removeImg}\n              extraMeasures={extraMeasures}\n              extraDescriptions={this.state.extraDescriptions}\n              addMeasure={this.addMeasure}\n              addDescription={this.addDescription}\n              handleMeasureChange={this.handleMeasureChange}\n              handleDescriptionChange={this.handleDescriptionChange}\n              handleMeasureLabel={this.handleMeasureLabel}\n              handleBulkUpload={this.handleBulkUpload}\n              handleDescriptionLabel={this.handleDescriptionLabel}\n              handleImageChange={this.handleImageChange}\n              handleOtherTitles={this.handleOtherTitles}\n              removeDescription={this.removeDescription}\n              templateid = {this.state.templateid}\n              handleUrl = {this.handleUrl}\n              \n            />\n          </div>\n        </div>\n        <div className=\"row d-lg-flex justify-content-lg-center\">\n          <div className=\"col-12 col-lg-3 mt-2\">\n            {isSubmitting ? (\n              <button\n                className=\"btn btn-success mb-4 btn-block col-12 mr-auto col-lg-12\"\n                disabled\n              >\n                <span\n                  className=\"spinner-border spinner-border-sm mr-2\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                {templateid ? \"Saving...\" : \"Submitting...\"}\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-success mb-4 btn-block col-12 mr-auto col-lg-12\"\n                onClick={this.onSubmit}\n              >\n                {templateid ? \"Save\" : \"Submit\"}\n              </button>\n            )}\n          </div>\n          <div className=\"col-12 col-lg-3 mt-2\">\n            <input\n              type=\"button\"\n              defaultValue=\"Cancel\"\n              onClick={() => window.open(\"/products/submitted\", \"_self\")}\n              className=\"btn btn-danger mb-4 btn-block col-12 mr-auto col-lg-12\"\n            />\n          </div>\n          {templateid ? <button\n                className=\"btn btn-danger mb-4 btn-block col-3 mr-auto\"\n                onClick={this.handleDelete}\n              >Delete</button>: \"\"}\n\n        </div>\n      </div>\n    );\n  };\n}\n","C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\login\\Login.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Passwords\\Editdomain.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Passwords\\Passwords.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Payment\\PaymentComponent.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Templates\\Templates.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Charts\\charts.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\AcceptUrl\\AcceptUrl.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\config\\title.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\resetpassword\\resetpassword.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\EditForm\\components\\ebayModal.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\utils\\Search.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\searchcart\\Comment.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\Payment\\AddPayment.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\Components\\LeftSection.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Components\\pagination\\Pagination.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\Components\\RightSection.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\Components\\Input.jsx",[],"C:\\Users\\nagvr\\Documents\\Submission API\\Hammoq-Client-development\\src\\Pages\\TemplateForm\\Components\\ButtonGroup.jsx",[],{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":1,"column":38,"nodeType":"393","messageId":"394","endLine":1,"endColumn":44},{"ruleId":"391","severity":1,"message":"395","line":1,"column":46,"nodeType":"393","messageId":"394","endLine":1,"endColumn":55},{"ruleId":"396","severity":1,"message":"397","line":15,"column":6,"nodeType":"398","endLine":15,"endColumn":8,"suggestions":"399"},{"ruleId":"391","severity":1,"message":"400","line":99,"column":10,"nodeType":"393","messageId":"394","endLine":99,"endColumn":18},{"ruleId":"391","severity":1,"message":"401","line":99,"column":20,"nodeType":"393","messageId":"394","endLine":99,"endColumn":31},{"ruleId":"391","severity":1,"message":"402","line":8,"column":21,"nodeType":"393","messageId":"394","endLine":8,"endColumn":30},{"ruleId":"391","severity":1,"message":"403","line":9,"column":8,"nodeType":"393","messageId":"394","endLine":9,"endColumn":10},{"ruleId":"391","severity":1,"message":"404","line":10,"column":8,"nodeType":"393","messageId":"394","endLine":10,"endColumn":26},{"ruleId":"391","severity":1,"message":"405","line":85,"column":13,"nodeType":"393","messageId":"394","endLine":85,"endColumn":16},{"ruleId":"391","severity":1,"message":"406","line":85,"column":18,"nodeType":"393","messageId":"394","endLine":85,"endColumn":24},{"ruleId":"407","severity":1,"message":"408","line":105,"column":25,"nodeType":"409","messageId":"410","endLine":105,"endColumn":27},{"ruleId":"411","severity":1,"message":"412","line":139,"column":71,"nodeType":"413","messageId":"414","endLine":139,"endColumn":73},{"ruleId":"391","severity":1,"message":"405","line":200,"column":13,"nodeType":"393","messageId":"394","endLine":200,"endColumn":16},{"ruleId":"391","severity":1,"message":"405","line":242,"column":21,"nodeType":"393","messageId":"394","endLine":242,"endColumn":24},{"ruleId":"411","severity":1,"message":"412","line":249,"column":23,"nodeType":"413","messageId":"414","endLine":249,"endColumn":25},{"ruleId":"411","severity":1,"message":"412","line":253,"column":27,"nodeType":"413","messageId":"414","endLine":253,"endColumn":29},{"ruleId":"411","severity":1,"message":"412","line":253,"column":72,"nodeType":"413","messageId":"414","endLine":253,"endColumn":74},{"ruleId":"407","severity":1,"message":"408","line":258,"column":34,"nodeType":"409","messageId":"410","endLine":258,"endColumn":36},{"ruleId":"411","severity":1,"message":"412","line":271,"column":23,"nodeType":"413","messageId":"414","endLine":271,"endColumn":25},{"ruleId":"411","severity":1,"message":"412","line":272,"column":27,"nodeType":"413","messageId":"414","endLine":272,"endColumn":29},{"ruleId":"411","severity":1,"message":"412","line":273,"column":26,"nodeType":"413","messageId":"414","endLine":273,"endColumn":28},{"ruleId":"411","severity":1,"message":"415","line":274,"column":32,"nodeType":"413","messageId":"414","endLine":274,"endColumn":34},{"ruleId":"411","severity":1,"message":"412","line":285,"column":14,"nodeType":"413","messageId":"414","endLine":285,"endColumn":16},{"ruleId":"411","severity":1,"message":"412","line":290,"column":24,"nodeType":"413","messageId":"414","endLine":290,"endColumn":26},{"ruleId":"411","severity":1,"message":"412","line":290,"column":51,"nodeType":"413","messageId":"414","endLine":290,"endColumn":53},{"ruleId":"411","severity":1,"message":"412","line":291,"column":28,"nodeType":"413","messageId":"414","endLine":291,"endColumn":30},{"ruleId":"411","severity":1,"message":"412","line":291,"column":59,"nodeType":"413","messageId":"414","endLine":291,"endColumn":61},{"ruleId":"411","severity":1,"message":"412","line":292,"column":27,"nodeType":"413","messageId":"414","endLine":292,"endColumn":29},{"ruleId":"411","severity":1,"message":"412","line":292,"column":57,"nodeType":"413","messageId":"414","endLine":292,"endColumn":59},{"ruleId":"411","severity":1,"message":"412","line":296,"column":16,"nodeType":"413","messageId":"414","endLine":296,"endColumn":18},{"ruleId":"411","severity":1,"message":"412","line":296,"column":34,"nodeType":"413","messageId":"414","endLine":296,"endColumn":36},{"ruleId":"411","severity":1,"message":"412","line":303,"column":44,"nodeType":"413","messageId":"414","endLine":303,"endColumn":46},{"ruleId":"411","severity":1,"message":"412","line":306,"column":52,"nodeType":"413","messageId":"414","endLine":306,"endColumn":54},{"ruleId":"411","severity":1,"message":"412","line":309,"column":50,"nodeType":"413","messageId":"414","endLine":309,"endColumn":52},{"ruleId":"411","severity":1,"message":"412","line":313,"column":14,"nodeType":"413","messageId":"414","endLine":313,"endColumn":16},{"ruleId":"411","severity":1,"message":"412","line":324,"column":27,"nodeType":"413","messageId":"414","endLine":324,"endColumn":29},{"ruleId":"411","severity":1,"message":"412","line":345,"column":27,"nodeType":"413","messageId":"414","endLine":345,"endColumn":29},{"ruleId":"391","severity":1,"message":"416","line":442,"column":42,"nodeType":"393","messageId":"394","endLine":442,"endColumn":47},{"ruleId":"411","severity":1,"message":"415","line":444,"column":17,"nodeType":"413","messageId":"414","endLine":444,"endColumn":19},{"ruleId":"411","severity":1,"message":"415","line":444,"column":35,"nodeType":"413","messageId":"414","endLine":444,"endColumn":37},{"ruleId":"411","severity":1,"message":"415","line":444,"column":53,"nodeType":"413","messageId":"414","endLine":444,"endColumn":55},{"ruleId":"411","severity":1,"message":"412","line":455,"column":23,"nodeType":"413","messageId":"414","endLine":455,"endColumn":25},{"ruleId":"411","severity":1,"message":"412","line":458,"column":30,"nodeType":"413","messageId":"414","endLine":458,"endColumn":32},{"ruleId":"411","severity":1,"message":"412","line":461,"column":30,"nodeType":"413","messageId":"414","endLine":461,"endColumn":32},{"ruleId":"407","severity":1,"message":"408","line":477,"column":33,"nodeType":"409","messageId":"410","endLine":477,"endColumn":35},{"ruleId":"391","severity":1,"message":"405","line":506,"column":21,"nodeType":"393","messageId":"394","endLine":506,"endColumn":24},{"ruleId":"411","severity":1,"message":"412","line":548,"column":15,"nodeType":"413","messageId":"414","endLine":548,"endColumn":17},{"ruleId":"411","severity":1,"message":"412","line":551,"column":17,"nodeType":"413","messageId":"414","endLine":551,"endColumn":19},{"ruleId":"411","severity":1,"message":"412","line":551,"column":36,"nodeType":"413","messageId":"414","endLine":551,"endColumn":38},{"ruleId":"411","severity":1,"message":"412","line":551,"column":59,"nodeType":"413","messageId":"414","endLine":551,"endColumn":61},{"ruleId":"411","severity":1,"message":"412","line":561,"column":35,"nodeType":"413","messageId":"414","endLine":561,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":562,"column":7,"nodeType":"419","endLine":562,"endColumn":29},{"ruleId":"411","severity":1,"message":"412","line":563,"column":42,"nodeType":"413","messageId":"414","endLine":563,"endColumn":44},{"ruleId":"417","severity":1,"message":"418","line":564,"column":7,"nodeType":"419","endLine":564,"endColumn":29},{"ruleId":"391","severity":1,"message":"405","line":571,"column":21,"nodeType":"393","messageId":"394","endLine":571,"endColumn":24},{"ruleId":"391","severity":1,"message":"420","line":572,"column":9,"nodeType":"393","messageId":"394","endLine":572,"endColumn":15},{"ruleId":"391","severity":1,"message":"416","line":669,"column":7,"nodeType":"393","messageId":"394","endLine":669,"endColumn":12},{"ruleId":"391","severity":1,"message":"421","line":679,"column":7,"nodeType":"393","messageId":"394","endLine":679,"endColumn":18},{"ruleId":"422","severity":1,"message":"423","line":828,"column":27,"nodeType":"424","endLine":828,"endColumn":76},{"ruleId":"422","severity":1,"message":"423","line":837,"column":29,"nodeType":"424","endLine":853,"endColumn":31},{"ruleId":"411","severity":1,"message":"412","line":1188,"column":56,"nodeType":"413","messageId":"414","endLine":1188,"endColumn":58},{"ruleId":"391","severity":1,"message":"425","line":8,"column":10,"nodeType":"393","messageId":"394","endLine":8,"endColumn":13},{"ruleId":"391","severity":1,"message":"426","line":9,"column":10,"nodeType":"393","messageId":"394","endLine":9,"endColumn":22},{"ruleId":"417","severity":1,"message":"418","line":137,"column":11,"nodeType":"419","endLine":137,"endColumn":34},{"ruleId":"417","severity":1,"message":"418","line":138,"column":11,"nodeType":"419","endLine":138,"endColumn":38},{"ruleId":"417","severity":1,"message":"418","line":139,"column":11,"nodeType":"419","endLine":139,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":140,"column":11,"nodeType":"419","endLine":140,"endColumn":36},{"ruleId":"417","severity":1,"message":"418","line":144,"column":15,"nodeType":"419","endLine":144,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":153,"column":11,"nodeType":"419","endLine":153,"endColumn":34},{"ruleId":"417","severity":1,"message":"418","line":154,"column":11,"nodeType":"419","endLine":154,"endColumn":38},{"ruleId":"417","severity":1,"message":"418","line":156,"column":11,"nodeType":"419","endLine":156,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":158,"column":11,"nodeType":"419","endLine":158,"endColumn":36},{"ruleId":"417","severity":1,"message":"418","line":168,"column":13,"nodeType":"419","endLine":168,"endColumn":23},{"ruleId":"417","severity":1,"message":"418","line":171,"column":13,"nodeType":"419","endLine":171,"endColumn":23},{"ruleId":"417","severity":1,"message":"418","line":175,"column":13,"nodeType":"419","endLine":175,"endColumn":23},{"ruleId":"417","severity":1,"message":"418","line":178,"column":15,"nodeType":"419","endLine":178,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":210,"column":9,"nodeType":"419","endLine":210,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":213,"column":9,"nodeType":"419","endLine":213,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":217,"column":9,"nodeType":"419","endLine":217,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":228,"column":7,"nodeType":"419","endLine":228,"endColumn":17},{"ruleId":"417","severity":1,"message":"418","line":234,"column":9,"nodeType":"419","endLine":234,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":238,"column":9,"nodeType":"419","endLine":238,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":242,"column":9,"nodeType":"419","endLine":242,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":259,"column":9,"nodeType":"419","endLine":259,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":262,"column":11,"nodeType":"419","endLine":262,"endColumn":33},{"ruleId":"417","severity":1,"message":"418","line":264,"column":13,"nodeType":"419","endLine":264,"endColumn":33},{"ruleId":"417","severity":1,"message":"418","line":267,"column":13,"nodeType":"419","endLine":267,"endColumn":35},{"ruleId":"417","severity":1,"message":"418","line":284,"column":7,"nodeType":"419","endLine":284,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":285,"column":7,"nodeType":"419","endLine":285,"endColumn":34},{"ruleId":"417","severity":1,"message":"418","line":287,"column":7,"nodeType":"419","endLine":287,"endColumn":33},{"ruleId":"417","severity":1,"message":"418","line":288,"column":7,"nodeType":"419","endLine":288,"endColumn":32},{"ruleId":"391","severity":1,"message":"427","line":804,"column":15,"nodeType":"393","messageId":"394","endLine":804,"endColumn":20},{"ruleId":"391","severity":1,"message":"427","line":917,"column":13,"nodeType":"393","messageId":"394","endLine":917,"endColumn":18},{"ruleId":"391","severity":1,"message":"428","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":15},{"ruleId":"391","severity":1,"message":"429","line":7,"column":8,"nodeType":"393","messageId":"394","endLine":7,"endColumn":20},{"ruleId":"391","severity":1,"message":"430","line":8,"column":8,"nodeType":"393","messageId":"394","endLine":8,"endColumn":15},{"ruleId":"391","severity":1,"message":"431","line":9,"column":17,"nodeType":"393","messageId":"394","endLine":9,"endColumn":26},{"ruleId":"391","severity":1,"message":"432","line":82,"column":13,"nodeType":"393","messageId":"394","endLine":82,"endColumn":23},{"ruleId":"391","severity":1,"message":"433","line":82,"column":25,"nodeType":"393","messageId":"394","endLine":82,"endColumn":37},{"ruleId":"391","severity":1,"message":"434","line":82,"column":39,"nodeType":"393","messageId":"394","endLine":82,"endColumn":44},{"ruleId":"435","severity":1,"message":"436","line":30,"column":54,"nodeType":"413","messageId":"437","endLine":30,"endColumn":55},{"ruleId":"391","severity":1,"message":"438","line":17,"column":8,"nodeType":"393","messageId":"394","endLine":17,"endColumn":18},{"ruleId":"391","severity":1,"message":"439","line":18,"column":8,"nodeType":"393","messageId":"394","endLine":18,"endColumn":16},{"ruleId":"391","severity":1,"message":"440","line":19,"column":8,"nodeType":"393","messageId":"394","endLine":19,"endColumn":19},{"ruleId":"391","severity":1,"message":"441","line":20,"column":8,"nodeType":"393","messageId":"394","endLine":20,"endColumn":14},{"ruleId":"391","severity":1,"message":"442","line":24,"column":7,"nodeType":"393","messageId":"394","endLine":24,"endColumn":10},{"ruleId":"391","severity":1,"message":"443","line":280,"column":7,"nodeType":"393","messageId":"394","endLine":280,"endColumn":21},{"ruleId":"391","severity":1,"message":"444","line":281,"column":7,"nodeType":"393","messageId":"394","endLine":281,"endColumn":20},{"ruleId":"435","severity":1,"message":"436","line":126,"column":33,"nodeType":"413","messageId":"437","endLine":126,"endColumn":34},{"ruleId":"391","severity":1,"message":"445","line":44,"column":7,"nodeType":"393","messageId":"394","endLine":44,"endColumn":12},{"ruleId":"391","severity":1,"message":"446","line":45,"column":7,"nodeType":"393","messageId":"394","endLine":45,"endColumn":15},{"ruleId":"391","severity":1,"message":"447","line":46,"column":7,"nodeType":"393","messageId":"394","endLine":46,"endColumn":15},{"ruleId":"391","severity":1,"message":"448","line":49,"column":7,"nodeType":"393","messageId":"394","endLine":49,"endColumn":14},{"ruleId":"391","severity":1,"message":"449","line":50,"column":7,"nodeType":"393","messageId":"394","endLine":50,"endColumn":11},{"ruleId":"391","severity":1,"message":"450","line":51,"column":7,"nodeType":"393","messageId":"394","endLine":51,"endColumn":12},{"ruleId":"391","severity":1,"message":"451","line":52,"column":7,"nodeType":"393","messageId":"394","endLine":52,"endColumn":10},{"ruleId":"411","severity":1,"message":"412","line":64,"column":15,"nodeType":"413","messageId":"414","endLine":64,"endColumn":17},{"ruleId":"411","severity":1,"message":"412","line":69,"column":17,"nodeType":"413","messageId":"414","endLine":69,"endColumn":19},{"ruleId":"411","severity":1,"message":"412","line":74,"column":19,"nodeType":"413","messageId":"414","endLine":74,"endColumn":21},{"ruleId":"411","severity":1,"message":"412","line":74,"column":37,"nodeType":"413","messageId":"414","endLine":74,"endColumn":39},{"ruleId":"391","severity":1,"message":"446","line":109,"column":7,"nodeType":"393","messageId":"394","endLine":109,"endColumn":15},{"ruleId":"391","severity":1,"message":"447","line":110,"column":7,"nodeType":"393","messageId":"394","endLine":110,"endColumn":15},{"ruleId":"391","severity":1,"message":"448","line":111,"column":7,"nodeType":"393","messageId":"394","endLine":111,"endColumn":14},{"ruleId":"391","severity":1,"message":"450","line":112,"column":7,"nodeType":"393","messageId":"394","endLine":112,"endColumn":12},{"ruleId":"391","severity":1,"message":"451","line":113,"column":7,"nodeType":"393","messageId":"394","endLine":113,"endColumn":10},{"ruleId":"391","severity":1,"message":"449","line":116,"column":7,"nodeType":"393","messageId":"394","endLine":116,"endColumn":11},{"ruleId":"452","severity":1,"message":"453","line":196,"column":11,"nodeType":"424","endLine":196,"endColumn":38},{"ruleId":"391","severity":1,"message":"430","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":15},{"ruleId":"391","severity":1,"message":"454","line":5,"column":8,"nodeType":"393","messageId":"394","endLine":5,"endColumn":15},{"ruleId":"391","severity":1,"message":"455","line":7,"column":8,"nodeType":"393","messageId":"394","endLine":7,"endColumn":18},{"ruleId":"391","severity":1,"message":"456","line":7,"column":22,"nodeType":"393","messageId":"394","endLine":7,"endColumn":33},{"ruleId":"391","severity":1,"message":"457","line":7,"column":35,"nodeType":"393","messageId":"394","endLine":7,"endColumn":46},{"ruleId":"391","severity":1,"message":"458","line":12,"column":10,"nodeType":"393","messageId":"394","endLine":12,"endColumn":19},{"ruleId":"391","severity":1,"message":"459","line":13,"column":10,"nodeType":"393","messageId":"394","endLine":13,"endColumn":18},{"ruleId":"411","severity":1,"message":"415","line":52,"column":69,"nodeType":"413","messageId":"414","endLine":52,"endColumn":71},{"ruleId":"411","severity":1,"message":"412","line":59,"column":45,"nodeType":"413","messageId":"414","endLine":59,"endColumn":47},{"ruleId":"411","severity":1,"message":"415","line":86,"column":66,"nodeType":"413","messageId":"414","endLine":86,"endColumn":68},{"ruleId":"407","severity":1,"message":"408","line":115,"column":25,"nodeType":"409","messageId":"410","endLine":115,"endColumn":27},{"ruleId":"391","severity":1,"message":"460","line":131,"column":11,"nodeType":"393","messageId":"394","endLine":131,"endColumn":19},{"ruleId":"411","severity":1,"message":"412","line":156,"column":36,"nodeType":"413","messageId":"414","endLine":156,"endColumn":38},{"ruleId":"411","severity":1,"message":"415","line":192,"column":66,"nodeType":"413","messageId":"414","endLine":192,"endColumn":68},{"ruleId":"411","severity":1,"message":"415","line":206,"column":64,"nodeType":"413","messageId":"414","endLine":206,"endColumn":66},{"ruleId":"391","severity":1,"message":"461","line":229,"column":13,"nodeType":"393","messageId":"394","endLine":229,"endColumn":20},{"ruleId":"391","severity":1,"message":"462","line":229,"column":22,"nodeType":"393","messageId":"394","endLine":229,"endColumn":32},{"ruleId":"391","severity":1,"message":"463","line":236,"column":7,"nodeType":"393","messageId":"394","endLine":236,"endColumn":10},{"ruleId":"391","severity":1,"message":"464","line":241,"column":7,"nodeType":"393","messageId":"394","endLine":241,"endColumn":13},{"ruleId":"391","severity":1,"message":"421","line":242,"column":7,"nodeType":"393","messageId":"394","endLine":242,"endColumn":18},{"ruleId":"391","severity":1,"message":"465","line":244,"column":7,"nodeType":"393","messageId":"394","endLine":244,"endColumn":14},{"ruleId":"391","severity":1,"message":"466","line":247,"column":7,"nodeType":"393","messageId":"394","endLine":247,"endColumn":20},{"ruleId":"411","severity":1,"message":"415","line":460,"column":35,"nodeType":"413","messageId":"414","endLine":460,"endColumn":37},{"ruleId":"411","severity":1,"message":"415","line":464,"column":35,"nodeType":"413","messageId":"414","endLine":464,"endColumn":37},{"ruleId":"411","severity":1,"message":"412","line":485,"column":53,"nodeType":"413","messageId":"414","endLine":485,"endColumn":55},{"ruleId":"411","severity":1,"message":"412","line":488,"column":56,"nodeType":"413","messageId":"414","endLine":488,"endColumn":58},{"ruleId":"467","severity":1,"message":"468","line":491,"column":37,"nodeType":"424","endLine":491,"endColumn":80},{"ruleId":"411","severity":1,"message":"412","line":501,"column":57,"nodeType":"413","messageId":"414","endLine":501,"endColumn":59},{"ruleId":"411","severity":1,"message":"412","line":504,"column":60,"nodeType":"413","messageId":"414","endLine":504,"endColumn":62},{"ruleId":"467","severity":1,"message":"468","line":507,"column":37,"nodeType":"424","endLine":510,"endColumn":38},{"ruleId":"411","severity":1,"message":"412","line":520,"column":56,"nodeType":"413","messageId":"414","endLine":520,"endColumn":58},{"ruleId":"411","severity":1,"message":"412","line":523,"column":59,"nodeType":"413","messageId":"414","endLine":523,"endColumn":61},{"ruleId":"467","severity":1,"message":"468","line":526,"column":37,"nodeType":"424","endLine":529,"endColumn":38},{"ruleId":"411","severity":1,"message":"412","line":540,"column":55,"nodeType":"413","messageId":"414","endLine":540,"endColumn":57},{"ruleId":"407","severity":1,"message":"469","line":546,"column":70,"nodeType":"409","messageId":"470","endLine":546,"endColumn":72},{"ruleId":"411","severity":1,"message":"412","line":556,"column":52,"nodeType":"413","messageId":"414","endLine":556,"endColumn":54},{"ruleId":"411","severity":1,"message":"415","line":637,"column":35,"nodeType":"413","messageId":"414","endLine":637,"endColumn":37},{"ruleId":"411","severity":1,"message":"415","line":641,"column":35,"nodeType":"413","messageId":"414","endLine":641,"endColumn":37},{"ruleId":"411","severity":1,"message":"412","line":662,"column":53,"nodeType":"413","messageId":"414","endLine":662,"endColumn":55},{"ruleId":"411","severity":1,"message":"412","line":665,"column":56,"nodeType":"413","messageId":"414","endLine":665,"endColumn":58},{"ruleId":"467","severity":1,"message":"468","line":668,"column":37,"nodeType":"424","endLine":668,"endColumn":80},{"ruleId":"411","severity":1,"message":"412","line":678,"column":57,"nodeType":"413","messageId":"414","endLine":678,"endColumn":59},{"ruleId":"411","severity":1,"message":"412","line":681,"column":60,"nodeType":"413","messageId":"414","endLine":681,"endColumn":62},{"ruleId":"467","severity":1,"message":"468","line":684,"column":37,"nodeType":"424","endLine":687,"endColumn":38},{"ruleId":"411","severity":1,"message":"412","line":697,"column":56,"nodeType":"413","messageId":"414","endLine":697,"endColumn":58},{"ruleId":"411","severity":1,"message":"412","line":700,"column":59,"nodeType":"413","messageId":"414","endLine":700,"endColumn":61},{"ruleId":"467","severity":1,"message":"468","line":703,"column":37,"nodeType":"424","endLine":706,"endColumn":38},{"ruleId":"411","severity":1,"message":"412","line":717,"column":55,"nodeType":"413","messageId":"414","endLine":717,"endColumn":57},{"ruleId":"407","severity":1,"message":"469","line":723,"column":70,"nodeType":"409","messageId":"470","endLine":723,"endColumn":72},{"ruleId":"411","severity":1,"message":"412","line":729,"column":52,"nodeType":"413","messageId":"414","endLine":729,"endColumn":54},{"ruleId":"471","severity":1,"message":"472","line":16,"column":1,"nodeType":"473","endLine":1144,"endColumn":2},{"ruleId":"417","severity":1,"message":"418","line":88,"column":11,"nodeType":"419","endLine":88,"endColumn":34},{"ruleId":"417","severity":1,"message":"418","line":89,"column":11,"nodeType":"419","endLine":89,"endColumn":38},{"ruleId":"417","severity":1,"message":"418","line":90,"column":11,"nodeType":"419","endLine":90,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":91,"column":11,"nodeType":"419","endLine":91,"endColumn":36},{"ruleId":"417","severity":1,"message":"418","line":99,"column":15,"nodeType":"419","endLine":99,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":108,"column":11,"nodeType":"419","endLine":108,"endColumn":34},{"ruleId":"417","severity":1,"message":"418","line":109,"column":11,"nodeType":"419","endLine":109,"endColumn":38},{"ruleId":"417","severity":1,"message":"418","line":111,"column":11,"nodeType":"419","endLine":111,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":113,"column":11,"nodeType":"419","endLine":113,"endColumn":36},{"ruleId":"417","severity":1,"message":"418","line":123,"column":13,"nodeType":"419","endLine":123,"endColumn":23},{"ruleId":"417","severity":1,"message":"418","line":126,"column":13,"nodeType":"419","endLine":126,"endColumn":23},{"ruleId":"417","severity":1,"message":"418","line":130,"column":13,"nodeType":"419","endLine":130,"endColumn":23},{"ruleId":"417","severity":1,"message":"418","line":138,"column":13,"nodeType":"419","endLine":138,"endColumn":23},{"ruleId":"417","severity":1,"message":"418","line":140,"column":15,"nodeType":"419","endLine":140,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":162,"column":13,"nodeType":"419","endLine":162,"endColumn":36},{"ruleId":"417","severity":1,"message":"418","line":163,"column":13,"nodeType":"419","endLine":163,"endColumn":40},{"ruleId":"417","severity":1,"message":"418","line":164,"column":13,"nodeType":"419","endLine":164,"endColumn":39},{"ruleId":"417","severity":1,"message":"418","line":165,"column":13,"nodeType":"419","endLine":165,"endColumn":38},{"ruleId":"417","severity":1,"message":"418","line":168,"column":13,"nodeType":"419","endLine":168,"endColumn":36},{"ruleId":"417","severity":1,"message":"418","line":170,"column":13,"nodeType":"419","endLine":170,"endColumn":40},{"ruleId":"417","severity":1,"message":"418","line":172,"column":13,"nodeType":"419","endLine":172,"endColumn":39},{"ruleId":"417","severity":1,"message":"418","line":174,"column":13,"nodeType":"419","endLine":174,"endColumn":38},{"ruleId":"417","severity":1,"message":"418","line":183,"column":15,"nodeType":"419","endLine":183,"endColumn":25},{"ruleId":"417","severity":1,"message":"418","line":186,"column":15,"nodeType":"419","endLine":186,"endColumn":25},{"ruleId":"417","severity":1,"message":"418","line":190,"column":15,"nodeType":"419","endLine":190,"endColumn":25},{"ruleId":"417","severity":1,"message":"418","line":194,"column":17,"nodeType":"419","endLine":194,"endColumn":39},{"ruleId":"417","severity":1,"message":"418","line":206,"column":7,"nodeType":"419","endLine":206,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":207,"column":7,"nodeType":"419","endLine":207,"endColumn":34},{"ruleId":"417","severity":1,"message":"418","line":208,"column":7,"nodeType":"419","endLine":208,"endColumn":33},{"ruleId":"417","severity":1,"message":"418","line":209,"column":7,"nodeType":"419","endLine":209,"endColumn":32},"no-native-reassign",["474"],"no-negated-in-lhs",["475"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'createRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.item.itemPrice', 'props.item.itemShipServ', and 'props.item.itemType'. Either include them or remove the dependency array. If 'setChildItemType' needs the current value of 'props.item.itemType', you can also switch to useReducer instead of useState and read 'props.item.itemType' in the reducer.","ArrayExpression",["476"],"'testIdea' is assigned a value but never used.","'setTestIdea' is assigned a value but never used.","'socketCon' is defined but never used.","'io' is defined but never used.","'SocketIOFileUpload' is defined but never used.","'cid' is assigned a value but never used.","'images' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'users' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'imgobj' is assigned a value but never used.","'othersstate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'has' is defined but never used.","'evaluateTree' is defined but never used.","'count' is assigned a value but never used.","'message' is defined but never used.","'PaymentAlert' is defined but never used.","'Popover' is defined but never used.","'assetsURL' is defined but never used.","'basiccheck' is assigned a value but never used.","'advancecheck' is assigned a value but never used.","'rates' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'max' is assigned a value but never used.","'addDescription' is assigned a value but never used.","'extraMeasures' is assigned a value but never used.","'term2' is assigned a value but never used.","'address1' is assigned a value but never used.","'address2' is assigned a value but never used.","'country' is assigned a value but never used.","'city' is assigned a value but never used.","'state' is assigned a value but never used.","'zip' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Comment' is defined but never used.","'PopupState' is defined but never used.","'bindTrigger' is defined but never used.","'bindPopover' is defined but never used.","'fireEvent' is defined but never used.","'formatMs' is defined but never used.","'response' is assigned a value but never used.","'comment' is assigned a value but never used.","'addComment' is assigned a value but never used.","'bal' is assigned a value but never used.","'others' is assigned a value but never used.","'counter' is assigned a value but never used.","'clientdetails' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","import/no-anonymous-default-export","Unexpected default export of anonymous class","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"477","fix":"478"},"Update the dependencies array to be: [props.item.itemPrice, props.item.itemShipServ, props.item.itemType]",{"range":"479","text":"480"},[640,642],"[props.item.itemPrice, props.item.itemShipServ, props.item.itemType]"]